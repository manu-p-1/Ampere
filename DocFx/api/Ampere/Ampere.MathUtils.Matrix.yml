### YamlMime:ManagedReference
items:
- uid: Ampere.MathUtils.Matrix
  commentId: T:Ampere.MathUtils.Matrix
  id: Matrix
  parent: Ampere.MathUtils
  children:
  - Ampere.MathUtils.Matrix.#ctor(System.Double[0:,0:])
  - Ampere.MathUtils.Matrix.#ctor(System.Int32,System.Int32)
  - Ampere.MathUtils.Matrix.Add(Ampere.MathUtils.Matrix,Ampere.MathUtils.Matrix)
  - Ampere.MathUtils.Matrix.Add(Ampere.MathUtils.Matrix,System.Double)
  - Ampere.MathUtils.Matrix.Cols
  - Ampere.MathUtils.Matrix.Divide(Ampere.MathUtils.Matrix,System.Double)
  - Ampere.MathUtils.Matrix.DotProduct(Ampere.MathUtils.Matrix,Ampere.MathUtils.Matrix)
  - Ampere.MathUtils.Matrix.EqualDimension(Ampere.MathUtils.Matrix,Ampere.MathUtils.Matrix)
  - Ampere.MathUtils.Matrix.Equals(Ampere.MathUtils.Matrix)
  - Ampere.MathUtils.Matrix.Equals(System.Object)
  - Ampere.MathUtils.Matrix.GetEnumerator
  - Ampere.MathUtils.Matrix.GetHashCode
  - Ampere.MathUtils.Matrix.IsColumnVector
  - Ampere.MathUtils.Matrix.IsRowVector
  - Ampere.MathUtils.Matrix.IsSquareVector
  - Ampere.MathUtils.Matrix.Item(System.Int32,System.Int32)
  - Ampere.MathUtils.Matrix.Mod(Ampere.MathUtils.Matrix,System.Double)
  - Ampere.MathUtils.Matrix.Multiply(Ampere.MathUtils.Matrix,System.Double)
  - Ampere.MathUtils.Matrix.Negate(Ampere.MathUtils.Matrix)
  - Ampere.MathUtils.Matrix.op_Addition(Ampere.MathUtils.Matrix,Ampere.MathUtils.Matrix)
  - Ampere.MathUtils.Matrix.op_Addition(Ampere.MathUtils.Matrix,System.Double)
  - Ampere.MathUtils.Matrix.op_Addition(System.Double,Ampere.MathUtils.Matrix)
  - Ampere.MathUtils.Matrix.op_Division(Ampere.MathUtils.Matrix,System.Double)
  - Ampere.MathUtils.Matrix.op_Division(System.Double,Ampere.MathUtils.Matrix)
  - Ampere.MathUtils.Matrix.op_Equality(Ampere.MathUtils.Matrix,Ampere.MathUtils.Matrix)
  - Ampere.MathUtils.Matrix.op_Inequality(Ampere.MathUtils.Matrix,Ampere.MathUtils.Matrix)
  - Ampere.MathUtils.Matrix.op_LogicalNot(Ampere.MathUtils.Matrix)
  - Ampere.MathUtils.Matrix.op_Modulus(Ampere.MathUtils.Matrix,System.Double)
  - Ampere.MathUtils.Matrix.op_Modulus(System.Double,Ampere.MathUtils.Matrix)
  - Ampere.MathUtils.Matrix.op_Multiply(Ampere.MathUtils.Matrix,Ampere.MathUtils.Matrix)
  - Ampere.MathUtils.Matrix.op_Multiply(Ampere.MathUtils.Matrix,System.Double)
  - Ampere.MathUtils.Matrix.op_Multiply(System.Double,Ampere.MathUtils.Matrix)
  - Ampere.MathUtils.Matrix.op_Subtraction(Ampere.MathUtils.Matrix,Ampere.MathUtils.Matrix)
  - Ampere.MathUtils.Matrix.op_Subtraction(Ampere.MathUtils.Matrix,System.Double)
  - Ampere.MathUtils.Matrix.op_Subtraction(System.Double,Ampere.MathUtils.Matrix)
  - Ampere.MathUtils.Matrix.Rows
  - Ampere.MathUtils.Matrix.Subtract(Ampere.MathUtils.Matrix,Ampere.MathUtils.Matrix)
  - Ampere.MathUtils.Matrix.Subtract(Ampere.MathUtils.Matrix,System.Double)
  - Ampere.MathUtils.Matrix.System#Collections#IEnumerable#GetEnumerator
  - Ampere.MathUtils.Matrix.ToString
  - Ampere.MathUtils.Matrix.Transpose
  - Ampere.MathUtils.Matrix.Values
  langs:
  - csharp
  - vb
  name: Matrix
  nameWithType: Matrix
  fullName: Ampere.MathUtils.Matrix
  type: Class
  source:
    remote:
      path: Ampere/MathUtils/Matrix.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: Matrix
    path: ../Ampere/MathUtils/Matrix.cs
    startLine: 14
  assemblies:
  - Ampere
  namespace: Ampere.MathUtils
  summary: "\nA class representing a mathematical Matrix. Creates a rectangular\narray of rows and columns with numbers as elements. The Matrix\nclass includes mathematical matrix operations to manipulate it.\n"
  example: []
  syntax:
    content: 'public class Matrix : IMatrixer<double>, IEnumerable<double>, IEnumerable, IIndexableDouble<int, double>'
    content.vb: >-
      Public Class Matrix

          Implements IMatrixer(Of Double), IEnumerable(Of Double), IEnumerable, IIndexableDouble(Of Integer, Double)
  inheritance:
  - System.Object
  implements:
  - Ampere.MathUtils.IMatrixer{System.Double}
  - System.Collections.Generic.IEnumerable{System.Double}
  - System.Collections.IEnumerable
  - Ampere.Base.IIndexableDouble{System.Int32,System.Double}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - System.Collections.Generic.IEnumerable{System.Double}.Ampere.EnumerableUtils.EnumerableUtils.IsNullOrEmpty``1
  - System.Collections.Generic.IEnumerable{System.Double}.Ampere.EnumerableUtils.EnumerableUtils.Shuffle``1
  - System.Collections.Generic.IEnumerable{System.Double}.Ampere.EnumerableUtils.EnumerableUtils.ToString``1(System.String,System.Boolean)
  - System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.Mean``1(System.Func{System.Double,System.Double})
  - System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.Median``1(System.Func{System.Double,System.Double})
  - System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.Mode
  - System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.Mode``1(System.Func{System.Double,System.Double})
  - System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.SampleVariance
  - System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.SampleVariance``1(System.Func{System.Double,System.Double})
  - System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.PopulationVariance
  - System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.PopulationVariance``1(System.Func{System.Double,System.Double})
  - System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.SampleStandardDeviation
  - System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.SampleStandardDeviation``1(System.Func{System.Double,System.Double})
  - System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.PopulationStandardDeviation
  - System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.PopulationStandardDeviation``1(System.Func{System.Double,System.Double})
  - System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.Range
  - System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.Range``1(System.Func{System.Double,System.Double})
  - System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.LowerQuartile
  - System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.LowerQuartile``1(System.Func{System.Double,System.Double})
  - System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.UpperQuartile
  - System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.UpperQuartile``1(System.Func{System.Double,System.Double})
  - System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.InterQuartileRange
  - System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.InterQuartileRange``1(System.Func{System.Double,System.Double})
  - System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.IsNormalProportion(System.Double)
  - System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.IsNormalProportion``1(System.Func{System.Double,System.Double},System.Double)
  - System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.IsNormalMean
  - System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.IsNormalMean``1(System.Func{System.Double,System.Double})
  - System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.StandardizedScore(System.Double)
  - System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.StandardizedScore``1(System.Func{System.Double,System.Double},System.Double)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Ampere.MathUtils.Matrix.Values
  commentId: P:Ampere.MathUtils.Matrix.Values
  id: Values
  parent: Ampere.MathUtils.Matrix
  langs:
  - csharp
  - vb
  name: Values
  nameWithType: Matrix.Values
  fullName: Ampere.MathUtils.Matrix.Values
  type: Property
  source:
    remote:
      path: Ampere/MathUtils/Matrix.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: Values
    path: ../Ampere/MathUtils/Matrix.cs
    startLine: 20
  assemblies:
  - Ampere
  namespace: Ampere.MathUtils
  example: []
  syntax:
    content: public double[, ] Values { get; }
    parameters: []
    return:
      type: System.Double[,]
    content.vb: Public ReadOnly Property Values As Double(,)
  overload: Ampere.MathUtils.Matrix.Values*
  implements:
  - Ampere.MathUtils.IMatrixer{System.Double}.Values
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Ampere.MathUtils.Matrix.Rows
  commentId: P:Ampere.MathUtils.Matrix.Rows
  id: Rows
  parent: Ampere.MathUtils.Matrix
  langs:
  - csharp
  - vb
  name: Rows
  nameWithType: Matrix.Rows
  fullName: Ampere.MathUtils.Matrix.Rows
  type: Property
  source:
    remote:
      path: Ampere/MathUtils/Matrix.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: Rows
    path: ../Ampere/MathUtils/Matrix.cs
    startLine: 23
  assemblies:
  - Ampere
  namespace: Ampere.MathUtils
  example: []
  syntax:
    content: public int Rows { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Rows As Integer
  overload: Ampere.MathUtils.Matrix.Rows*
  implements:
  - Ampere.MathUtils.IMatrixer{System.Double}.Rows
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Ampere.MathUtils.Matrix.Cols
  commentId: P:Ampere.MathUtils.Matrix.Cols
  id: Cols
  parent: Ampere.MathUtils.Matrix
  langs:
  - csharp
  - vb
  name: Cols
  nameWithType: Matrix.Cols
  fullName: Ampere.MathUtils.Matrix.Cols
  type: Property
  source:
    remote:
      path: Ampere/MathUtils/Matrix.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: Cols
    path: ../Ampere/MathUtils/Matrix.cs
    startLine: 26
  assemblies:
  - Ampere
  namespace: Ampere.MathUtils
  example: []
  syntax:
    content: public int Cols { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Cols As Integer
  overload: Ampere.MathUtils.Matrix.Cols*
  implements:
  - Ampere.MathUtils.IMatrixer{System.Double}.Cols
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Ampere.MathUtils.Matrix.#ctor(System.Int32,System.Int32)
  commentId: M:Ampere.MathUtils.Matrix.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: Ampere.MathUtils.Matrix
  langs:
  - csharp
  - vb
  name: Matrix(Int32, Int32)
  nameWithType: Matrix.Matrix(Int32, Int32)
  fullName: Ampere.MathUtils.Matrix.Matrix(System.Int32, System.Int32)
  type: Constructor
  source:
    remote:
      path: Ampere/MathUtils/Matrix.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: .ctor
    path: ../Ampere/MathUtils/Matrix.cs
    startLine: 33
  assemblies:
  - Ampere
  namespace: Ampere.MathUtils
  summary: "\nCreates an instance of a Matrix given rows and columns.\n"
  example: []
  syntax:
    content: public Matrix(int rows, int cols)
    parameters:
    - id: rows
      type: System.Int32
      description: The number of rows in this Matrix
    - id: cols
      type: System.Int32
      description: The number of columns in this Matrix
    content.vb: Public Sub New(rows As Integer, cols As Integer)
  overload: Ampere.MathUtils.Matrix.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Ampere.MathUtils.Matrix.#ctor(System.Double[0:,0:])
  commentId: M:Ampere.MathUtils.Matrix.#ctor(System.Double[0:,0:])
  id: '#ctor(System.Double[0:,0:])'
  parent: Ampere.MathUtils.Matrix
  langs:
  - csharp
  - vb
  name: Matrix(Double[,])
  nameWithType: Matrix.Matrix(Double[,])
  fullName: Ampere.MathUtils.Matrix.Matrix(System.Double[,])
  type: Constructor
  source:
    remote:
      path: Ampere/MathUtils/Matrix.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: .ctor
    path: ../Ampere/MathUtils/Matrix.cs
    startLine: 44
  assemblies:
  - Ampere
  namespace: Ampere.MathUtils
  summary: "\nCreates an instance of a Matrix given a 2D array. \n"
  example: []
  syntax:
    content: public Matrix(double[, ] matrix)
    parameters:
    - id: matrix
      type: System.Double[,]
      description: A 2D array of doubles
    content.vb: Public Sub New(matrix As Double(,))
  overload: Ampere.MathUtils.Matrix.#ctor*
  nameWithType.vb: Matrix.Matrix(Double(,))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Ampere.MathUtils.Matrix.Matrix(System.Double(,))
  name.vb: Matrix(Double(,))
- uid: Ampere.MathUtils.Matrix.Item(System.Int32,System.Int32)
  commentId: P:Ampere.MathUtils.Matrix.Item(System.Int32,System.Int32)
  id: Item(System.Int32,System.Int32)
  parent: Ampere.MathUtils.Matrix
  langs:
  - csharp
  - vb
  name: Item[Int32, Int32]
  nameWithType: Matrix.Item[Int32, Int32]
  fullName: Ampere.MathUtils.Matrix.Item[System.Int32, System.Int32]
  type: Property
  source:
    remote:
      path: Ampere/MathUtils/Matrix.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: this[]
    path: ../Ampere/MathUtils/Matrix.cs
    startLine: 58
  assemblies:
  - Ampere
  namespace: Ampere.MathUtils
  summary: "\n\n"
  example: []
  syntax:
    content: public double this[int row, int col] { get; set; }
    parameters:
    - id: row
      type: System.Int32
      description: ''
    - id: col
      type: System.Int32
      description: ''
    return:
      type: System.Double
      description: ''
    content.vb: Public Property Item(row As Integer, col As Integer) As Double
  overload: Ampere.MathUtils.Matrix.Item*
  implements:
  - Ampere.Base.IIndexableDouble{System.Int32,System.Double}.Item(System.Int32,System.Int32)
  nameWithType.vb: Matrix.Item(Int32, Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Ampere.MathUtils.Matrix.Item(System.Int32, System.Int32)
  name.vb: Item(Int32, Int32)
- uid: Ampere.MathUtils.Matrix.Transpose
  commentId: M:Ampere.MathUtils.Matrix.Transpose
  id: Transpose
  parent: Ampere.MathUtils.Matrix
  langs:
  - csharp
  - vb
  name: Transpose()
  nameWithType: Matrix.Transpose()
  fullName: Ampere.MathUtils.Matrix.Transpose()
  type: Method
  source:
    remote:
      path: Ampere/MathUtils/Matrix.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: Transpose
    path: ../Ampere/MathUtils/Matrix.cs
    startLine: 66
  assemblies:
  - Ampere
  namespace: Ampere.MathUtils
  example: []
  syntax:
    content: public Matrix Transpose()
    return:
      type: Ampere.MathUtils.Matrix
    content.vb: Public Function Transpose As Matrix
  overload: Ampere.MathUtils.Matrix.Transpose*
  implements:
  - Ampere.MathUtils.IMatrixer{System.Double}.Transpose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Ampere.MathUtils.Matrix.EqualDimension(Ampere.MathUtils.Matrix,Ampere.MathUtils.Matrix)
  commentId: M:Ampere.MathUtils.Matrix.EqualDimension(Ampere.MathUtils.Matrix,Ampere.MathUtils.Matrix)
  id: EqualDimension(Ampere.MathUtils.Matrix,Ampere.MathUtils.Matrix)
  parent: Ampere.MathUtils.Matrix
  langs:
  - csharp
  - vb
  name: EqualDimension(Matrix, Matrix)
  nameWithType: Matrix.EqualDimension(Matrix, Matrix)
  fullName: Ampere.MathUtils.Matrix.EqualDimension(Ampere.MathUtils.Matrix, Ampere.MathUtils.Matrix)
  type: Method
  source:
    remote:
      path: Ampere/MathUtils/Matrix.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: EqualDimension
    path: ../Ampere/MathUtils/Matrix.cs
    startLine: 86
  assemblies:
  - Ampere
  namespace: Ampere.MathUtils
  summary: "\n\n"
  example: []
  syntax:
    content: public static bool EqualDimension(Matrix one, Matrix two)
    parameters:
    - id: one
      type: Ampere.MathUtils.Matrix
      description: ''
    - id: two
      type: Ampere.MathUtils.Matrix
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function EqualDimension(one As Matrix, two As Matrix) As Boolean
  overload: Ampere.MathUtils.Matrix.EqualDimension*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Ampere.MathUtils.Matrix.op_Addition(Ampere.MathUtils.Matrix,System.Double)
  commentId: M:Ampere.MathUtils.Matrix.op_Addition(Ampere.MathUtils.Matrix,System.Double)
  id: op_Addition(Ampere.MathUtils.Matrix,System.Double)
  parent: Ampere.MathUtils.Matrix
  langs:
  - csharp
  - vb
  name: Addition(Matrix, Double)
  nameWithType: Matrix.Addition(Matrix, Double)
  fullName: Ampere.MathUtils.Matrix.Addition(Ampere.MathUtils.Matrix, System.Double)
  type: Operator
  source:
    remote:
      path: Ampere/MathUtils/Matrix.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: op_Addition
    path: ../Ampere/MathUtils/Matrix.cs
    startLine: 130
  assemblies:
  - Ampere
  namespace: Ampere.MathUtils
  summary: "\n\n"
  example: []
  syntax:
    content: public static Matrix operator +(Matrix m, double scalar)
    parameters:
    - id: m
      type: Ampere.MathUtils.Matrix
      description: ''
    - id: scalar
      type: System.Double
      description: ''
    return:
      type: Ampere.MathUtils.Matrix
      description: ''
    content.vb: Public Shared Operator +(m As Matrix, scalar As Double) As Matrix
  overload: Ampere.MathUtils.Matrix.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Ampere.MathUtils.Matrix.op_Addition(System.Double,Ampere.MathUtils.Matrix)
  commentId: M:Ampere.MathUtils.Matrix.op_Addition(System.Double,Ampere.MathUtils.Matrix)
  id: op_Addition(System.Double,Ampere.MathUtils.Matrix)
  parent: Ampere.MathUtils.Matrix
  langs:
  - csharp
  - vb
  name: Addition(Double, Matrix)
  nameWithType: Matrix.Addition(Double, Matrix)
  fullName: Ampere.MathUtils.Matrix.Addition(System.Double, Ampere.MathUtils.Matrix)
  type: Operator
  source:
    remote:
      path: Ampere/MathUtils/Matrix.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: op_Addition
    path: ../Ampere/MathUtils/Matrix.cs
    startLine: 138
  assemblies:
  - Ampere
  namespace: Ampere.MathUtils
  summary: "\n\n"
  example: []
  syntax:
    content: public static Matrix operator +(double scalar, Matrix m)
    parameters:
    - id: scalar
      type: System.Double
      description: ''
    - id: m
      type: Ampere.MathUtils.Matrix
      description: ''
    return:
      type: Ampere.MathUtils.Matrix
      description: ''
    content.vb: Public Shared Operator +(scalar As Double, m As Matrix) As Matrix
  overload: Ampere.MathUtils.Matrix.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Ampere.MathUtils.Matrix.op_Subtraction(Ampere.MathUtils.Matrix,System.Double)
  commentId: M:Ampere.MathUtils.Matrix.op_Subtraction(Ampere.MathUtils.Matrix,System.Double)
  id: op_Subtraction(Ampere.MathUtils.Matrix,System.Double)
  parent: Ampere.MathUtils.Matrix
  langs:
  - csharp
  - vb
  name: Subtraction(Matrix, Double)
  nameWithType: Matrix.Subtraction(Matrix, Double)
  fullName: Ampere.MathUtils.Matrix.Subtraction(Ampere.MathUtils.Matrix, System.Double)
  type: Operator
  source:
    remote:
      path: Ampere/MathUtils/Matrix.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: op_Subtraction
    path: ../Ampere/MathUtils/Matrix.cs
    startLine: 146
  assemblies:
  - Ampere
  namespace: Ampere.MathUtils
  summary: "\n\n"
  example: []
  syntax:
    content: public static Matrix operator -(Matrix m, double scalar)
    parameters:
    - id: m
      type: Ampere.MathUtils.Matrix
      description: ''
    - id: scalar
      type: System.Double
      description: ''
    return:
      type: Ampere.MathUtils.Matrix
      description: ''
    content.vb: Public Shared Operator -(m As Matrix, scalar As Double) As Matrix
  overload: Ampere.MathUtils.Matrix.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Ampere.MathUtils.Matrix.op_Subtraction(System.Double,Ampere.MathUtils.Matrix)
  commentId: M:Ampere.MathUtils.Matrix.op_Subtraction(System.Double,Ampere.MathUtils.Matrix)
  id: op_Subtraction(System.Double,Ampere.MathUtils.Matrix)
  parent: Ampere.MathUtils.Matrix
  langs:
  - csharp
  - vb
  name: Subtraction(Double, Matrix)
  nameWithType: Matrix.Subtraction(Double, Matrix)
  fullName: Ampere.MathUtils.Matrix.Subtraction(System.Double, Ampere.MathUtils.Matrix)
  type: Operator
  source:
    remote:
      path: Ampere/MathUtils/Matrix.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: op_Subtraction
    path: ../Ampere/MathUtils/Matrix.cs
    startLine: 154
  assemblies:
  - Ampere
  namespace: Ampere.MathUtils
  summary: "\n\n"
  example: []
  syntax:
    content: public static Matrix operator -(double scalar, Matrix m)
    parameters:
    - id: scalar
      type: System.Double
      description: ''
    - id: m
      type: Ampere.MathUtils.Matrix
      description: ''
    return:
      type: Ampere.MathUtils.Matrix
      description: ''
    content.vb: Public Shared Operator -(scalar As Double, m As Matrix) As Matrix
  overload: Ampere.MathUtils.Matrix.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Ampere.MathUtils.Matrix.op_Multiply(Ampere.MathUtils.Matrix,System.Double)
  commentId: M:Ampere.MathUtils.Matrix.op_Multiply(Ampere.MathUtils.Matrix,System.Double)
  id: op_Multiply(Ampere.MathUtils.Matrix,System.Double)
  parent: Ampere.MathUtils.Matrix
  langs:
  - csharp
  - vb
  name: Multiply(Matrix, Double)
  nameWithType: Matrix.Multiply(Matrix, Double)
  fullName: Ampere.MathUtils.Matrix.Multiply(Ampere.MathUtils.Matrix, System.Double)
  type: Operator
  source:
    remote:
      path: Ampere/MathUtils/Matrix.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: op_Multiply
    path: ../Ampere/MathUtils/Matrix.cs
    startLine: 162
  assemblies:
  - Ampere
  namespace: Ampere.MathUtils
  summary: "\n\n"
  example: []
  syntax:
    content: public static Matrix operator *(Matrix m, double scalar)
    parameters:
    - id: m
      type: Ampere.MathUtils.Matrix
      description: ''
    - id: scalar
      type: System.Double
      description: ''
    return:
      type: Ampere.MathUtils.Matrix
      description: ''
    content.vb: Public Shared Operator *(m As Matrix, scalar As Double) As Matrix
  overload: Ampere.MathUtils.Matrix.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Ampere.MathUtils.Matrix.op_Multiply(System.Double,Ampere.MathUtils.Matrix)
  commentId: M:Ampere.MathUtils.Matrix.op_Multiply(System.Double,Ampere.MathUtils.Matrix)
  id: op_Multiply(System.Double,Ampere.MathUtils.Matrix)
  parent: Ampere.MathUtils.Matrix
  langs:
  - csharp
  - vb
  name: Multiply(Double, Matrix)
  nameWithType: Matrix.Multiply(Double, Matrix)
  fullName: Ampere.MathUtils.Matrix.Multiply(System.Double, Ampere.MathUtils.Matrix)
  type: Operator
  source:
    remote:
      path: Ampere/MathUtils/Matrix.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: op_Multiply
    path: ../Ampere/MathUtils/Matrix.cs
    startLine: 170
  assemblies:
  - Ampere
  namespace: Ampere.MathUtils
  summary: "\n\n"
  example: []
  syntax:
    content: public static Matrix operator *(double scalar, Matrix m)
    parameters:
    - id: scalar
      type: System.Double
      description: ''
    - id: m
      type: Ampere.MathUtils.Matrix
      description: ''
    return:
      type: Ampere.MathUtils.Matrix
      description: ''
    content.vb: Public Shared Operator *(scalar As Double, m As Matrix) As Matrix
  overload: Ampere.MathUtils.Matrix.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Ampere.MathUtils.Matrix.op_Division(Ampere.MathUtils.Matrix,System.Double)
  commentId: M:Ampere.MathUtils.Matrix.op_Division(Ampere.MathUtils.Matrix,System.Double)
  id: op_Division(Ampere.MathUtils.Matrix,System.Double)
  parent: Ampere.MathUtils.Matrix
  langs:
  - csharp
  - vb
  name: Division(Matrix, Double)
  nameWithType: Matrix.Division(Matrix, Double)
  fullName: Ampere.MathUtils.Matrix.Division(Ampere.MathUtils.Matrix, System.Double)
  type: Operator
  source:
    remote:
      path: Ampere/MathUtils/Matrix.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: op_Division
    path: ../Ampere/MathUtils/Matrix.cs
    startLine: 178
  assemblies:
  - Ampere
  namespace: Ampere.MathUtils
  summary: "\n\n"
  example: []
  syntax:
    content: public static Matrix operator /(Matrix m, double scalar)
    parameters:
    - id: m
      type: Ampere.MathUtils.Matrix
      description: ''
    - id: scalar
      type: System.Double
      description: ''
    return:
      type: Ampere.MathUtils.Matrix
      description: ''
    content.vb: Public Shared Operator /(m As Matrix, scalar As Double) As Matrix
  overload: Ampere.MathUtils.Matrix.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Ampere.MathUtils.Matrix.op_Division(System.Double,Ampere.MathUtils.Matrix)
  commentId: M:Ampere.MathUtils.Matrix.op_Division(System.Double,Ampere.MathUtils.Matrix)
  id: op_Division(System.Double,Ampere.MathUtils.Matrix)
  parent: Ampere.MathUtils.Matrix
  langs:
  - csharp
  - vb
  name: Division(Double, Matrix)
  nameWithType: Matrix.Division(Double, Matrix)
  fullName: Ampere.MathUtils.Matrix.Division(System.Double, Ampere.MathUtils.Matrix)
  type: Operator
  source:
    remote:
      path: Ampere/MathUtils/Matrix.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: op_Division
    path: ../Ampere/MathUtils/Matrix.cs
    startLine: 186
  assemblies:
  - Ampere
  namespace: Ampere.MathUtils
  summary: "\n\n"
  example: []
  syntax:
    content: public static Matrix operator /(double scalar, Matrix m)
    parameters:
    - id: scalar
      type: System.Double
      description: ''
    - id: m
      type: Ampere.MathUtils.Matrix
      description: ''
    return:
      type: Ampere.MathUtils.Matrix
      description: ''
    content.vb: Public Shared Operator /(scalar As Double, m As Matrix) As Matrix
  overload: Ampere.MathUtils.Matrix.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Ampere.MathUtils.Matrix.op_Modulus(Ampere.MathUtils.Matrix,System.Double)
  commentId: M:Ampere.MathUtils.Matrix.op_Modulus(Ampere.MathUtils.Matrix,System.Double)
  id: op_Modulus(Ampere.MathUtils.Matrix,System.Double)
  parent: Ampere.MathUtils.Matrix
  langs:
  - csharp
  - vb
  name: Modulus(Matrix, Double)
  nameWithType: Matrix.Modulus(Matrix, Double)
  fullName: Ampere.MathUtils.Matrix.Modulus(Ampere.MathUtils.Matrix, System.Double)
  type: Operator
  source:
    remote:
      path: Ampere/MathUtils/Matrix.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: op_Modulus
    path: ../Ampere/MathUtils/Matrix.cs
    startLine: 194
  assemblies:
  - Ampere
  namespace: Ampere.MathUtils
  summary: "\n\n"
  example: []
  syntax:
    content: public static Matrix operator %(Matrix m, double scalar)
    parameters:
    - id: m
      type: Ampere.MathUtils.Matrix
      description: ''
    - id: scalar
      type: System.Double
      description: ''
    return:
      type: Ampere.MathUtils.Matrix
      description: ''
    content.vb: Public Shared Operator Mod(m As Matrix, scalar As Double) As Matrix
  overload: Ampere.MathUtils.Matrix.op_Modulus*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Ampere.MathUtils.Matrix.op_Modulus(System.Double,Ampere.MathUtils.Matrix)
  commentId: M:Ampere.MathUtils.Matrix.op_Modulus(System.Double,Ampere.MathUtils.Matrix)
  id: op_Modulus(System.Double,Ampere.MathUtils.Matrix)
  parent: Ampere.MathUtils.Matrix
  langs:
  - csharp
  - vb
  name: Modulus(Double, Matrix)
  nameWithType: Matrix.Modulus(Double, Matrix)
  fullName: Ampere.MathUtils.Matrix.Modulus(System.Double, Ampere.MathUtils.Matrix)
  type: Operator
  source:
    remote:
      path: Ampere/MathUtils/Matrix.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: op_Modulus
    path: ../Ampere/MathUtils/Matrix.cs
    startLine: 202
  assemblies:
  - Ampere
  namespace: Ampere.MathUtils
  summary: "\n\n"
  example: []
  syntax:
    content: public static Matrix operator %(double scalar, Matrix m)
    parameters:
    - id: scalar
      type: System.Double
      description: ''
    - id: m
      type: Ampere.MathUtils.Matrix
      description: ''
    return:
      type: Ampere.MathUtils.Matrix
      description: ''
    content.vb: Public Shared Operator Mod(scalar As Double, m As Matrix) As Matrix
  overload: Ampere.MathUtils.Matrix.op_Modulus*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Ampere.MathUtils.Matrix.op_LogicalNot(Ampere.MathUtils.Matrix)
  commentId: M:Ampere.MathUtils.Matrix.op_LogicalNot(Ampere.MathUtils.Matrix)
  id: op_LogicalNot(Ampere.MathUtils.Matrix)
  parent: Ampere.MathUtils.Matrix
  langs:
  - csharp
  - vb
  name: LogicalNot(Matrix)
  nameWithType: Matrix.LogicalNot(Matrix)
  fullName: Ampere.MathUtils.Matrix.LogicalNot(Ampere.MathUtils.Matrix)
  type: Operator
  source:
    remote:
      path: Ampere/MathUtils/Matrix.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: op_LogicalNot
    path: ../Ampere/MathUtils/Matrix.cs
    startLine: 209
  assemblies:
  - Ampere
  namespace: Ampere.MathUtils
  summary: "\n\n"
  example: []
  syntax:
    content: public static Matrix operator !(Matrix m)
    parameters:
    - id: m
      type: Ampere.MathUtils.Matrix
      description: ''
    return:
      type: Ampere.MathUtils.Matrix
      description: ''
    content.vb: VB cannot support this operator.
  overload: Ampere.MathUtils.Matrix.op_LogicalNot*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Ampere.MathUtils.Matrix.op_Addition(Ampere.MathUtils.Matrix,Ampere.MathUtils.Matrix)
  commentId: M:Ampere.MathUtils.Matrix.op_Addition(Ampere.MathUtils.Matrix,Ampere.MathUtils.Matrix)
  id: op_Addition(Ampere.MathUtils.Matrix,Ampere.MathUtils.Matrix)
  parent: Ampere.MathUtils.Matrix
  langs:
  - csharp
  - vb
  name: Addition(Matrix, Matrix)
  nameWithType: Matrix.Addition(Matrix, Matrix)
  fullName: Ampere.MathUtils.Matrix.Addition(Ampere.MathUtils.Matrix, Ampere.MathUtils.Matrix)
  type: Operator
  source:
    remote:
      path: Ampere/MathUtils/Matrix.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: op_Addition
    path: ../Ampere/MathUtils/Matrix.cs
    startLine: 217
  assemblies:
  - Ampere
  namespace: Ampere.MathUtils
  summary: "\n\n"
  example: []
  syntax:
    content: public static Matrix operator +(Matrix one, Matrix two)
    parameters:
    - id: one
      type: Ampere.MathUtils.Matrix
      description: ''
    - id: two
      type: Ampere.MathUtils.Matrix
      description: ''
    return:
      type: Ampere.MathUtils.Matrix
      description: ''
    content.vb: Public Shared Operator +(one As Matrix, two As Matrix) As Matrix
  overload: Ampere.MathUtils.Matrix.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Ampere.MathUtils.Matrix.op_Subtraction(Ampere.MathUtils.Matrix,Ampere.MathUtils.Matrix)
  commentId: M:Ampere.MathUtils.Matrix.op_Subtraction(Ampere.MathUtils.Matrix,Ampere.MathUtils.Matrix)
  id: op_Subtraction(Ampere.MathUtils.Matrix,Ampere.MathUtils.Matrix)
  parent: Ampere.MathUtils.Matrix
  langs:
  - csharp
  - vb
  name: Subtraction(Matrix, Matrix)
  nameWithType: Matrix.Subtraction(Matrix, Matrix)
  fullName: Ampere.MathUtils.Matrix.Subtraction(Ampere.MathUtils.Matrix, Ampere.MathUtils.Matrix)
  type: Operator
  source:
    remote:
      path: Ampere/MathUtils/Matrix.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: op_Subtraction
    path: ../Ampere/MathUtils/Matrix.cs
    startLine: 231
  assemblies:
  - Ampere
  namespace: Ampere.MathUtils
  summary: "\n\n"
  example: []
  syntax:
    content: public static Matrix operator -(Matrix one, Matrix two)
    parameters:
    - id: one
      type: Ampere.MathUtils.Matrix
      description: ''
    - id: two
      type: Ampere.MathUtils.Matrix
      description: ''
    return:
      type: Ampere.MathUtils.Matrix
      description: ''
    content.vb: Public Shared Operator -(one As Matrix, two As Matrix) As Matrix
  overload: Ampere.MathUtils.Matrix.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Ampere.MathUtils.Matrix.op_Multiply(Ampere.MathUtils.Matrix,Ampere.MathUtils.Matrix)
  commentId: M:Ampere.MathUtils.Matrix.op_Multiply(Ampere.MathUtils.Matrix,Ampere.MathUtils.Matrix)
  id: op_Multiply(Ampere.MathUtils.Matrix,Ampere.MathUtils.Matrix)
  parent: Ampere.MathUtils.Matrix
  langs:
  - csharp
  - vb
  name: Multiply(Matrix, Matrix)
  nameWithType: Matrix.Multiply(Matrix, Matrix)
  fullName: Ampere.MathUtils.Matrix.Multiply(Ampere.MathUtils.Matrix, Ampere.MathUtils.Matrix)
  type: Operator
  source:
    remote:
      path: Ampere/MathUtils/Matrix.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: op_Multiply
    path: ../Ampere/MathUtils/Matrix.cs
    startLine: 245
  assemblies:
  - Ampere
  namespace: Ampere.MathUtils
  summary: "\n\n"
  example: []
  syntax:
    content: public static Matrix operator *(Matrix one, Matrix two)
    parameters:
    - id: one
      type: Ampere.MathUtils.Matrix
      description: ''
    - id: two
      type: Ampere.MathUtils.Matrix
      description: ''
    return:
      type: Ampere.MathUtils.Matrix
      description: ''
    content.vb: Public Shared Operator *(one As Matrix, two As Matrix) As Matrix
  overload: Ampere.MathUtils.Matrix.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Ampere.MathUtils.Matrix.op_Equality(Ampere.MathUtils.Matrix,Ampere.MathUtils.Matrix)
  commentId: M:Ampere.MathUtils.Matrix.op_Equality(Ampere.MathUtils.Matrix,Ampere.MathUtils.Matrix)
  id: op_Equality(Ampere.MathUtils.Matrix,Ampere.MathUtils.Matrix)
  parent: Ampere.MathUtils.Matrix
  langs:
  - csharp
  - vb
  name: Equality(Matrix, Matrix)
  nameWithType: Matrix.Equality(Matrix, Matrix)
  fullName: Ampere.MathUtils.Matrix.Equality(Ampere.MathUtils.Matrix, Ampere.MathUtils.Matrix)
  type: Operator
  source:
    remote:
      path: Ampere/MathUtils/Matrix.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: op_Equality
    path: ../Ampere/MathUtils/Matrix.cs
    startLine: 277
  assemblies:
  - Ampere
  namespace: Ampere.MathUtils
  summary: "\n\n"
  example: []
  syntax:
    content: public static bool operator ==(Matrix one, Matrix two)
    parameters:
    - id: one
      type: Ampere.MathUtils.Matrix
      description: ''
    - id: two
      type: Ampere.MathUtils.Matrix
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Operator =(one As Matrix, two As Matrix) As Boolean
  overload: Ampere.MathUtils.Matrix.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Ampere.MathUtils.Matrix.op_Inequality(Ampere.MathUtils.Matrix,Ampere.MathUtils.Matrix)
  commentId: M:Ampere.MathUtils.Matrix.op_Inequality(Ampere.MathUtils.Matrix,Ampere.MathUtils.Matrix)
  id: op_Inequality(Ampere.MathUtils.Matrix,Ampere.MathUtils.Matrix)
  parent: Ampere.MathUtils.Matrix
  langs:
  - csharp
  - vb
  name: Inequality(Matrix, Matrix)
  nameWithType: Matrix.Inequality(Matrix, Matrix)
  fullName: Ampere.MathUtils.Matrix.Inequality(Ampere.MathUtils.Matrix, Ampere.MathUtils.Matrix)
  type: Operator
  source:
    remote:
      path: Ampere/MathUtils/Matrix.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: op_Inequality
    path: ../Ampere/MathUtils/Matrix.cs
    startLine: 303
  assemblies:
  - Ampere
  namespace: Ampere.MathUtils
  summary: "\n\n"
  example: []
  syntax:
    content: public static bool operator !=(Matrix one, Matrix two)
    parameters:
    - id: one
      type: Ampere.MathUtils.Matrix
      description: ''
    - id: two
      type: Ampere.MathUtils.Matrix
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Operator <>(one As Matrix, two As Matrix) As Boolean
  overload: Ampere.MathUtils.Matrix.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Ampere.MathUtils.Matrix.Add(Ampere.MathUtils.Matrix,System.Double)
  commentId: M:Ampere.MathUtils.Matrix.Add(Ampere.MathUtils.Matrix,System.Double)
  id: Add(Ampere.MathUtils.Matrix,System.Double)
  parent: Ampere.MathUtils.Matrix
  langs:
  - csharp
  - vb
  name: Add(Matrix, Double)
  nameWithType: Matrix.Add(Matrix, Double)
  fullName: Ampere.MathUtils.Matrix.Add(Ampere.MathUtils.Matrix, System.Double)
  type: Method
  source:
    remote:
      path: Ampere/MathUtils/Matrix.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: Add
    path: ../Ampere/MathUtils/Matrix.cs
    startLine: 329
  assemblies:
  - Ampere
  namespace: Ampere.MathUtils
  summary: "\n\n"
  example: []
  syntax:
    content: public static Matrix Add(Matrix left, double scalar)
    parameters:
    - id: left
      type: Ampere.MathUtils.Matrix
      description: ''
    - id: scalar
      type: System.Double
      description: ''
    return:
      type: Ampere.MathUtils.Matrix
      description: ''
    content.vb: Public Shared Function Add(left As Matrix, scalar As Double) As Matrix
  overload: Ampere.MathUtils.Matrix.Add*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Ampere.MathUtils.Matrix.Add(Ampere.MathUtils.Matrix,Ampere.MathUtils.Matrix)
  commentId: M:Ampere.MathUtils.Matrix.Add(Ampere.MathUtils.Matrix,Ampere.MathUtils.Matrix)
  id: Add(Ampere.MathUtils.Matrix,Ampere.MathUtils.Matrix)
  parent: Ampere.MathUtils.Matrix
  langs:
  - csharp
  - vb
  name: Add(Matrix, Matrix)
  nameWithType: Matrix.Add(Matrix, Matrix)
  fullName: Ampere.MathUtils.Matrix.Add(Ampere.MathUtils.Matrix, Ampere.MathUtils.Matrix)
  type: Method
  source:
    remote:
      path: Ampere/MathUtils/Matrix.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: Add
    path: ../Ampere/MathUtils/Matrix.cs
    startLine: 338
  assemblies:
  - Ampere
  namespace: Ampere.MathUtils
  summary: "\n\n"
  example: []
  syntax:
    content: public static Matrix Add(Matrix left, Matrix right)
    parameters:
    - id: left
      type: Ampere.MathUtils.Matrix
      description: ''
    - id: right
      type: Ampere.MathUtils.Matrix
      description: ''
    return:
      type: Ampere.MathUtils.Matrix
      description: ''
    content.vb: Public Shared Function Add(left As Matrix, right As Matrix) As Matrix
  overload: Ampere.MathUtils.Matrix.Add*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Ampere.MathUtils.Matrix.Subtract(Ampere.MathUtils.Matrix,System.Double)
  commentId: M:Ampere.MathUtils.Matrix.Subtract(Ampere.MathUtils.Matrix,System.Double)
  id: Subtract(Ampere.MathUtils.Matrix,System.Double)
  parent: Ampere.MathUtils.Matrix
  langs:
  - csharp
  - vb
  name: Subtract(Matrix, Double)
  nameWithType: Matrix.Subtract(Matrix, Double)
  fullName: Ampere.MathUtils.Matrix.Subtract(Ampere.MathUtils.Matrix, System.Double)
  type: Method
  source:
    remote:
      path: Ampere/MathUtils/Matrix.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: Subtract
    path: ../Ampere/MathUtils/Matrix.cs
    startLine: 347
  assemblies:
  - Ampere
  namespace: Ampere.MathUtils
  summary: "\n\n"
  example: []
  syntax:
    content: public static Matrix Subtract(Matrix left, double scalar)
    parameters:
    - id: left
      type: Ampere.MathUtils.Matrix
      description: ''
    - id: scalar
      type: System.Double
      description: ''
    return:
      type: Ampere.MathUtils.Matrix
      description: ''
    content.vb: Public Shared Function Subtract(left As Matrix, scalar As Double) As Matrix
  overload: Ampere.MathUtils.Matrix.Subtract*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Ampere.MathUtils.Matrix.Subtract(Ampere.MathUtils.Matrix,Ampere.MathUtils.Matrix)
  commentId: M:Ampere.MathUtils.Matrix.Subtract(Ampere.MathUtils.Matrix,Ampere.MathUtils.Matrix)
  id: Subtract(Ampere.MathUtils.Matrix,Ampere.MathUtils.Matrix)
  parent: Ampere.MathUtils.Matrix
  langs:
  - csharp
  - vb
  name: Subtract(Matrix, Matrix)
  nameWithType: Matrix.Subtract(Matrix, Matrix)
  fullName: Ampere.MathUtils.Matrix.Subtract(Ampere.MathUtils.Matrix, Ampere.MathUtils.Matrix)
  type: Method
  source:
    remote:
      path: Ampere/MathUtils/Matrix.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: Subtract
    path: ../Ampere/MathUtils/Matrix.cs
    startLine: 356
  assemblies:
  - Ampere
  namespace: Ampere.MathUtils
  summary: "\n\n"
  example: []
  syntax:
    content: public static Matrix Subtract(Matrix left, Matrix right)
    parameters:
    - id: left
      type: Ampere.MathUtils.Matrix
      description: ''
    - id: right
      type: Ampere.MathUtils.Matrix
      description: ''
    return:
      type: Ampere.MathUtils.Matrix
      description: ''
    content.vb: Public Shared Function Subtract(left As Matrix, right As Matrix) As Matrix
  overload: Ampere.MathUtils.Matrix.Subtract*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Ampere.MathUtils.Matrix.Multiply(Ampere.MathUtils.Matrix,System.Double)
  commentId: M:Ampere.MathUtils.Matrix.Multiply(Ampere.MathUtils.Matrix,System.Double)
  id: Multiply(Ampere.MathUtils.Matrix,System.Double)
  parent: Ampere.MathUtils.Matrix
  langs:
  - csharp
  - vb
  name: Multiply(Matrix, Double)
  nameWithType: Matrix.Multiply(Matrix, Double)
  fullName: Ampere.MathUtils.Matrix.Multiply(Ampere.MathUtils.Matrix, System.Double)
  type: Method
  source:
    remote:
      path: Ampere/MathUtils/Matrix.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: Multiply
    path: ../Ampere/MathUtils/Matrix.cs
    startLine: 365
  assemblies:
  - Ampere
  namespace: Ampere.MathUtils
  summary: "\n\n"
  example: []
  syntax:
    content: public static Matrix Multiply(Matrix left, double scalar)
    parameters:
    - id: left
      type: Ampere.MathUtils.Matrix
      description: ''
    - id: scalar
      type: System.Double
      description: ''
    return:
      type: Ampere.MathUtils.Matrix
      description: ''
    content.vb: Public Shared Function Multiply(left As Matrix, scalar As Double) As Matrix
  overload: Ampere.MathUtils.Matrix.Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Ampere.MathUtils.Matrix.DotProduct(Ampere.MathUtils.Matrix,Ampere.MathUtils.Matrix)
  commentId: M:Ampere.MathUtils.Matrix.DotProduct(Ampere.MathUtils.Matrix,Ampere.MathUtils.Matrix)
  id: DotProduct(Ampere.MathUtils.Matrix,Ampere.MathUtils.Matrix)
  parent: Ampere.MathUtils.Matrix
  langs:
  - csharp
  - vb
  name: DotProduct(Matrix, Matrix)
  nameWithType: Matrix.DotProduct(Matrix, Matrix)
  fullName: Ampere.MathUtils.Matrix.DotProduct(Ampere.MathUtils.Matrix, Ampere.MathUtils.Matrix)
  type: Method
  source:
    remote:
      path: Ampere/MathUtils/Matrix.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: DotProduct
    path: ../Ampere/MathUtils/Matrix.cs
    startLine: 374
  assemblies:
  - Ampere
  namespace: Ampere.MathUtils
  summary: "\n\n"
  example: []
  syntax:
    content: public static Matrix DotProduct(Matrix left, Matrix right)
    parameters:
    - id: left
      type: Ampere.MathUtils.Matrix
      description: ''
    - id: right
      type: Ampere.MathUtils.Matrix
      description: ''
    return:
      type: Ampere.MathUtils.Matrix
      description: ''
    content.vb: Public Shared Function DotProduct(left As Matrix, right As Matrix) As Matrix
  overload: Ampere.MathUtils.Matrix.DotProduct*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Ampere.MathUtils.Matrix.Divide(Ampere.MathUtils.Matrix,System.Double)
  commentId: M:Ampere.MathUtils.Matrix.Divide(Ampere.MathUtils.Matrix,System.Double)
  id: Divide(Ampere.MathUtils.Matrix,System.Double)
  parent: Ampere.MathUtils.Matrix
  langs:
  - csharp
  - vb
  name: Divide(Matrix, Double)
  nameWithType: Matrix.Divide(Matrix, Double)
  fullName: Ampere.MathUtils.Matrix.Divide(Ampere.MathUtils.Matrix, System.Double)
  type: Method
  source:
    remote:
      path: Ampere/MathUtils/Matrix.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: Divide
    path: ../Ampere/MathUtils/Matrix.cs
    startLine: 383
  assemblies:
  - Ampere
  namespace: Ampere.MathUtils
  summary: "\n\n"
  example: []
  syntax:
    content: public static Matrix Divide(Matrix left, double scalar)
    parameters:
    - id: left
      type: Ampere.MathUtils.Matrix
      description: ''
    - id: scalar
      type: System.Double
      description: ''
    return:
      type: Ampere.MathUtils.Matrix
      description: ''
    content.vb: Public Shared Function Divide(left As Matrix, scalar As Double) As Matrix
  overload: Ampere.MathUtils.Matrix.Divide*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Ampere.MathUtils.Matrix.Mod(Ampere.MathUtils.Matrix,System.Double)
  commentId: M:Ampere.MathUtils.Matrix.Mod(Ampere.MathUtils.Matrix,System.Double)
  id: Mod(Ampere.MathUtils.Matrix,System.Double)
  parent: Ampere.MathUtils.Matrix
  langs:
  - csharp
  - vb
  name: Mod(Matrix, Double)
  nameWithType: Matrix.Mod(Matrix, Double)
  fullName: Ampere.MathUtils.Matrix.Mod(Ampere.MathUtils.Matrix, System.Double)
  type: Method
  source:
    remote:
      path: Ampere/MathUtils/Matrix.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: Mod
    path: ../Ampere/MathUtils/Matrix.cs
    startLine: 392
  assemblies:
  - Ampere
  namespace: Ampere.MathUtils
  summary: "\n\n"
  example: []
  syntax:
    content: public static Matrix Mod(Matrix left, double scalar)
    parameters:
    - id: left
      type: Ampere.MathUtils.Matrix
      description: ''
    - id: scalar
      type: System.Double
      description: ''
    return:
      type: Ampere.MathUtils.Matrix
      description: ''
    content.vb: Public Shared Function Mod(left As Matrix, scalar As Double) As Matrix
  overload: Ampere.MathUtils.Matrix.Mod*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Ampere.MathUtils.Matrix.Negate(Ampere.MathUtils.Matrix)
  commentId: M:Ampere.MathUtils.Matrix.Negate(Ampere.MathUtils.Matrix)
  id: Negate(Ampere.MathUtils.Matrix)
  parent: Ampere.MathUtils.Matrix
  langs:
  - csharp
  - vb
  name: Negate(Matrix)
  nameWithType: Matrix.Negate(Matrix)
  fullName: Ampere.MathUtils.Matrix.Negate(Ampere.MathUtils.Matrix)
  type: Method
  source:
    remote:
      path: Ampere/MathUtils/Matrix.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: Negate
    path: ../Ampere/MathUtils/Matrix.cs
    startLine: 400
  assemblies:
  - Ampere
  namespace: Ampere.MathUtils
  summary: "\n\n"
  example: []
  syntax:
    content: public static Matrix Negate(Matrix m)
    parameters:
    - id: m
      type: Ampere.MathUtils.Matrix
      description: ''
    return:
      type: Ampere.MathUtils.Matrix
      description: ''
    content.vb: Public Shared Function Negate(m As Matrix) As Matrix
  overload: Ampere.MathUtils.Matrix.Negate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Ampere.MathUtils.Matrix.Equals(System.Object)
  commentId: M:Ampere.MathUtils.Matrix.Equals(System.Object)
  id: Equals(System.Object)
  parent: Ampere.MathUtils.Matrix
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Matrix.Equals(Object)
  fullName: Ampere.MathUtils.Matrix.Equals(System.Object)
  type: Method
  source:
    remote:
      path: Ampere/MathUtils/Matrix.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: Equals
    path: ../Ampere/MathUtils/Matrix.cs
    startLine: 408
  assemblies:
  - Ampere
  namespace: Ampere.MathUtils
  summary: "\n\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Ampere.MathUtils.Matrix.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Ampere.MathUtils.Matrix.Equals(Ampere.MathUtils.Matrix)
  commentId: M:Ampere.MathUtils.Matrix.Equals(Ampere.MathUtils.Matrix)
  id: Equals(Ampere.MathUtils.Matrix)
  parent: Ampere.MathUtils.Matrix
  langs:
  - csharp
  - vb
  name: Equals(Matrix)
  nameWithType: Matrix.Equals(Matrix)
  fullName: Ampere.MathUtils.Matrix.Equals(Ampere.MathUtils.Matrix)
  type: Method
  source:
    remote:
      path: Ampere/MathUtils/Matrix.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: Equals
    path: ../Ampere/MathUtils/Matrix.cs
    startLine: 420
  assemblies:
  - Ampere
  namespace: Ampere.MathUtils
  summary: "\n\n"
  example: []
  syntax:
    content: protected bool Equals(Matrix other)
    parameters:
    - id: other
      type: Ampere.MathUtils.Matrix
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Protected Function Equals(other As Matrix) As Boolean
  overload: Ampere.MathUtils.Matrix.Equals*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Ampere.MathUtils.Matrix.GetHashCode
  commentId: M:Ampere.MathUtils.Matrix.GetHashCode
  id: GetHashCode
  parent: Ampere.MathUtils.Matrix
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Matrix.GetHashCode()
  fullName: Ampere.MathUtils.Matrix.GetHashCode()
  type: Method
  source:
    remote:
      path: Ampere/MathUtils/Matrix.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: GetHashCode
    path: ../Ampere/MathUtils/Matrix.cs
    startLine: 429
  assemblies:
  - Ampere
  namespace: Ampere.MathUtils
  summary: "\n\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: ''
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Ampere.MathUtils.Matrix.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Ampere.MathUtils.Matrix.IsRowVector
  commentId: M:Ampere.MathUtils.Matrix.IsRowVector
  id: IsRowVector
  parent: Ampere.MathUtils.Matrix
  langs:
  - csharp
  - vb
  name: IsRowVector()
  nameWithType: Matrix.IsRowVector()
  fullName: Ampere.MathUtils.Matrix.IsRowVector()
  type: Method
  source:
    remote:
      path: Ampere/MathUtils/Matrix.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: IsRowVector
    path: ../Ampere/MathUtils/Matrix.cs
    startLine: 438
  assemblies:
  - Ampere
  namespace: Ampere.MathUtils
  summary: "\n\n"
  example: []
  syntax:
    content: public bool IsRowVector()
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function IsRowVector As Boolean
  overload: Ampere.MathUtils.Matrix.IsRowVector*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Ampere.MathUtils.Matrix.IsColumnVector
  commentId: M:Ampere.MathUtils.Matrix.IsColumnVector
  id: IsColumnVector
  parent: Ampere.MathUtils.Matrix
  langs:
  - csharp
  - vb
  name: IsColumnVector()
  nameWithType: Matrix.IsColumnVector()
  fullName: Ampere.MathUtils.Matrix.IsColumnVector()
  type: Method
  source:
    remote:
      path: Ampere/MathUtils/Matrix.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: IsColumnVector
    path: ../Ampere/MathUtils/Matrix.cs
    startLine: 444
  assemblies:
  - Ampere
  namespace: Ampere.MathUtils
  summary: "\n\n"
  example: []
  syntax:
    content: public bool IsColumnVector()
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function IsColumnVector As Boolean
  overload: Ampere.MathUtils.Matrix.IsColumnVector*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Ampere.MathUtils.Matrix.IsSquareVector
  commentId: M:Ampere.MathUtils.Matrix.IsSquareVector
  id: IsSquareVector
  parent: Ampere.MathUtils.Matrix
  langs:
  - csharp
  - vb
  name: IsSquareVector()
  nameWithType: Matrix.IsSquareVector()
  fullName: Ampere.MathUtils.Matrix.IsSquareVector()
  type: Method
  source:
    remote:
      path: Ampere/MathUtils/Matrix.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: IsSquareVector
    path: ../Ampere/MathUtils/Matrix.cs
    startLine: 450
  assemblies:
  - Ampere
  namespace: Ampere.MathUtils
  summary: "\n\n"
  example: []
  syntax:
    content: public bool IsSquareVector()
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function IsSquareVector As Boolean
  overload: Ampere.MathUtils.Matrix.IsSquareVector*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Ampere.MathUtils.Matrix.GetEnumerator
  commentId: M:Ampere.MathUtils.Matrix.GetEnumerator
  id: GetEnumerator
  parent: Ampere.MathUtils.Matrix
  langs:
  - csharp
  - vb
  name: GetEnumerator()
  nameWithType: Matrix.GetEnumerator()
  fullName: Ampere.MathUtils.Matrix.GetEnumerator()
  type: Method
  source:
    remote:
      path: Ampere/MathUtils/Matrix.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: GetEnumerator
    path: ../Ampere/MathUtils/Matrix.cs
    startLine: 456
  assemblies:
  - Ampere
  namespace: Ampere.MathUtils
  summary: "\n\n"
  example: []
  syntax:
    content: public IEnumerator<double> GetEnumerator()
    return:
      type: System.Collections.Generic.IEnumerator{System.Double}
      description: ''
    content.vb: Public Function GetEnumerator As IEnumerator(Of Double)
  overload: Ampere.MathUtils.Matrix.GetEnumerator*
  implements:
  - System.Collections.Generic.IEnumerable{System.Double}.GetEnumerator
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Ampere.MathUtils.Matrix.System#Collections#IEnumerable#GetEnumerator
  commentId: M:Ampere.MathUtils.Matrix.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: Ampere.MathUtils.Matrix
  langs:
  - csharp
  - vb
  name: IEnumerable.GetEnumerator()
  nameWithType: Matrix.IEnumerable.GetEnumerator()
  fullName: Ampere.MathUtils.Matrix.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote:
      path: Ampere/MathUtils/Matrix.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: System.Collections.IEnumerable.GetEnumerator
    path: ../Ampere/MathUtils/Matrix.cs
    startLine: 471
  assemblies:
  - Ampere
  namespace: Ampere.MathUtils
  summary: "\n\n"
  example: []
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    return:
      type: System.Collections.IEnumerator
      description: ''
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
  overload: Ampere.MathUtils.Matrix.System#Collections#IEnumerable#GetEnumerator*
  implements:
  - System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: Matrix.System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
- uid: Ampere.MathUtils.Matrix.ToString
  commentId: M:Ampere.MathUtils.Matrix.ToString
  id: ToString
  parent: Ampere.MathUtils.Matrix
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Matrix.ToString()
  fullName: Ampere.MathUtils.Matrix.ToString()
  type: Method
  source:
    remote:
      path: Ampere/MathUtils/Matrix.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: ToString
    path: ../Ampere/MathUtils/Matrix.cs
    startLine: 477
  assemblies:
  - Ampere
  namespace: Ampere.MathUtils
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Ampere.MathUtils.Matrix.ToString*
  implements:
  - Ampere.MathUtils.IMatrixer{System.Double}.ToString
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Ampere.MathUtils
  commentId: N:Ampere.MathUtils
  name: Ampere.MathUtils
  nameWithType: Ampere.MathUtils
  fullName: Ampere.MathUtils
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Ampere.MathUtils.IMatrixer{System.Double}
  commentId: T:Ampere.MathUtils.IMatrixer{System.Double}
  parent: Ampere.MathUtils
  definition: Ampere.MathUtils.IMatrixer`1
  name: IMatrixer<Double>
  nameWithType: IMatrixer<Double>
  fullName: Ampere.MathUtils.IMatrixer<System.Double>
  nameWithType.vb: IMatrixer(Of Double)
  fullName.vb: Ampere.MathUtils.IMatrixer(Of System.Double)
  name.vb: IMatrixer(Of Double)
  spec.csharp:
  - uid: Ampere.MathUtils.IMatrixer`1
    name: IMatrixer
    nameWithType: IMatrixer
    fullName: Ampere.MathUtils.IMatrixer
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Ampere.MathUtils.IMatrixer`1
    name: IMatrixer
    nameWithType: IMatrixer
    fullName: Ampere.MathUtils.IMatrixer
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Double}
  commentId: T:System.Collections.Generic.IEnumerable{System.Double}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Double>
  nameWithType: IEnumerable<Double>
  fullName: System.Collections.Generic.IEnumerable<System.Double>
  nameWithType.vb: IEnumerable(Of Double)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Double)
  name.vb: IEnumerable(Of Double)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: Ampere.Base.IIndexableDouble{System.Int32,System.Double}
  commentId: T:Ampere.Base.IIndexableDouble{System.Int32,System.Double}
  parent: Ampere.Base
  definition: Ampere.Base.IIndexableDouble`2
  name: IIndexableDouble<Int32, Double>
  nameWithType: IIndexableDouble<Int32, Double>
  fullName: Ampere.Base.IIndexableDouble<System.Int32, System.Double>
  nameWithType.vb: IIndexableDouble(Of Int32, Double)
  fullName.vb: Ampere.Base.IIndexableDouble(Of System.Int32, System.Double)
  name.vb: IIndexableDouble(Of Int32, Double)
  spec.csharp:
  - uid: Ampere.Base.IIndexableDouble`2
    name: IIndexableDouble
    nameWithType: IIndexableDouble
    fullName: Ampere.Base.IIndexableDouble
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Ampere.Base.IIndexableDouble`2
    name: IIndexableDouble
    nameWithType: IIndexableDouble
    fullName: Ampere.Base.IIndexableDouble
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Double}.Ampere.EnumerableUtils.EnumerableUtils.IsNullOrEmpty``1
  commentId: M:Ampere.EnumerableUtils.EnumerableUtils.IsNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0})
  parent: Ampere.EnumerableUtils.EnumerableUtils
  definition: Ampere.EnumerableUtils.EnumerableUtils.IsNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0})
  name: IsNullOrEmpty<Double>()
  nameWithType: EnumerableUtils.IsNullOrEmpty<Double>()
  fullName: Ampere.EnumerableUtils.EnumerableUtils.IsNullOrEmpty<System.Double>()
  nameWithType.vb: EnumerableUtils.IsNullOrEmpty(Of Double)()
  fullName.vb: Ampere.EnumerableUtils.EnumerableUtils.IsNullOrEmpty(Of System.Double)()
  name.vb: IsNullOrEmpty(Of Double)()
  spec.csharp:
  - uid: Ampere.EnumerableUtils.EnumerableUtils.IsNullOrEmpty``1
    name: IsNullOrEmpty<Double>
    nameWithType: EnumerableUtils.IsNullOrEmpty<Double>
    fullName: Ampere.EnumerableUtils.EnumerableUtils.IsNullOrEmpty<System.Double>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.EnumerableUtils.EnumerableUtils.IsNullOrEmpty``1
    name: IsNullOrEmpty(Of Double)
    nameWithType: EnumerableUtils.IsNullOrEmpty(Of Double)
    fullName: Ampere.EnumerableUtils.EnumerableUtils.IsNullOrEmpty(Of System.Double)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Double}.Ampere.EnumerableUtils.EnumerableUtils.Shuffle``1
  commentId: M:Ampere.EnumerableUtils.EnumerableUtils.Shuffle``1(System.Collections.Generic.IEnumerable{``0})
  parent: Ampere.EnumerableUtils.EnumerableUtils
  definition: Ampere.EnumerableUtils.EnumerableUtils.Shuffle``1(System.Collections.Generic.IEnumerable{``0})
  name: Shuffle<Double>()
  nameWithType: EnumerableUtils.Shuffle<Double>()
  fullName: Ampere.EnumerableUtils.EnumerableUtils.Shuffle<System.Double>()
  nameWithType.vb: EnumerableUtils.Shuffle(Of Double)()
  fullName.vb: Ampere.EnumerableUtils.EnumerableUtils.Shuffle(Of System.Double)()
  name.vb: Shuffle(Of Double)()
  spec.csharp:
  - uid: Ampere.EnumerableUtils.EnumerableUtils.Shuffle``1
    name: Shuffle<Double>
    nameWithType: EnumerableUtils.Shuffle<Double>
    fullName: Ampere.EnumerableUtils.EnumerableUtils.Shuffle<System.Double>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.EnumerableUtils.EnumerableUtils.Shuffle``1
    name: Shuffle(Of Double)
    nameWithType: EnumerableUtils.Shuffle(Of Double)
    fullName: Ampere.EnumerableUtils.EnumerableUtils.Shuffle(Of System.Double)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Double}.Ampere.EnumerableUtils.EnumerableUtils.ToString``1(System.String,System.Boolean)
  commentId: M:Ampere.EnumerableUtils.EnumerableUtils.ToString``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Boolean)
  parent: Ampere.EnumerableUtils.EnumerableUtils
  definition: Ampere.EnumerableUtils.EnumerableUtils.ToString``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Boolean)
  name: ToString<Double>(String, Boolean)
  nameWithType: EnumerableUtils.ToString<Double>(String, Boolean)
  fullName: Ampere.EnumerableUtils.EnumerableUtils.ToString<System.Double>(System.String, System.Boolean)
  nameWithType.vb: EnumerableUtils.ToString(Of Double)(String, Boolean)
  fullName.vb: Ampere.EnumerableUtils.EnumerableUtils.ToString(Of System.Double)(System.String, System.Boolean)
  name.vb: ToString(Of Double)(String, Boolean)
  spec.csharp:
  - uid: Ampere.EnumerableUtils.EnumerableUtils.ToString``1(System.String,System.Boolean)
    name: ToString<Double>
    nameWithType: EnumerableUtils.ToString<Double>
    fullName: Ampere.EnumerableUtils.EnumerableUtils.ToString<System.Double>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.EnumerableUtils.EnumerableUtils.ToString``1(System.String,System.Boolean)
    name: ToString(Of Double)
    nameWithType: EnumerableUtils.ToString(Of Double)
    fullName: Ampere.EnumerableUtils.EnumerableUtils.ToString(Of System.Double)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.Mean``1(System.Func{System.Double,System.Double})
  commentId: M:Ampere.Statistics.EnumerableStats.Mean``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  parent: Ampere.Statistics.EnumerableStats
  definition: Ampere.Statistics.EnumerableStats.Mean``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  name: Mean<Double>(Func<Double, Double>)
  nameWithType: EnumerableStats.Mean<Double>(Func<Double, Double>)
  fullName: Ampere.Statistics.EnumerableStats.Mean<System.Double>(System.Func<System.Double, System.Double>)
  nameWithType.vb: EnumerableStats.Mean(Of Double)(Func(Of Double, Double))
  fullName.vb: Ampere.Statistics.EnumerableStats.Mean(Of System.Double)(System.Func(Of System.Double, System.Double))
  name.vb: Mean(Of Double)(Func(Of Double, Double))
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.Mean``1(System.Func{``0,System.Double})
    name: Mean<Double>
    nameWithType: EnumerableStats.Mean<Double>
    fullName: Ampere.Statistics.EnumerableStats.Mean<System.Double>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.Mean``1(System.Func{``0,System.Double})
    name: Mean(Of Double)
    nameWithType: EnumerableStats.Mean(Of Double)
    fullName: Ampere.Statistics.EnumerableStats.Mean(Of System.Double)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.Median``1(System.Func{System.Double,System.Double})
  commentId: M:Ampere.Statistics.EnumerableStats.Median``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  parent: Ampere.Statistics.EnumerableStats
  definition: Ampere.Statistics.EnumerableStats.Median``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  name: Median<Double>(Func<Double, Double>)
  nameWithType: EnumerableStats.Median<Double>(Func<Double, Double>)
  fullName: Ampere.Statistics.EnumerableStats.Median<System.Double>(System.Func<System.Double, System.Double>)
  nameWithType.vb: EnumerableStats.Median(Of Double)(Func(Of Double, Double))
  fullName.vb: Ampere.Statistics.EnumerableStats.Median(Of System.Double)(System.Func(Of System.Double, System.Double))
  name.vb: Median(Of Double)(Func(Of Double, Double))
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.Median``1(System.Func{``0,System.Double})
    name: Median<Double>
    nameWithType: EnumerableStats.Median<Double>
    fullName: Ampere.Statistics.EnumerableStats.Median<System.Double>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.Median``1(System.Func{``0,System.Double})
    name: Median(Of Double)
    nameWithType: EnumerableStats.Median(Of Double)
    fullName: Ampere.Statistics.EnumerableStats.Median(Of System.Double)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.Mode
  commentId: M:Ampere.Statistics.EnumerableStats.Mode(System.Collections.Generic.IEnumerable{System.Double})
  parent: Ampere.Statistics.EnumerableStats
  definition: Ampere.Statistics.EnumerableStats.Mode(System.Collections.Generic.IEnumerable{System.Double})
  name: Mode()
  nameWithType: EnumerableStats.Mode()
  fullName: Ampere.Statistics.EnumerableStats.Mode()
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.Mode
    name: Mode
    nameWithType: EnumerableStats.Mode
    fullName: Ampere.Statistics.EnumerableStats.Mode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.Mode
    name: Mode
    nameWithType: EnumerableStats.Mode
    fullName: Ampere.Statistics.EnumerableStats.Mode
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.Mode``1(System.Func{System.Double,System.Double})
  commentId: M:Ampere.Statistics.EnumerableStats.Mode``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  parent: Ampere.Statistics.EnumerableStats
  definition: Ampere.Statistics.EnumerableStats.Mode``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  name: Mode<Double>(Func<Double, Double>)
  nameWithType: EnumerableStats.Mode<Double>(Func<Double, Double>)
  fullName: Ampere.Statistics.EnumerableStats.Mode<System.Double>(System.Func<System.Double, System.Double>)
  nameWithType.vb: EnumerableStats.Mode(Of Double)(Func(Of Double, Double))
  fullName.vb: Ampere.Statistics.EnumerableStats.Mode(Of System.Double)(System.Func(Of System.Double, System.Double))
  name.vb: Mode(Of Double)(Func(Of Double, Double))
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.Mode``1(System.Func{``0,System.Double})
    name: Mode<Double>
    nameWithType: EnumerableStats.Mode<Double>
    fullName: Ampere.Statistics.EnumerableStats.Mode<System.Double>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.Mode``1(System.Func{``0,System.Double})
    name: Mode(Of Double)
    nameWithType: EnumerableStats.Mode(Of Double)
    fullName: Ampere.Statistics.EnumerableStats.Mode(Of System.Double)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.SampleVariance
  commentId: M:Ampere.Statistics.EnumerableStats.SampleVariance(System.Collections.Generic.IEnumerable{System.Double})
  parent: Ampere.Statistics.EnumerableStats
  definition: Ampere.Statistics.EnumerableStats.SampleVariance(System.Collections.Generic.IEnumerable{System.Double})
  name: SampleVariance()
  nameWithType: EnumerableStats.SampleVariance()
  fullName: Ampere.Statistics.EnumerableStats.SampleVariance()
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.SampleVariance
    name: SampleVariance
    nameWithType: EnumerableStats.SampleVariance
    fullName: Ampere.Statistics.EnumerableStats.SampleVariance
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.SampleVariance
    name: SampleVariance
    nameWithType: EnumerableStats.SampleVariance
    fullName: Ampere.Statistics.EnumerableStats.SampleVariance
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.SampleVariance``1(System.Func{System.Double,System.Double})
  commentId: M:Ampere.Statistics.EnumerableStats.SampleVariance``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  parent: Ampere.Statistics.EnumerableStats
  definition: Ampere.Statistics.EnumerableStats.SampleVariance``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  name: SampleVariance<Double>(Func<Double, Double>)
  nameWithType: EnumerableStats.SampleVariance<Double>(Func<Double, Double>)
  fullName: Ampere.Statistics.EnumerableStats.SampleVariance<System.Double>(System.Func<System.Double, System.Double>)
  nameWithType.vb: EnumerableStats.SampleVariance(Of Double)(Func(Of Double, Double))
  fullName.vb: Ampere.Statistics.EnumerableStats.SampleVariance(Of System.Double)(System.Func(Of System.Double, System.Double))
  name.vb: SampleVariance(Of Double)(Func(Of Double, Double))
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.SampleVariance``1(System.Func{``0,System.Double})
    name: SampleVariance<Double>
    nameWithType: EnumerableStats.SampleVariance<Double>
    fullName: Ampere.Statistics.EnumerableStats.SampleVariance<System.Double>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.SampleVariance``1(System.Func{``0,System.Double})
    name: SampleVariance(Of Double)
    nameWithType: EnumerableStats.SampleVariance(Of Double)
    fullName: Ampere.Statistics.EnumerableStats.SampleVariance(Of System.Double)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.PopulationVariance
  commentId: M:Ampere.Statistics.EnumerableStats.PopulationVariance(System.Collections.Generic.IEnumerable{System.Double})
  parent: Ampere.Statistics.EnumerableStats
  definition: Ampere.Statistics.EnumerableStats.PopulationVariance(System.Collections.Generic.IEnumerable{System.Double})
  name: PopulationVariance()
  nameWithType: EnumerableStats.PopulationVariance()
  fullName: Ampere.Statistics.EnumerableStats.PopulationVariance()
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.PopulationVariance
    name: PopulationVariance
    nameWithType: EnumerableStats.PopulationVariance
    fullName: Ampere.Statistics.EnumerableStats.PopulationVariance
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.PopulationVariance
    name: PopulationVariance
    nameWithType: EnumerableStats.PopulationVariance
    fullName: Ampere.Statistics.EnumerableStats.PopulationVariance
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.PopulationVariance``1(System.Func{System.Double,System.Double})
  commentId: M:Ampere.Statistics.EnumerableStats.PopulationVariance``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  parent: Ampere.Statistics.EnumerableStats
  definition: Ampere.Statistics.EnumerableStats.PopulationVariance``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  name: PopulationVariance<Double>(Func<Double, Double>)
  nameWithType: EnumerableStats.PopulationVariance<Double>(Func<Double, Double>)
  fullName: Ampere.Statistics.EnumerableStats.PopulationVariance<System.Double>(System.Func<System.Double, System.Double>)
  nameWithType.vb: EnumerableStats.PopulationVariance(Of Double)(Func(Of Double, Double))
  fullName.vb: Ampere.Statistics.EnumerableStats.PopulationVariance(Of System.Double)(System.Func(Of System.Double, System.Double))
  name.vb: PopulationVariance(Of Double)(Func(Of Double, Double))
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.PopulationVariance``1(System.Func{``0,System.Double})
    name: PopulationVariance<Double>
    nameWithType: EnumerableStats.PopulationVariance<Double>
    fullName: Ampere.Statistics.EnumerableStats.PopulationVariance<System.Double>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.PopulationVariance``1(System.Func{``0,System.Double})
    name: PopulationVariance(Of Double)
    nameWithType: EnumerableStats.PopulationVariance(Of Double)
    fullName: Ampere.Statistics.EnumerableStats.PopulationVariance(Of System.Double)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.SampleStandardDeviation
  commentId: M:Ampere.Statistics.EnumerableStats.SampleStandardDeviation(System.Collections.Generic.IEnumerable{System.Double})
  parent: Ampere.Statistics.EnumerableStats
  definition: Ampere.Statistics.EnumerableStats.SampleStandardDeviation(System.Collections.Generic.IEnumerable{System.Double})
  name: SampleStandardDeviation()
  nameWithType: EnumerableStats.SampleStandardDeviation()
  fullName: Ampere.Statistics.EnumerableStats.SampleStandardDeviation()
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.SampleStandardDeviation
    name: SampleStandardDeviation
    nameWithType: EnumerableStats.SampleStandardDeviation
    fullName: Ampere.Statistics.EnumerableStats.SampleStandardDeviation
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.SampleStandardDeviation
    name: SampleStandardDeviation
    nameWithType: EnumerableStats.SampleStandardDeviation
    fullName: Ampere.Statistics.EnumerableStats.SampleStandardDeviation
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.SampleStandardDeviation``1(System.Func{System.Double,System.Double})
  commentId: M:Ampere.Statistics.EnumerableStats.SampleStandardDeviation``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  parent: Ampere.Statistics.EnumerableStats
  definition: Ampere.Statistics.EnumerableStats.SampleStandardDeviation``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  name: SampleStandardDeviation<Double>(Func<Double, Double>)
  nameWithType: EnumerableStats.SampleStandardDeviation<Double>(Func<Double, Double>)
  fullName: Ampere.Statistics.EnumerableStats.SampleStandardDeviation<System.Double>(System.Func<System.Double, System.Double>)
  nameWithType.vb: EnumerableStats.SampleStandardDeviation(Of Double)(Func(Of Double, Double))
  fullName.vb: Ampere.Statistics.EnumerableStats.SampleStandardDeviation(Of System.Double)(System.Func(Of System.Double, System.Double))
  name.vb: SampleStandardDeviation(Of Double)(Func(Of Double, Double))
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.SampleStandardDeviation``1(System.Func{``0,System.Double})
    name: SampleStandardDeviation<Double>
    nameWithType: EnumerableStats.SampleStandardDeviation<Double>
    fullName: Ampere.Statistics.EnumerableStats.SampleStandardDeviation<System.Double>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.SampleStandardDeviation``1(System.Func{``0,System.Double})
    name: SampleStandardDeviation(Of Double)
    nameWithType: EnumerableStats.SampleStandardDeviation(Of Double)
    fullName: Ampere.Statistics.EnumerableStats.SampleStandardDeviation(Of System.Double)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.PopulationStandardDeviation
  commentId: M:Ampere.Statistics.EnumerableStats.PopulationStandardDeviation(System.Collections.Generic.IEnumerable{System.Double})
  parent: Ampere.Statistics.EnumerableStats
  definition: Ampere.Statistics.EnumerableStats.PopulationStandardDeviation(System.Collections.Generic.IEnumerable{System.Double})
  name: PopulationStandardDeviation()
  nameWithType: EnumerableStats.PopulationStandardDeviation()
  fullName: Ampere.Statistics.EnumerableStats.PopulationStandardDeviation()
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.PopulationStandardDeviation
    name: PopulationStandardDeviation
    nameWithType: EnumerableStats.PopulationStandardDeviation
    fullName: Ampere.Statistics.EnumerableStats.PopulationStandardDeviation
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.PopulationStandardDeviation
    name: PopulationStandardDeviation
    nameWithType: EnumerableStats.PopulationStandardDeviation
    fullName: Ampere.Statistics.EnumerableStats.PopulationStandardDeviation
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.PopulationStandardDeviation``1(System.Func{System.Double,System.Double})
  commentId: M:Ampere.Statistics.EnumerableStats.PopulationStandardDeviation``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  parent: Ampere.Statistics.EnumerableStats
  definition: Ampere.Statistics.EnumerableStats.PopulationStandardDeviation``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  name: PopulationStandardDeviation<Double>(Func<Double, Double>)
  nameWithType: EnumerableStats.PopulationStandardDeviation<Double>(Func<Double, Double>)
  fullName: Ampere.Statistics.EnumerableStats.PopulationStandardDeviation<System.Double>(System.Func<System.Double, System.Double>)
  nameWithType.vb: EnumerableStats.PopulationStandardDeviation(Of Double)(Func(Of Double, Double))
  fullName.vb: Ampere.Statistics.EnumerableStats.PopulationStandardDeviation(Of System.Double)(System.Func(Of System.Double, System.Double))
  name.vb: PopulationStandardDeviation(Of Double)(Func(Of Double, Double))
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.PopulationStandardDeviation``1(System.Func{``0,System.Double})
    name: PopulationStandardDeviation<Double>
    nameWithType: EnumerableStats.PopulationStandardDeviation<Double>
    fullName: Ampere.Statistics.EnumerableStats.PopulationStandardDeviation<System.Double>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.PopulationStandardDeviation``1(System.Func{``0,System.Double})
    name: PopulationStandardDeviation(Of Double)
    nameWithType: EnumerableStats.PopulationStandardDeviation(Of Double)
    fullName: Ampere.Statistics.EnumerableStats.PopulationStandardDeviation(Of System.Double)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.Range
  commentId: M:Ampere.Statistics.EnumerableStats.Range(System.Collections.Generic.IEnumerable{System.Double})
  parent: Ampere.Statistics.EnumerableStats
  definition: Ampere.Statistics.EnumerableStats.Range(System.Collections.Generic.IEnumerable{System.Double})
  name: Range()
  nameWithType: EnumerableStats.Range()
  fullName: Ampere.Statistics.EnumerableStats.Range()
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.Range
    name: Range
    nameWithType: EnumerableStats.Range
    fullName: Ampere.Statistics.EnumerableStats.Range
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.Range
    name: Range
    nameWithType: EnumerableStats.Range
    fullName: Ampere.Statistics.EnumerableStats.Range
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.Range``1(System.Func{System.Double,System.Double})
  commentId: M:Ampere.Statistics.EnumerableStats.Range``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  parent: Ampere.Statistics.EnumerableStats
  definition: Ampere.Statistics.EnumerableStats.Range``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  name: Range<Double>(Func<Double, Double>)
  nameWithType: EnumerableStats.Range<Double>(Func<Double, Double>)
  fullName: Ampere.Statistics.EnumerableStats.Range<System.Double>(System.Func<System.Double, System.Double>)
  nameWithType.vb: EnumerableStats.Range(Of Double)(Func(Of Double, Double))
  fullName.vb: Ampere.Statistics.EnumerableStats.Range(Of System.Double)(System.Func(Of System.Double, System.Double))
  name.vb: Range(Of Double)(Func(Of Double, Double))
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.Range``1(System.Func{``0,System.Double})
    name: Range<Double>
    nameWithType: EnumerableStats.Range<Double>
    fullName: Ampere.Statistics.EnumerableStats.Range<System.Double>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.Range``1(System.Func{``0,System.Double})
    name: Range(Of Double)
    nameWithType: EnumerableStats.Range(Of Double)
    fullName: Ampere.Statistics.EnumerableStats.Range(Of System.Double)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.LowerQuartile
  commentId: M:Ampere.Statistics.EnumerableStats.LowerQuartile(System.Collections.Generic.IEnumerable{System.Double})
  parent: Ampere.Statistics.EnumerableStats
  definition: Ampere.Statistics.EnumerableStats.LowerQuartile(System.Collections.Generic.IEnumerable{System.Double})
  name: LowerQuartile()
  nameWithType: EnumerableStats.LowerQuartile()
  fullName: Ampere.Statistics.EnumerableStats.LowerQuartile()
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.LowerQuartile
    name: LowerQuartile
    nameWithType: EnumerableStats.LowerQuartile
    fullName: Ampere.Statistics.EnumerableStats.LowerQuartile
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.LowerQuartile
    name: LowerQuartile
    nameWithType: EnumerableStats.LowerQuartile
    fullName: Ampere.Statistics.EnumerableStats.LowerQuartile
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.LowerQuartile``1(System.Func{System.Double,System.Double})
  commentId: M:Ampere.Statistics.EnumerableStats.LowerQuartile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  parent: Ampere.Statistics.EnumerableStats
  definition: Ampere.Statistics.EnumerableStats.LowerQuartile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  name: LowerQuartile<Double>(Func<Double, Double>)
  nameWithType: EnumerableStats.LowerQuartile<Double>(Func<Double, Double>)
  fullName: Ampere.Statistics.EnumerableStats.LowerQuartile<System.Double>(System.Func<System.Double, System.Double>)
  nameWithType.vb: EnumerableStats.LowerQuartile(Of Double)(Func(Of Double, Double))
  fullName.vb: Ampere.Statistics.EnumerableStats.LowerQuartile(Of System.Double)(System.Func(Of System.Double, System.Double))
  name.vb: LowerQuartile(Of Double)(Func(Of Double, Double))
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.LowerQuartile``1(System.Func{``0,System.Double})
    name: LowerQuartile<Double>
    nameWithType: EnumerableStats.LowerQuartile<Double>
    fullName: Ampere.Statistics.EnumerableStats.LowerQuartile<System.Double>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.LowerQuartile``1(System.Func{``0,System.Double})
    name: LowerQuartile(Of Double)
    nameWithType: EnumerableStats.LowerQuartile(Of Double)
    fullName: Ampere.Statistics.EnumerableStats.LowerQuartile(Of System.Double)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.UpperQuartile
  commentId: M:Ampere.Statistics.EnumerableStats.UpperQuartile(System.Collections.Generic.IEnumerable{System.Double})
  parent: Ampere.Statistics.EnumerableStats
  definition: Ampere.Statistics.EnumerableStats.UpperQuartile(System.Collections.Generic.IEnumerable{System.Double})
  name: UpperQuartile()
  nameWithType: EnumerableStats.UpperQuartile()
  fullName: Ampere.Statistics.EnumerableStats.UpperQuartile()
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.UpperQuartile
    name: UpperQuartile
    nameWithType: EnumerableStats.UpperQuartile
    fullName: Ampere.Statistics.EnumerableStats.UpperQuartile
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.UpperQuartile
    name: UpperQuartile
    nameWithType: EnumerableStats.UpperQuartile
    fullName: Ampere.Statistics.EnumerableStats.UpperQuartile
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.UpperQuartile``1(System.Func{System.Double,System.Double})
  commentId: M:Ampere.Statistics.EnumerableStats.UpperQuartile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  parent: Ampere.Statistics.EnumerableStats
  definition: Ampere.Statistics.EnumerableStats.UpperQuartile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  name: UpperQuartile<Double>(Func<Double, Double>)
  nameWithType: EnumerableStats.UpperQuartile<Double>(Func<Double, Double>)
  fullName: Ampere.Statistics.EnumerableStats.UpperQuartile<System.Double>(System.Func<System.Double, System.Double>)
  nameWithType.vb: EnumerableStats.UpperQuartile(Of Double)(Func(Of Double, Double))
  fullName.vb: Ampere.Statistics.EnumerableStats.UpperQuartile(Of System.Double)(System.Func(Of System.Double, System.Double))
  name.vb: UpperQuartile(Of Double)(Func(Of Double, Double))
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.UpperQuartile``1(System.Func{``0,System.Double})
    name: UpperQuartile<Double>
    nameWithType: EnumerableStats.UpperQuartile<Double>
    fullName: Ampere.Statistics.EnumerableStats.UpperQuartile<System.Double>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.UpperQuartile``1(System.Func{``0,System.Double})
    name: UpperQuartile(Of Double)
    nameWithType: EnumerableStats.UpperQuartile(Of Double)
    fullName: Ampere.Statistics.EnumerableStats.UpperQuartile(Of System.Double)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.InterQuartileRange
  commentId: M:Ampere.Statistics.EnumerableStats.InterQuartileRange(System.Collections.Generic.IEnumerable{System.Double})
  parent: Ampere.Statistics.EnumerableStats
  definition: Ampere.Statistics.EnumerableStats.InterQuartileRange(System.Collections.Generic.IEnumerable{System.Double})
  name: InterQuartileRange()
  nameWithType: EnumerableStats.InterQuartileRange()
  fullName: Ampere.Statistics.EnumerableStats.InterQuartileRange()
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.InterQuartileRange
    name: InterQuartileRange
    nameWithType: EnumerableStats.InterQuartileRange
    fullName: Ampere.Statistics.EnumerableStats.InterQuartileRange
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.InterQuartileRange
    name: InterQuartileRange
    nameWithType: EnumerableStats.InterQuartileRange
    fullName: Ampere.Statistics.EnumerableStats.InterQuartileRange
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.InterQuartileRange``1(System.Func{System.Double,System.Double})
  commentId: M:Ampere.Statistics.EnumerableStats.InterQuartileRange``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  parent: Ampere.Statistics.EnumerableStats
  definition: Ampere.Statistics.EnumerableStats.InterQuartileRange``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  name: InterQuartileRange<Double>(Func<Double, Double>)
  nameWithType: EnumerableStats.InterQuartileRange<Double>(Func<Double, Double>)
  fullName: Ampere.Statistics.EnumerableStats.InterQuartileRange<System.Double>(System.Func<System.Double, System.Double>)
  nameWithType.vb: EnumerableStats.InterQuartileRange(Of Double)(Func(Of Double, Double))
  fullName.vb: Ampere.Statistics.EnumerableStats.InterQuartileRange(Of System.Double)(System.Func(Of System.Double, System.Double))
  name.vb: InterQuartileRange(Of Double)(Func(Of Double, Double))
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.InterQuartileRange``1(System.Func{``0,System.Double})
    name: InterQuartileRange<Double>
    nameWithType: EnumerableStats.InterQuartileRange<Double>
    fullName: Ampere.Statistics.EnumerableStats.InterQuartileRange<System.Double>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.InterQuartileRange``1(System.Func{``0,System.Double})
    name: InterQuartileRange(Of Double)
    nameWithType: EnumerableStats.InterQuartileRange(Of Double)
    fullName: Ampere.Statistics.EnumerableStats.InterQuartileRange(Of System.Double)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.IsNormalProportion(System.Double)
  commentId: M:Ampere.Statistics.EnumerableStats.IsNormalProportion(System.Collections.Generic.IEnumerable{System.Double},System.Double)
  parent: Ampere.Statistics.EnumerableStats
  definition: Ampere.Statistics.EnumerableStats.IsNormalProportion(System.Collections.Generic.IEnumerable{System.Double},System.Double)
  name: IsNormalProportion(Double)
  nameWithType: EnumerableStats.IsNormalProportion(Double)
  fullName: Ampere.Statistics.EnumerableStats.IsNormalProportion(System.Double)
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.IsNormalProportion(System.Double)
    name: IsNormalProportion
    nameWithType: EnumerableStats.IsNormalProportion
    fullName: Ampere.Statistics.EnumerableStats.IsNormalProportion
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.IsNormalProportion(System.Double)
    name: IsNormalProportion
    nameWithType: EnumerableStats.IsNormalProportion
    fullName: Ampere.Statistics.EnumerableStats.IsNormalProportion
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.IsNormalProportion``1(System.Func{System.Double,System.Double},System.Double)
  commentId: M:Ampere.Statistics.EnumerableStats.IsNormalProportion``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double},System.Double)
  parent: Ampere.Statistics.EnumerableStats
  definition: Ampere.Statistics.EnumerableStats.IsNormalProportion``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double},System.Double)
  name: IsNormalProportion<Double>(Func<Double, Double>, Double)
  nameWithType: EnumerableStats.IsNormalProportion<Double>(Func<Double, Double>, Double)
  fullName: Ampere.Statistics.EnumerableStats.IsNormalProportion<System.Double>(System.Func<System.Double, System.Double>, System.Double)
  nameWithType.vb: EnumerableStats.IsNormalProportion(Of Double)(Func(Of Double, Double), Double)
  fullName.vb: Ampere.Statistics.EnumerableStats.IsNormalProportion(Of System.Double)(System.Func(Of System.Double, System.Double), System.Double)
  name.vb: IsNormalProportion(Of Double)(Func(Of Double, Double), Double)
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.IsNormalProportion``1(System.Func{``0,System.Double},System.Double)
    name: IsNormalProportion<Double>
    nameWithType: EnumerableStats.IsNormalProportion<Double>
    fullName: Ampere.Statistics.EnumerableStats.IsNormalProportion<System.Double>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.IsNormalProportion``1(System.Func{``0,System.Double},System.Double)
    name: IsNormalProportion(Of Double)
    nameWithType: EnumerableStats.IsNormalProportion(Of Double)
    fullName: Ampere.Statistics.EnumerableStats.IsNormalProportion(Of System.Double)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.IsNormalMean
  commentId: M:Ampere.Statistics.EnumerableStats.IsNormalMean(System.Collections.Generic.IEnumerable{System.Double})
  parent: Ampere.Statistics.EnumerableStats
  definition: Ampere.Statistics.EnumerableStats.IsNormalMean(System.Collections.Generic.IEnumerable{System.Double})
  name: IsNormalMean()
  nameWithType: EnumerableStats.IsNormalMean()
  fullName: Ampere.Statistics.EnumerableStats.IsNormalMean()
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.IsNormalMean
    name: IsNormalMean
    nameWithType: EnumerableStats.IsNormalMean
    fullName: Ampere.Statistics.EnumerableStats.IsNormalMean
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.IsNormalMean
    name: IsNormalMean
    nameWithType: EnumerableStats.IsNormalMean
    fullName: Ampere.Statistics.EnumerableStats.IsNormalMean
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.IsNormalMean``1(System.Func{System.Double,System.Double})
  commentId: M:Ampere.Statistics.EnumerableStats.IsNormalMean``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  parent: Ampere.Statistics.EnumerableStats
  definition: Ampere.Statistics.EnumerableStats.IsNormalMean``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  name: IsNormalMean<Double>(Func<Double, Double>)
  nameWithType: EnumerableStats.IsNormalMean<Double>(Func<Double, Double>)
  fullName: Ampere.Statistics.EnumerableStats.IsNormalMean<System.Double>(System.Func<System.Double, System.Double>)
  nameWithType.vb: EnumerableStats.IsNormalMean(Of Double)(Func(Of Double, Double))
  fullName.vb: Ampere.Statistics.EnumerableStats.IsNormalMean(Of System.Double)(System.Func(Of System.Double, System.Double))
  name.vb: IsNormalMean(Of Double)(Func(Of Double, Double))
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.IsNormalMean``1(System.Func{``0,System.Double})
    name: IsNormalMean<Double>
    nameWithType: EnumerableStats.IsNormalMean<Double>
    fullName: Ampere.Statistics.EnumerableStats.IsNormalMean<System.Double>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.IsNormalMean``1(System.Func{``0,System.Double})
    name: IsNormalMean(Of Double)
    nameWithType: EnumerableStats.IsNormalMean(Of Double)
    fullName: Ampere.Statistics.EnumerableStats.IsNormalMean(Of System.Double)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.StandardizedScore(System.Double)
  commentId: M:Ampere.Statistics.EnumerableStats.StandardizedScore(System.Collections.Generic.IEnumerable{System.Double},System.Double)
  parent: Ampere.Statistics.EnumerableStats
  definition: Ampere.Statistics.EnumerableStats.StandardizedScore(System.Collections.Generic.IEnumerable{System.Double},System.Double)
  name: StandardizedScore(Double)
  nameWithType: EnumerableStats.StandardizedScore(Double)
  fullName: Ampere.Statistics.EnumerableStats.StandardizedScore(System.Double)
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.StandardizedScore(System.Double)
    name: StandardizedScore
    nameWithType: EnumerableStats.StandardizedScore
    fullName: Ampere.Statistics.EnumerableStats.StandardizedScore
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.StandardizedScore(System.Double)
    name: StandardizedScore
    nameWithType: EnumerableStats.StandardizedScore
    fullName: Ampere.Statistics.EnumerableStats.StandardizedScore
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Double}.Ampere.Statistics.EnumerableStats.StandardizedScore``1(System.Func{System.Double,System.Double},System.Double)
  commentId: M:Ampere.Statistics.EnumerableStats.StandardizedScore``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double},System.Double)
  parent: Ampere.Statistics.EnumerableStats
  definition: Ampere.Statistics.EnumerableStats.StandardizedScore``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double},System.Double)
  name: StandardizedScore<Double>(Func<Double, Double>, Double)
  nameWithType: EnumerableStats.StandardizedScore<Double>(Func<Double, Double>, Double)
  fullName: Ampere.Statistics.EnumerableStats.StandardizedScore<System.Double>(System.Func<System.Double, System.Double>, System.Double)
  nameWithType.vb: EnumerableStats.StandardizedScore(Of Double)(Func(Of Double, Double), Double)
  fullName.vb: Ampere.Statistics.EnumerableStats.StandardizedScore(Of System.Double)(System.Func(Of System.Double, System.Double), System.Double)
  name.vb: StandardizedScore(Of Double)(Func(Of Double, Double), Double)
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.StandardizedScore``1(System.Func{``0,System.Double},System.Double)
    name: StandardizedScore<Double>
    nameWithType: EnumerableStats.StandardizedScore<Double>
    fullName: Ampere.Statistics.EnumerableStats.StandardizedScore<System.Double>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.StandardizedScore``1(System.Func{``0,System.Double},System.Double)
    name: StandardizedScore(Of Double)
    nameWithType: EnumerableStats.StandardizedScore(Of Double)
    fullName: Ampere.Statistics.EnumerableStats.StandardizedScore(Of System.Double)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Ampere.MathUtils.IMatrixer`1
  commentId: T:Ampere.MathUtils.IMatrixer`1
  name: IMatrixer<T>
  nameWithType: IMatrixer<T>
  fullName: Ampere.MathUtils.IMatrixer<T>
  nameWithType.vb: IMatrixer(Of T)
  fullName.vb: Ampere.MathUtils.IMatrixer(Of T)
  name.vb: IMatrixer(Of T)
  spec.csharp:
  - uid: Ampere.MathUtils.IMatrixer`1
    name: IMatrixer
    nameWithType: IMatrixer
    fullName: Ampere.MathUtils.IMatrixer
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Ampere.MathUtils.IMatrixer`1
    name: IMatrixer
    nameWithType: IMatrixer
    fullName: Ampere.MathUtils.IMatrixer
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Ampere.Base.IIndexableDouble`2
  commentId: T:Ampere.Base.IIndexableDouble`2
  name: IIndexableDouble<TKey, TVal>
  nameWithType: IIndexableDouble<TKey, TVal>
  fullName: Ampere.Base.IIndexableDouble<TKey, TVal>
  nameWithType.vb: IIndexableDouble(Of TKey, TVal)
  fullName.vb: Ampere.Base.IIndexableDouble(Of TKey, TVal)
  name.vb: IIndexableDouble(Of TKey, TVal)
  spec.csharp:
  - uid: Ampere.Base.IIndexableDouble`2
    name: IIndexableDouble
    nameWithType: IIndexableDouble
    fullName: Ampere.Base.IIndexableDouble
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TVal
    nameWithType: TVal
    fullName: TVal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Ampere.Base.IIndexableDouble`2
    name: IIndexableDouble
    nameWithType: IIndexableDouble
    fullName: Ampere.Base.IIndexableDouble
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TVal
    nameWithType: TVal
    fullName: TVal
  - name: )
    nameWithType: )
    fullName: )
- uid: Ampere.Base
  commentId: N:Ampere.Base
  name: Ampere.Base
  nameWithType: Ampere.Base
  fullName: Ampere.Base
- uid: Ampere.EnumerableUtils.EnumerableUtils.IsNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:Ampere.EnumerableUtils.EnumerableUtils.IsNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: IsNullOrEmpty<T>(IEnumerable<T>)
  nameWithType: EnumerableUtils.IsNullOrEmpty<T>(IEnumerable<T>)
  fullName: Ampere.EnumerableUtils.EnumerableUtils.IsNullOrEmpty<T>(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: EnumerableUtils.IsNullOrEmpty(Of T)(IEnumerable(Of T))
  fullName.vb: Ampere.EnumerableUtils.EnumerableUtils.IsNullOrEmpty(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: IsNullOrEmpty(Of T)(IEnumerable(Of T))
  spec.csharp:
  - uid: Ampere.EnumerableUtils.EnumerableUtils.IsNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0})
    name: IsNullOrEmpty<T>
    nameWithType: EnumerableUtils.IsNullOrEmpty<T>
    fullName: Ampere.EnumerableUtils.EnumerableUtils.IsNullOrEmpty<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.EnumerableUtils.EnumerableUtils.IsNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0})
    name: IsNullOrEmpty(Of T)
    nameWithType: EnumerableUtils.IsNullOrEmpty(Of T)
    fullName: Ampere.EnumerableUtils.EnumerableUtils.IsNullOrEmpty(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Ampere.EnumerableUtils.EnumerableUtils
  commentId: T:Ampere.EnumerableUtils.EnumerableUtils
  parent: Ampere.EnumerableUtils
  name: EnumerableUtils
  nameWithType: EnumerableUtils
  fullName: Ampere.EnumerableUtils.EnumerableUtils
- uid: Ampere.EnumerableUtils.EnumerableUtils.Shuffle``1(System.Collections.Generic.IEnumerable{``0})
  commentId: M:Ampere.EnumerableUtils.EnumerableUtils.Shuffle``1(System.Collections.Generic.IEnumerable{``0})
  isExternal: true
  name: Shuffle<T>(IEnumerable<T>)
  nameWithType: EnumerableUtils.Shuffle<T>(IEnumerable<T>)
  fullName: Ampere.EnumerableUtils.EnumerableUtils.Shuffle<T>(System.Collections.Generic.IEnumerable<T>)
  nameWithType.vb: EnumerableUtils.Shuffle(Of T)(IEnumerable(Of T))
  fullName.vb: Ampere.EnumerableUtils.EnumerableUtils.Shuffle(Of T)(System.Collections.Generic.IEnumerable(Of T))
  name.vb: Shuffle(Of T)(IEnumerable(Of T))
  spec.csharp:
  - uid: Ampere.EnumerableUtils.EnumerableUtils.Shuffle``1(System.Collections.Generic.IEnumerable{``0})
    name: Shuffle<T>
    nameWithType: EnumerableUtils.Shuffle<T>
    fullName: Ampere.EnumerableUtils.EnumerableUtils.Shuffle<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.EnumerableUtils.EnumerableUtils.Shuffle``1(System.Collections.Generic.IEnumerable{``0})
    name: Shuffle(Of T)
    nameWithType: EnumerableUtils.Shuffle(Of T)
    fullName: Ampere.EnumerableUtils.EnumerableUtils.Shuffle(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Ampere.EnumerableUtils.EnumerableUtils.ToString``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Boolean)
  commentId: M:Ampere.EnumerableUtils.EnumerableUtils.ToString``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Boolean)
  isExternal: true
  name: ToString<T>(IEnumerable<T>, String, Boolean)
  nameWithType: EnumerableUtils.ToString<T>(IEnumerable<T>, String, Boolean)
  fullName: Ampere.EnumerableUtils.EnumerableUtils.ToString<T>(System.Collections.Generic.IEnumerable<T>, System.String, System.Boolean)
  nameWithType.vb: EnumerableUtils.ToString(Of T)(IEnumerable(Of T), String, Boolean)
  fullName.vb: Ampere.EnumerableUtils.EnumerableUtils.ToString(Of T)(System.Collections.Generic.IEnumerable(Of T), System.String, System.Boolean)
  name.vb: ToString(Of T)(IEnumerable(Of T), String, Boolean)
  spec.csharp:
  - uid: Ampere.EnumerableUtils.EnumerableUtils.ToString``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Boolean)
    name: ToString<T>
    nameWithType: EnumerableUtils.ToString<T>
    fullName: Ampere.EnumerableUtils.EnumerableUtils.ToString<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.EnumerableUtils.EnumerableUtils.ToString``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Boolean)
    name: ToString(Of T)
    nameWithType: EnumerableUtils.ToString(Of T)
    fullName: Ampere.EnumerableUtils.EnumerableUtils.ToString(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Ampere.Statistics.EnumerableStats.Mean``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  commentId: M:Ampere.Statistics.EnumerableStats.Mean``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  isExternal: true
  name: Mean<T>(IEnumerable<T>, Func<T, Double>)
  nameWithType: EnumerableStats.Mean<T>(IEnumerable<T>, Func<T, Double>)
  fullName: Ampere.Statistics.EnumerableStats.Mean<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, System.Double>)
  nameWithType.vb: EnumerableStats.Mean(Of T)(IEnumerable(Of T), Func(Of T, Double))
  fullName.vb: Ampere.Statistics.EnumerableStats.Mean(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, System.Double))
  name.vb: Mean(Of T)(IEnumerable(Of T), Func(Of T, Double))
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.Mean``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: Mean<T>
    nameWithType: EnumerableStats.Mean<T>
    fullName: Ampere.Statistics.EnumerableStats.Mean<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.Mean``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: Mean(Of T)
    nameWithType: EnumerableStats.Mean(Of T)
    fullName: Ampere.Statistics.EnumerableStats.Mean(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Ampere.Statistics.EnumerableStats
  commentId: T:Ampere.Statistics.EnumerableStats
  parent: Ampere.Statistics
  name: EnumerableStats
  nameWithType: EnumerableStats
  fullName: Ampere.Statistics.EnumerableStats
- uid: Ampere.Statistics.EnumerableStats.Median``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  commentId: M:Ampere.Statistics.EnumerableStats.Median``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  isExternal: true
  name: Median<T>(IEnumerable<T>, Func<T, Double>)
  nameWithType: EnumerableStats.Median<T>(IEnumerable<T>, Func<T, Double>)
  fullName: Ampere.Statistics.EnumerableStats.Median<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, System.Double>)
  nameWithType.vb: EnumerableStats.Median(Of T)(IEnumerable(Of T), Func(Of T, Double))
  fullName.vb: Ampere.Statistics.EnumerableStats.Median(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, System.Double))
  name.vb: Median(Of T)(IEnumerable(Of T), Func(Of T, Double))
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.Median``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: Median<T>
    nameWithType: EnumerableStats.Median<T>
    fullName: Ampere.Statistics.EnumerableStats.Median<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.Median``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: Median(Of T)
    nameWithType: EnumerableStats.Median(Of T)
    fullName: Ampere.Statistics.EnumerableStats.Median(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Ampere.Statistics.EnumerableStats.Mode(System.Collections.Generic.IEnumerable{System.Double})
  commentId: M:Ampere.Statistics.EnumerableStats.Mode(System.Collections.Generic.IEnumerable{System.Double})
  isExternal: true
  name: Mode(IEnumerable<Double>)
  nameWithType: EnumerableStats.Mode(IEnumerable<Double>)
  fullName: Ampere.Statistics.EnumerableStats.Mode(System.Collections.Generic.IEnumerable<System.Double>)
  nameWithType.vb: EnumerableStats.Mode(IEnumerable(Of Double))
  fullName.vb: Ampere.Statistics.EnumerableStats.Mode(System.Collections.Generic.IEnumerable(Of System.Double))
  name.vb: Mode(IEnumerable(Of Double))
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.Mode(System.Collections.Generic.IEnumerable{System.Double})
    name: Mode
    nameWithType: EnumerableStats.Mode
    fullName: Ampere.Statistics.EnumerableStats.Mode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.Mode(System.Collections.Generic.IEnumerable{System.Double})
    name: Mode
    nameWithType: EnumerableStats.Mode
    fullName: Ampere.Statistics.EnumerableStats.Mode
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Ampere.Statistics.EnumerableStats.Mode``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  commentId: M:Ampere.Statistics.EnumerableStats.Mode``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  isExternal: true
  name: Mode<T>(IEnumerable<T>, Func<T, Double>)
  nameWithType: EnumerableStats.Mode<T>(IEnumerable<T>, Func<T, Double>)
  fullName: Ampere.Statistics.EnumerableStats.Mode<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, System.Double>)
  nameWithType.vb: EnumerableStats.Mode(Of T)(IEnumerable(Of T), Func(Of T, Double))
  fullName.vb: Ampere.Statistics.EnumerableStats.Mode(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, System.Double))
  name.vb: Mode(Of T)(IEnumerable(Of T), Func(Of T, Double))
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.Mode``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: Mode<T>
    nameWithType: EnumerableStats.Mode<T>
    fullName: Ampere.Statistics.EnumerableStats.Mode<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.Mode``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: Mode(Of T)
    nameWithType: EnumerableStats.Mode(Of T)
    fullName: Ampere.Statistics.EnumerableStats.Mode(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Ampere.Statistics.EnumerableStats.SampleVariance(System.Collections.Generic.IEnumerable{System.Double})
  commentId: M:Ampere.Statistics.EnumerableStats.SampleVariance(System.Collections.Generic.IEnumerable{System.Double})
  isExternal: true
  name: SampleVariance(IEnumerable<Double>)
  nameWithType: EnumerableStats.SampleVariance(IEnumerable<Double>)
  fullName: Ampere.Statistics.EnumerableStats.SampleVariance(System.Collections.Generic.IEnumerable<System.Double>)
  nameWithType.vb: EnumerableStats.SampleVariance(IEnumerable(Of Double))
  fullName.vb: Ampere.Statistics.EnumerableStats.SampleVariance(System.Collections.Generic.IEnumerable(Of System.Double))
  name.vb: SampleVariance(IEnumerable(Of Double))
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.SampleVariance(System.Collections.Generic.IEnumerable{System.Double})
    name: SampleVariance
    nameWithType: EnumerableStats.SampleVariance
    fullName: Ampere.Statistics.EnumerableStats.SampleVariance
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.SampleVariance(System.Collections.Generic.IEnumerable{System.Double})
    name: SampleVariance
    nameWithType: EnumerableStats.SampleVariance
    fullName: Ampere.Statistics.EnumerableStats.SampleVariance
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Ampere.Statistics.EnumerableStats.SampleVariance``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  commentId: M:Ampere.Statistics.EnumerableStats.SampleVariance``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  isExternal: true
  name: SampleVariance<T>(IEnumerable<T>, Func<T, Double>)
  nameWithType: EnumerableStats.SampleVariance<T>(IEnumerable<T>, Func<T, Double>)
  fullName: Ampere.Statistics.EnumerableStats.SampleVariance<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, System.Double>)
  nameWithType.vb: EnumerableStats.SampleVariance(Of T)(IEnumerable(Of T), Func(Of T, Double))
  fullName.vb: Ampere.Statistics.EnumerableStats.SampleVariance(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, System.Double))
  name.vb: SampleVariance(Of T)(IEnumerable(Of T), Func(Of T, Double))
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.SampleVariance``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: SampleVariance<T>
    nameWithType: EnumerableStats.SampleVariance<T>
    fullName: Ampere.Statistics.EnumerableStats.SampleVariance<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.SampleVariance``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: SampleVariance(Of T)
    nameWithType: EnumerableStats.SampleVariance(Of T)
    fullName: Ampere.Statistics.EnumerableStats.SampleVariance(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Ampere.Statistics.EnumerableStats.PopulationVariance(System.Collections.Generic.IEnumerable{System.Double})
  commentId: M:Ampere.Statistics.EnumerableStats.PopulationVariance(System.Collections.Generic.IEnumerable{System.Double})
  isExternal: true
  name: PopulationVariance(IEnumerable<Double>)
  nameWithType: EnumerableStats.PopulationVariance(IEnumerable<Double>)
  fullName: Ampere.Statistics.EnumerableStats.PopulationVariance(System.Collections.Generic.IEnumerable<System.Double>)
  nameWithType.vb: EnumerableStats.PopulationVariance(IEnumerable(Of Double))
  fullName.vb: Ampere.Statistics.EnumerableStats.PopulationVariance(System.Collections.Generic.IEnumerable(Of System.Double))
  name.vb: PopulationVariance(IEnumerable(Of Double))
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.PopulationVariance(System.Collections.Generic.IEnumerable{System.Double})
    name: PopulationVariance
    nameWithType: EnumerableStats.PopulationVariance
    fullName: Ampere.Statistics.EnumerableStats.PopulationVariance
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.PopulationVariance(System.Collections.Generic.IEnumerable{System.Double})
    name: PopulationVariance
    nameWithType: EnumerableStats.PopulationVariance
    fullName: Ampere.Statistics.EnumerableStats.PopulationVariance
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Ampere.Statistics.EnumerableStats.PopulationVariance``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  commentId: M:Ampere.Statistics.EnumerableStats.PopulationVariance``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  isExternal: true
  name: PopulationVariance<T>(IEnumerable<T>, Func<T, Double>)
  nameWithType: EnumerableStats.PopulationVariance<T>(IEnumerable<T>, Func<T, Double>)
  fullName: Ampere.Statistics.EnumerableStats.PopulationVariance<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, System.Double>)
  nameWithType.vb: EnumerableStats.PopulationVariance(Of T)(IEnumerable(Of T), Func(Of T, Double))
  fullName.vb: Ampere.Statistics.EnumerableStats.PopulationVariance(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, System.Double))
  name.vb: PopulationVariance(Of T)(IEnumerable(Of T), Func(Of T, Double))
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.PopulationVariance``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: PopulationVariance<T>
    nameWithType: EnumerableStats.PopulationVariance<T>
    fullName: Ampere.Statistics.EnumerableStats.PopulationVariance<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.PopulationVariance``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: PopulationVariance(Of T)
    nameWithType: EnumerableStats.PopulationVariance(Of T)
    fullName: Ampere.Statistics.EnumerableStats.PopulationVariance(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Ampere.Statistics.EnumerableStats.SampleStandardDeviation(System.Collections.Generic.IEnumerable{System.Double})
  commentId: M:Ampere.Statistics.EnumerableStats.SampleStandardDeviation(System.Collections.Generic.IEnumerable{System.Double})
  isExternal: true
  name: SampleStandardDeviation(IEnumerable<Double>)
  nameWithType: EnumerableStats.SampleStandardDeviation(IEnumerable<Double>)
  fullName: Ampere.Statistics.EnumerableStats.SampleStandardDeviation(System.Collections.Generic.IEnumerable<System.Double>)
  nameWithType.vb: EnumerableStats.SampleStandardDeviation(IEnumerable(Of Double))
  fullName.vb: Ampere.Statistics.EnumerableStats.SampleStandardDeviation(System.Collections.Generic.IEnumerable(Of System.Double))
  name.vb: SampleStandardDeviation(IEnumerable(Of Double))
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.SampleStandardDeviation(System.Collections.Generic.IEnumerable{System.Double})
    name: SampleStandardDeviation
    nameWithType: EnumerableStats.SampleStandardDeviation
    fullName: Ampere.Statistics.EnumerableStats.SampleStandardDeviation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.SampleStandardDeviation(System.Collections.Generic.IEnumerable{System.Double})
    name: SampleStandardDeviation
    nameWithType: EnumerableStats.SampleStandardDeviation
    fullName: Ampere.Statistics.EnumerableStats.SampleStandardDeviation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Ampere.Statistics.EnumerableStats.SampleStandardDeviation``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  commentId: M:Ampere.Statistics.EnumerableStats.SampleStandardDeviation``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  isExternal: true
  name: SampleStandardDeviation<T>(IEnumerable<T>, Func<T, Double>)
  nameWithType: EnumerableStats.SampleStandardDeviation<T>(IEnumerable<T>, Func<T, Double>)
  fullName: Ampere.Statistics.EnumerableStats.SampleStandardDeviation<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, System.Double>)
  nameWithType.vb: EnumerableStats.SampleStandardDeviation(Of T)(IEnumerable(Of T), Func(Of T, Double))
  fullName.vb: Ampere.Statistics.EnumerableStats.SampleStandardDeviation(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, System.Double))
  name.vb: SampleStandardDeviation(Of T)(IEnumerable(Of T), Func(Of T, Double))
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.SampleStandardDeviation``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: SampleStandardDeviation<T>
    nameWithType: EnumerableStats.SampleStandardDeviation<T>
    fullName: Ampere.Statistics.EnumerableStats.SampleStandardDeviation<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.SampleStandardDeviation``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: SampleStandardDeviation(Of T)
    nameWithType: EnumerableStats.SampleStandardDeviation(Of T)
    fullName: Ampere.Statistics.EnumerableStats.SampleStandardDeviation(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Ampere.Statistics.EnumerableStats.PopulationStandardDeviation(System.Collections.Generic.IEnumerable{System.Double})
  commentId: M:Ampere.Statistics.EnumerableStats.PopulationStandardDeviation(System.Collections.Generic.IEnumerable{System.Double})
  isExternal: true
  name: PopulationStandardDeviation(IEnumerable<Double>)
  nameWithType: EnumerableStats.PopulationStandardDeviation(IEnumerable<Double>)
  fullName: Ampere.Statistics.EnumerableStats.PopulationStandardDeviation(System.Collections.Generic.IEnumerable<System.Double>)
  nameWithType.vb: EnumerableStats.PopulationStandardDeviation(IEnumerable(Of Double))
  fullName.vb: Ampere.Statistics.EnumerableStats.PopulationStandardDeviation(System.Collections.Generic.IEnumerable(Of System.Double))
  name.vb: PopulationStandardDeviation(IEnumerable(Of Double))
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.PopulationStandardDeviation(System.Collections.Generic.IEnumerable{System.Double})
    name: PopulationStandardDeviation
    nameWithType: EnumerableStats.PopulationStandardDeviation
    fullName: Ampere.Statistics.EnumerableStats.PopulationStandardDeviation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.PopulationStandardDeviation(System.Collections.Generic.IEnumerable{System.Double})
    name: PopulationStandardDeviation
    nameWithType: EnumerableStats.PopulationStandardDeviation
    fullName: Ampere.Statistics.EnumerableStats.PopulationStandardDeviation
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Ampere.Statistics.EnumerableStats.PopulationStandardDeviation``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  commentId: M:Ampere.Statistics.EnumerableStats.PopulationStandardDeviation``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  isExternal: true
  name: PopulationStandardDeviation<T>(IEnumerable<T>, Func<T, Double>)
  nameWithType: EnumerableStats.PopulationStandardDeviation<T>(IEnumerable<T>, Func<T, Double>)
  fullName: Ampere.Statistics.EnumerableStats.PopulationStandardDeviation<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, System.Double>)
  nameWithType.vb: EnumerableStats.PopulationStandardDeviation(Of T)(IEnumerable(Of T), Func(Of T, Double))
  fullName.vb: Ampere.Statistics.EnumerableStats.PopulationStandardDeviation(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, System.Double))
  name.vb: PopulationStandardDeviation(Of T)(IEnumerable(Of T), Func(Of T, Double))
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.PopulationStandardDeviation``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: PopulationStandardDeviation<T>
    nameWithType: EnumerableStats.PopulationStandardDeviation<T>
    fullName: Ampere.Statistics.EnumerableStats.PopulationStandardDeviation<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.PopulationStandardDeviation``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: PopulationStandardDeviation(Of T)
    nameWithType: EnumerableStats.PopulationStandardDeviation(Of T)
    fullName: Ampere.Statistics.EnumerableStats.PopulationStandardDeviation(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Ampere.Statistics.EnumerableStats.Range(System.Collections.Generic.IEnumerable{System.Double})
  commentId: M:Ampere.Statistics.EnumerableStats.Range(System.Collections.Generic.IEnumerable{System.Double})
  isExternal: true
  name: Range(IEnumerable<Double>)
  nameWithType: EnumerableStats.Range(IEnumerable<Double>)
  fullName: Ampere.Statistics.EnumerableStats.Range(System.Collections.Generic.IEnumerable<System.Double>)
  nameWithType.vb: EnumerableStats.Range(IEnumerable(Of Double))
  fullName.vb: Ampere.Statistics.EnumerableStats.Range(System.Collections.Generic.IEnumerable(Of System.Double))
  name.vb: Range(IEnumerable(Of Double))
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.Range(System.Collections.Generic.IEnumerable{System.Double})
    name: Range
    nameWithType: EnumerableStats.Range
    fullName: Ampere.Statistics.EnumerableStats.Range
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.Range(System.Collections.Generic.IEnumerable{System.Double})
    name: Range
    nameWithType: EnumerableStats.Range
    fullName: Ampere.Statistics.EnumerableStats.Range
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Ampere.Statistics.EnumerableStats.Range``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  commentId: M:Ampere.Statistics.EnumerableStats.Range``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  isExternal: true
  name: Range<T>(IEnumerable<T>, Func<T, Double>)
  nameWithType: EnumerableStats.Range<T>(IEnumerable<T>, Func<T, Double>)
  fullName: Ampere.Statistics.EnumerableStats.Range<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, System.Double>)
  nameWithType.vb: EnumerableStats.Range(Of T)(IEnumerable(Of T), Func(Of T, Double))
  fullName.vb: Ampere.Statistics.EnumerableStats.Range(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, System.Double))
  name.vb: Range(Of T)(IEnumerable(Of T), Func(Of T, Double))
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.Range``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: Range<T>
    nameWithType: EnumerableStats.Range<T>
    fullName: Ampere.Statistics.EnumerableStats.Range<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.Range``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: Range(Of T)
    nameWithType: EnumerableStats.Range(Of T)
    fullName: Ampere.Statistics.EnumerableStats.Range(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Ampere.Statistics.EnumerableStats.LowerQuartile(System.Collections.Generic.IEnumerable{System.Double})
  commentId: M:Ampere.Statistics.EnumerableStats.LowerQuartile(System.Collections.Generic.IEnumerable{System.Double})
  isExternal: true
  name: LowerQuartile(IEnumerable<Double>)
  nameWithType: EnumerableStats.LowerQuartile(IEnumerable<Double>)
  fullName: Ampere.Statistics.EnumerableStats.LowerQuartile(System.Collections.Generic.IEnumerable<System.Double>)
  nameWithType.vb: EnumerableStats.LowerQuartile(IEnumerable(Of Double))
  fullName.vb: Ampere.Statistics.EnumerableStats.LowerQuartile(System.Collections.Generic.IEnumerable(Of System.Double))
  name.vb: LowerQuartile(IEnumerable(Of Double))
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.LowerQuartile(System.Collections.Generic.IEnumerable{System.Double})
    name: LowerQuartile
    nameWithType: EnumerableStats.LowerQuartile
    fullName: Ampere.Statistics.EnumerableStats.LowerQuartile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.LowerQuartile(System.Collections.Generic.IEnumerable{System.Double})
    name: LowerQuartile
    nameWithType: EnumerableStats.LowerQuartile
    fullName: Ampere.Statistics.EnumerableStats.LowerQuartile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Ampere.Statistics.EnumerableStats.LowerQuartile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  commentId: M:Ampere.Statistics.EnumerableStats.LowerQuartile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  isExternal: true
  name: LowerQuartile<T>(IEnumerable<T>, Func<T, Double>)
  nameWithType: EnumerableStats.LowerQuartile<T>(IEnumerable<T>, Func<T, Double>)
  fullName: Ampere.Statistics.EnumerableStats.LowerQuartile<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, System.Double>)
  nameWithType.vb: EnumerableStats.LowerQuartile(Of T)(IEnumerable(Of T), Func(Of T, Double))
  fullName.vb: Ampere.Statistics.EnumerableStats.LowerQuartile(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, System.Double))
  name.vb: LowerQuartile(Of T)(IEnumerable(Of T), Func(Of T, Double))
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.LowerQuartile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: LowerQuartile<T>
    nameWithType: EnumerableStats.LowerQuartile<T>
    fullName: Ampere.Statistics.EnumerableStats.LowerQuartile<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.LowerQuartile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: LowerQuartile(Of T)
    nameWithType: EnumerableStats.LowerQuartile(Of T)
    fullName: Ampere.Statistics.EnumerableStats.LowerQuartile(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Ampere.Statistics.EnumerableStats.UpperQuartile(System.Collections.Generic.IEnumerable{System.Double})
  commentId: M:Ampere.Statistics.EnumerableStats.UpperQuartile(System.Collections.Generic.IEnumerable{System.Double})
  isExternal: true
  name: UpperQuartile(IEnumerable<Double>)
  nameWithType: EnumerableStats.UpperQuartile(IEnumerable<Double>)
  fullName: Ampere.Statistics.EnumerableStats.UpperQuartile(System.Collections.Generic.IEnumerable<System.Double>)
  nameWithType.vb: EnumerableStats.UpperQuartile(IEnumerable(Of Double))
  fullName.vb: Ampere.Statistics.EnumerableStats.UpperQuartile(System.Collections.Generic.IEnumerable(Of System.Double))
  name.vb: UpperQuartile(IEnumerable(Of Double))
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.UpperQuartile(System.Collections.Generic.IEnumerable{System.Double})
    name: UpperQuartile
    nameWithType: EnumerableStats.UpperQuartile
    fullName: Ampere.Statistics.EnumerableStats.UpperQuartile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.UpperQuartile(System.Collections.Generic.IEnumerable{System.Double})
    name: UpperQuartile
    nameWithType: EnumerableStats.UpperQuartile
    fullName: Ampere.Statistics.EnumerableStats.UpperQuartile
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Ampere.Statistics.EnumerableStats.UpperQuartile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  commentId: M:Ampere.Statistics.EnumerableStats.UpperQuartile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  isExternal: true
  name: UpperQuartile<T>(IEnumerable<T>, Func<T, Double>)
  nameWithType: EnumerableStats.UpperQuartile<T>(IEnumerable<T>, Func<T, Double>)
  fullName: Ampere.Statistics.EnumerableStats.UpperQuartile<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, System.Double>)
  nameWithType.vb: EnumerableStats.UpperQuartile(Of T)(IEnumerable(Of T), Func(Of T, Double))
  fullName.vb: Ampere.Statistics.EnumerableStats.UpperQuartile(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, System.Double))
  name.vb: UpperQuartile(Of T)(IEnumerable(Of T), Func(Of T, Double))
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.UpperQuartile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: UpperQuartile<T>
    nameWithType: EnumerableStats.UpperQuartile<T>
    fullName: Ampere.Statistics.EnumerableStats.UpperQuartile<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.UpperQuartile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: UpperQuartile(Of T)
    nameWithType: EnumerableStats.UpperQuartile(Of T)
    fullName: Ampere.Statistics.EnumerableStats.UpperQuartile(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Ampere.Statistics.EnumerableStats.InterQuartileRange(System.Collections.Generic.IEnumerable{System.Double})
  commentId: M:Ampere.Statistics.EnumerableStats.InterQuartileRange(System.Collections.Generic.IEnumerable{System.Double})
  isExternal: true
  name: InterQuartileRange(IEnumerable<Double>)
  nameWithType: EnumerableStats.InterQuartileRange(IEnumerable<Double>)
  fullName: Ampere.Statistics.EnumerableStats.InterQuartileRange(System.Collections.Generic.IEnumerable<System.Double>)
  nameWithType.vb: EnumerableStats.InterQuartileRange(IEnumerable(Of Double))
  fullName.vb: Ampere.Statistics.EnumerableStats.InterQuartileRange(System.Collections.Generic.IEnumerable(Of System.Double))
  name.vb: InterQuartileRange(IEnumerable(Of Double))
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.InterQuartileRange(System.Collections.Generic.IEnumerable{System.Double})
    name: InterQuartileRange
    nameWithType: EnumerableStats.InterQuartileRange
    fullName: Ampere.Statistics.EnumerableStats.InterQuartileRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.InterQuartileRange(System.Collections.Generic.IEnumerable{System.Double})
    name: InterQuartileRange
    nameWithType: EnumerableStats.InterQuartileRange
    fullName: Ampere.Statistics.EnumerableStats.InterQuartileRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Ampere.Statistics.EnumerableStats.InterQuartileRange``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  commentId: M:Ampere.Statistics.EnumerableStats.InterQuartileRange``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  isExternal: true
  name: InterQuartileRange<T>(IEnumerable<T>, Func<T, Double>)
  nameWithType: EnumerableStats.InterQuartileRange<T>(IEnumerable<T>, Func<T, Double>)
  fullName: Ampere.Statistics.EnumerableStats.InterQuartileRange<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, System.Double>)
  nameWithType.vb: EnumerableStats.InterQuartileRange(Of T)(IEnumerable(Of T), Func(Of T, Double))
  fullName.vb: Ampere.Statistics.EnumerableStats.InterQuartileRange(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, System.Double))
  name.vb: InterQuartileRange(Of T)(IEnumerable(Of T), Func(Of T, Double))
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.InterQuartileRange``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: InterQuartileRange<T>
    nameWithType: EnumerableStats.InterQuartileRange<T>
    fullName: Ampere.Statistics.EnumerableStats.InterQuartileRange<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.InterQuartileRange``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: InterQuartileRange(Of T)
    nameWithType: EnumerableStats.InterQuartileRange(Of T)
    fullName: Ampere.Statistics.EnumerableStats.InterQuartileRange(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Ampere.Statistics.EnumerableStats.IsNormalProportion(System.Collections.Generic.IEnumerable{System.Double},System.Double)
  commentId: M:Ampere.Statistics.EnumerableStats.IsNormalProportion(System.Collections.Generic.IEnumerable{System.Double},System.Double)
  isExternal: true
  name: IsNormalProportion(IEnumerable<Double>, Double)
  nameWithType: EnumerableStats.IsNormalProportion(IEnumerable<Double>, Double)
  fullName: Ampere.Statistics.EnumerableStats.IsNormalProportion(System.Collections.Generic.IEnumerable<System.Double>, System.Double)
  nameWithType.vb: EnumerableStats.IsNormalProportion(IEnumerable(Of Double), Double)
  fullName.vb: Ampere.Statistics.EnumerableStats.IsNormalProportion(System.Collections.Generic.IEnumerable(Of System.Double), System.Double)
  name.vb: IsNormalProportion(IEnumerable(Of Double), Double)
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.IsNormalProportion(System.Collections.Generic.IEnumerable{System.Double},System.Double)
    name: IsNormalProportion
    nameWithType: EnumerableStats.IsNormalProportion
    fullName: Ampere.Statistics.EnumerableStats.IsNormalProportion
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.IsNormalProportion(System.Collections.Generic.IEnumerable{System.Double},System.Double)
    name: IsNormalProportion
    nameWithType: EnumerableStats.IsNormalProportion
    fullName: Ampere.Statistics.EnumerableStats.IsNormalProportion
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Ampere.Statistics.EnumerableStats.IsNormalProportion``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double},System.Double)
  commentId: M:Ampere.Statistics.EnumerableStats.IsNormalProportion``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double},System.Double)
  isExternal: true
  name: IsNormalProportion<T>(IEnumerable<T>, Func<T, Double>, Double)
  nameWithType: EnumerableStats.IsNormalProportion<T>(IEnumerable<T>, Func<T, Double>, Double)
  fullName: Ampere.Statistics.EnumerableStats.IsNormalProportion<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, System.Double>, System.Double)
  nameWithType.vb: EnumerableStats.IsNormalProportion(Of T)(IEnumerable(Of T), Func(Of T, Double), Double)
  fullName.vb: Ampere.Statistics.EnumerableStats.IsNormalProportion(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, System.Double), System.Double)
  name.vb: IsNormalProportion(Of T)(IEnumerable(Of T), Func(Of T, Double), Double)
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.IsNormalProportion``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double},System.Double)
    name: IsNormalProportion<T>
    nameWithType: EnumerableStats.IsNormalProportion<T>
    fullName: Ampere.Statistics.EnumerableStats.IsNormalProportion<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.IsNormalProportion``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double},System.Double)
    name: IsNormalProportion(Of T)
    nameWithType: EnumerableStats.IsNormalProportion(Of T)
    fullName: Ampere.Statistics.EnumerableStats.IsNormalProportion(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Ampere.Statistics.EnumerableStats.IsNormalMean(System.Collections.Generic.IEnumerable{System.Double})
  commentId: M:Ampere.Statistics.EnumerableStats.IsNormalMean(System.Collections.Generic.IEnumerable{System.Double})
  isExternal: true
  name: IsNormalMean(IEnumerable<Double>)
  nameWithType: EnumerableStats.IsNormalMean(IEnumerable<Double>)
  fullName: Ampere.Statistics.EnumerableStats.IsNormalMean(System.Collections.Generic.IEnumerable<System.Double>)
  nameWithType.vb: EnumerableStats.IsNormalMean(IEnumerable(Of Double))
  fullName.vb: Ampere.Statistics.EnumerableStats.IsNormalMean(System.Collections.Generic.IEnumerable(Of System.Double))
  name.vb: IsNormalMean(IEnumerable(Of Double))
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.IsNormalMean(System.Collections.Generic.IEnumerable{System.Double})
    name: IsNormalMean
    nameWithType: EnumerableStats.IsNormalMean
    fullName: Ampere.Statistics.EnumerableStats.IsNormalMean
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.IsNormalMean(System.Collections.Generic.IEnumerable{System.Double})
    name: IsNormalMean
    nameWithType: EnumerableStats.IsNormalMean
    fullName: Ampere.Statistics.EnumerableStats.IsNormalMean
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Ampere.Statistics.EnumerableStats.IsNormalMean``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  commentId: M:Ampere.Statistics.EnumerableStats.IsNormalMean``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  isExternal: true
  name: IsNormalMean<T>(IEnumerable<T>, Func<T, Double>)
  nameWithType: EnumerableStats.IsNormalMean<T>(IEnumerable<T>, Func<T, Double>)
  fullName: Ampere.Statistics.EnumerableStats.IsNormalMean<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, System.Double>)
  nameWithType.vb: EnumerableStats.IsNormalMean(Of T)(IEnumerable(Of T), Func(Of T, Double))
  fullName.vb: Ampere.Statistics.EnumerableStats.IsNormalMean(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, System.Double))
  name.vb: IsNormalMean(Of T)(IEnumerable(Of T), Func(Of T, Double))
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.IsNormalMean``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: IsNormalMean<T>
    nameWithType: EnumerableStats.IsNormalMean<T>
    fullName: Ampere.Statistics.EnumerableStats.IsNormalMean<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.IsNormalMean``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
    name: IsNormalMean(Of T)
    nameWithType: EnumerableStats.IsNormalMean(Of T)
    fullName: Ampere.Statistics.EnumerableStats.IsNormalMean(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Ampere.Statistics.EnumerableStats.StandardizedScore(System.Collections.Generic.IEnumerable{System.Double},System.Double)
  commentId: M:Ampere.Statistics.EnumerableStats.StandardizedScore(System.Collections.Generic.IEnumerable{System.Double},System.Double)
  isExternal: true
  name: StandardizedScore(IEnumerable<Double>, Double)
  nameWithType: EnumerableStats.StandardizedScore(IEnumerable<Double>, Double)
  fullName: Ampere.Statistics.EnumerableStats.StandardizedScore(System.Collections.Generic.IEnumerable<System.Double>, System.Double)
  nameWithType.vb: EnumerableStats.StandardizedScore(IEnumerable(Of Double), Double)
  fullName.vb: Ampere.Statistics.EnumerableStats.StandardizedScore(System.Collections.Generic.IEnumerable(Of System.Double), System.Double)
  name.vb: StandardizedScore(IEnumerable(Of Double), Double)
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.StandardizedScore(System.Collections.Generic.IEnumerable{System.Double},System.Double)
    name: StandardizedScore
    nameWithType: EnumerableStats.StandardizedScore
    fullName: Ampere.Statistics.EnumerableStats.StandardizedScore
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.StandardizedScore(System.Collections.Generic.IEnumerable{System.Double},System.Double)
    name: StandardizedScore
    nameWithType: EnumerableStats.StandardizedScore
    fullName: Ampere.Statistics.EnumerableStats.StandardizedScore
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Ampere.Statistics.EnumerableStats.StandardizedScore``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double},System.Double)
  commentId: M:Ampere.Statistics.EnumerableStats.StandardizedScore``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double},System.Double)
  isExternal: true
  name: StandardizedScore<T>(IEnumerable<T>, Func<T, Double>, Double)
  nameWithType: EnumerableStats.StandardizedScore<T>(IEnumerable<T>, Func<T, Double>, Double)
  fullName: Ampere.Statistics.EnumerableStats.StandardizedScore<T>(System.Collections.Generic.IEnumerable<T>, System.Func<T, System.Double>, System.Double)
  nameWithType.vb: EnumerableStats.StandardizedScore(Of T)(IEnumerable(Of T), Func(Of T, Double), Double)
  fullName.vb: Ampere.Statistics.EnumerableStats.StandardizedScore(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Func(Of T, System.Double), System.Double)
  name.vb: StandardizedScore(Of T)(IEnumerable(Of T), Func(Of T, Double), Double)
  spec.csharp:
  - uid: Ampere.Statistics.EnumerableStats.StandardizedScore``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double},System.Double)
    name: StandardizedScore<T>
    nameWithType: EnumerableStats.StandardizedScore<T>
    fullName: Ampere.Statistics.EnumerableStats.StandardizedScore<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.Statistics.EnumerableStats.StandardizedScore``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double},System.Double)
    name: StandardizedScore(Of T)
    nameWithType: EnumerableStats.StandardizedScore(Of T)
    fullName: Ampere.Statistics.EnumerableStats.StandardizedScore(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Ampere.EnumerableUtils
  commentId: N:Ampere.EnumerableUtils
  name: Ampere.EnumerableUtils
  nameWithType: Ampere.EnumerableUtils
  fullName: Ampere.EnumerableUtils
- uid: Ampere.Statistics
  commentId: N:Ampere.Statistics
  name: Ampere.Statistics
  nameWithType: Ampere.Statistics
  fullName: Ampere.Statistics
- uid: Ampere.MathUtils.Matrix.Values*
  commentId: Overload:Ampere.MathUtils.Matrix.Values
  name: Values
  nameWithType: Matrix.Values
  fullName: Ampere.MathUtils.Matrix.Values
- uid: Ampere.MathUtils.IMatrixer{System.Double}.Values
  commentId: P:Ampere.MathUtils.IMatrixer{System.Double}.Values
  parent: Ampere.MathUtils.IMatrixer{System.Double}
  definition: Ampere.MathUtils.IMatrixer`1.Values
  name: Values
  nameWithType: IMatrixer<Double>.Values
  fullName: Ampere.MathUtils.IMatrixer<System.Double>.Values
  nameWithType.vb: IMatrixer(Of Double).Values
  fullName.vb: Ampere.MathUtils.IMatrixer(Of System.Double).Values
- uid: System.Double[,]
  isExternal: true
  name: Double[,]
  nameWithType: Double[,]
  fullName: System.Double[,]
  nameWithType.vb: Double(,)
  fullName.vb: System.Double(,)
  name.vb: Double(,)
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[,]'
    nameWithType: '[,]'
    fullName: '[,]'
  spec.vb:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: (,)
    nameWithType: (,)
    fullName: (,)
- uid: Ampere.MathUtils.IMatrixer`1.Values
  commentId: P:Ampere.MathUtils.IMatrixer`1.Values
  name: Values
  nameWithType: IMatrixer<T>.Values
  fullName: Ampere.MathUtils.IMatrixer<T>.Values
  nameWithType.vb: IMatrixer(Of T).Values
  fullName.vb: Ampere.MathUtils.IMatrixer(Of T).Values
- uid: Ampere.MathUtils.Matrix.Rows*
  commentId: Overload:Ampere.MathUtils.Matrix.Rows
  name: Rows
  nameWithType: Matrix.Rows
  fullName: Ampere.MathUtils.Matrix.Rows
- uid: Ampere.MathUtils.IMatrixer{System.Double}.Rows
  commentId: P:Ampere.MathUtils.IMatrixer{System.Double}.Rows
  parent: Ampere.MathUtils.IMatrixer{System.Double}
  definition: Ampere.MathUtils.IMatrixer`1.Rows
  name: Rows
  nameWithType: IMatrixer<Double>.Rows
  fullName: Ampere.MathUtils.IMatrixer<System.Double>.Rows
  nameWithType.vb: IMatrixer(Of Double).Rows
  fullName.vb: Ampere.MathUtils.IMatrixer(Of System.Double).Rows
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Ampere.MathUtils.IMatrixer`1.Rows
  commentId: P:Ampere.MathUtils.IMatrixer`1.Rows
  name: Rows
  nameWithType: IMatrixer<T>.Rows
  fullName: Ampere.MathUtils.IMatrixer<T>.Rows
  nameWithType.vb: IMatrixer(Of T).Rows
  fullName.vb: Ampere.MathUtils.IMatrixer(Of T).Rows
- uid: Ampere.MathUtils.Matrix.Cols*
  commentId: Overload:Ampere.MathUtils.Matrix.Cols
  name: Cols
  nameWithType: Matrix.Cols
  fullName: Ampere.MathUtils.Matrix.Cols
- uid: Ampere.MathUtils.IMatrixer{System.Double}.Cols
  commentId: P:Ampere.MathUtils.IMatrixer{System.Double}.Cols
  parent: Ampere.MathUtils.IMatrixer{System.Double}
  definition: Ampere.MathUtils.IMatrixer`1.Cols
  name: Cols
  nameWithType: IMatrixer<Double>.Cols
  fullName: Ampere.MathUtils.IMatrixer<System.Double>.Cols
  nameWithType.vb: IMatrixer(Of Double).Cols
  fullName.vb: Ampere.MathUtils.IMatrixer(Of System.Double).Cols
- uid: Ampere.MathUtils.IMatrixer`1.Cols
  commentId: P:Ampere.MathUtils.IMatrixer`1.Cols
  name: Cols
  nameWithType: IMatrixer<T>.Cols
  fullName: Ampere.MathUtils.IMatrixer<T>.Cols
  nameWithType.vb: IMatrixer(Of T).Cols
  fullName.vb: Ampere.MathUtils.IMatrixer(Of T).Cols
- uid: Ampere.MathUtils.Matrix.#ctor*
  commentId: Overload:Ampere.MathUtils.Matrix.#ctor
  name: Matrix
  nameWithType: Matrix.Matrix
  fullName: Ampere.MathUtils.Matrix.Matrix
- uid: Ampere.MathUtils.Matrix.Item*
  commentId: Overload:Ampere.MathUtils.Matrix.Item
  name: Item
  nameWithType: Matrix.Item
  fullName: Ampere.MathUtils.Matrix.Item
- uid: Ampere.Base.IIndexableDouble{System.Int32,System.Double}.Item(System.Int32,System.Int32)
  commentId: P:Ampere.Base.IIndexableDouble{System.Int32,System.Double}.Item(System.Int32,System.Int32)
  parent: Ampere.Base.IIndexableDouble{System.Int32,System.Double}
  definition: Ampere.Base.IIndexableDouble`2.Item(`0,`0)
  name: Item[Int32, Int32]
  nameWithType: IIndexableDouble<Int32, Double>.Item[Int32, Int32]
  fullName: Ampere.Base.IIndexableDouble<System.Int32, System.Double>.Item[System.Int32, System.Int32]
  nameWithType.vb: IIndexableDouble(Of Int32, Double).Item(Int32, Int32)
  fullName.vb: Ampere.Base.IIndexableDouble(Of System.Int32, System.Double).Item(System.Int32, System.Int32)
  name.vb: Item(Int32, Int32)
  spec.csharp:
  - uid: Ampere.Base.IIndexableDouble`2.Item(`0,`0)
    name: Item
    nameWithType: IIndexableDouble<Int32, Double>.Item
    fullName: Ampere.Base.IIndexableDouble<System.Int32, System.Double>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: Ampere.Base.IIndexableDouble`2.Item(`0,`0)
    name: Item
    nameWithType: IIndexableDouble(Of Int32, Double).Item
    fullName: Ampere.Base.IIndexableDouble(Of System.Int32, System.Double).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Ampere.Base.IIndexableDouble`2.Item(`0,`0)
  commentId: P:Ampere.Base.IIndexableDouble`2.Item(`0,`0)
  name: Item[TKey, TKey]
  nameWithType: IIndexableDouble<TKey, TVal>.Item[TKey, TKey]
  fullName: Ampere.Base.IIndexableDouble<TKey, TVal>.Item[TKey, TKey]
  nameWithType.vb: IIndexableDouble(Of TKey, TVal).Item(TKey, TKey)
  fullName.vb: Ampere.Base.IIndexableDouble(Of TKey, TVal).Item(TKey, TKey)
  name.vb: Item(TKey, TKey)
  spec.csharp:
  - uid: Ampere.Base.IIndexableDouble`2.Item(`0,`0)
    name: Item
    nameWithType: IIndexableDouble<TKey, TVal>.Item
    fullName: Ampere.Base.IIndexableDouble<TKey, TVal>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: Ampere.Base.IIndexableDouble`2.Item(`0,`0)
    name: Item
    nameWithType: IIndexableDouble(Of TKey, TVal).Item
    fullName: Ampere.Base.IIndexableDouble(Of TKey, TVal).Item
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Ampere.MathUtils.Matrix.Transpose*
  commentId: Overload:Ampere.MathUtils.Matrix.Transpose
  name: Transpose
  nameWithType: Matrix.Transpose
  fullName: Ampere.MathUtils.Matrix.Transpose
- uid: Ampere.MathUtils.IMatrixer{System.Double}.Transpose
  commentId: M:Ampere.MathUtils.IMatrixer{System.Double}.Transpose
  parent: Ampere.MathUtils.IMatrixer{System.Double}
  definition: Ampere.MathUtils.IMatrixer`1.Transpose
  name: Transpose()
  nameWithType: IMatrixer<Double>.Transpose()
  fullName: Ampere.MathUtils.IMatrixer<System.Double>.Transpose()
  nameWithType.vb: IMatrixer(Of Double).Transpose()
  fullName.vb: Ampere.MathUtils.IMatrixer(Of System.Double).Transpose()
  spec.csharp:
  - uid: Ampere.MathUtils.IMatrixer`1.Transpose
    name: Transpose
    nameWithType: IMatrixer<Double>.Transpose
    fullName: Ampere.MathUtils.IMatrixer<System.Double>.Transpose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.MathUtils.IMatrixer`1.Transpose
    name: Transpose
    nameWithType: IMatrixer(Of Double).Transpose
    fullName: Ampere.MathUtils.IMatrixer(Of System.Double).Transpose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Ampere.MathUtils.Matrix
  commentId: T:Ampere.MathUtils.Matrix
  parent: Ampere.MathUtils
  name: Matrix
  nameWithType: Matrix
  fullName: Ampere.MathUtils.Matrix
- uid: Ampere.MathUtils.IMatrixer`1.Transpose
  commentId: M:Ampere.MathUtils.IMatrixer`1.Transpose
  name: Transpose()
  nameWithType: IMatrixer<T>.Transpose()
  fullName: Ampere.MathUtils.IMatrixer<T>.Transpose()
  nameWithType.vb: IMatrixer(Of T).Transpose()
  fullName.vb: Ampere.MathUtils.IMatrixer(Of T).Transpose()
  spec.csharp:
  - uid: Ampere.MathUtils.IMatrixer`1.Transpose
    name: Transpose
    nameWithType: IMatrixer<T>.Transpose
    fullName: Ampere.MathUtils.IMatrixer<T>.Transpose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.MathUtils.IMatrixer`1.Transpose
    name: Transpose
    nameWithType: IMatrixer(Of T).Transpose
    fullName: Ampere.MathUtils.IMatrixer(Of T).Transpose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Ampere.MathUtils.Matrix.EqualDimension*
  commentId: Overload:Ampere.MathUtils.Matrix.EqualDimension
  name: EqualDimension
  nameWithType: Matrix.EqualDimension
  fullName: Ampere.MathUtils.Matrix.EqualDimension
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Ampere.MathUtils.Matrix.op_Addition*
  commentId: Overload:Ampere.MathUtils.Matrix.op_Addition
  name: Addition
  nameWithType: Matrix.Addition
  fullName: Ampere.MathUtils.Matrix.Addition
- uid: Ampere.MathUtils.Matrix.op_Subtraction*
  commentId: Overload:Ampere.MathUtils.Matrix.op_Subtraction
  name: Subtraction
  nameWithType: Matrix.Subtraction
  fullName: Ampere.MathUtils.Matrix.Subtraction
- uid: Ampere.MathUtils.Matrix.op_Multiply*
  commentId: Overload:Ampere.MathUtils.Matrix.op_Multiply
  name: Multiply
  nameWithType: Matrix.Multiply
  fullName: Ampere.MathUtils.Matrix.Multiply
- uid: Ampere.MathUtils.Matrix.op_Division*
  commentId: Overload:Ampere.MathUtils.Matrix.op_Division
  name: Division
  nameWithType: Matrix.Division
  fullName: Ampere.MathUtils.Matrix.Division
- uid: Ampere.MathUtils.Matrix.op_Modulus*
  commentId: Overload:Ampere.MathUtils.Matrix.op_Modulus
  name: Modulus
  nameWithType: Matrix.Modulus
  fullName: Ampere.MathUtils.Matrix.Modulus
- uid: Ampere.MathUtils.Matrix.op_LogicalNot*
  commentId: Overload:Ampere.MathUtils.Matrix.op_LogicalNot
  name: LogicalNot
  nameWithType: Matrix.LogicalNot
  fullName: Ampere.MathUtils.Matrix.LogicalNot
- uid: Ampere.MathUtils.Matrix.op_Equality*
  commentId: Overload:Ampere.MathUtils.Matrix.op_Equality
  name: Equality
  nameWithType: Matrix.Equality
  fullName: Ampere.MathUtils.Matrix.Equality
- uid: Ampere.MathUtils.Matrix.op_Inequality*
  commentId: Overload:Ampere.MathUtils.Matrix.op_Inequality
  name: Inequality
  nameWithType: Matrix.Inequality
  fullName: Ampere.MathUtils.Matrix.Inequality
- uid: Ampere.MathUtils.Matrix.Add*
  commentId: Overload:Ampere.MathUtils.Matrix.Add
  name: Add
  nameWithType: Matrix.Add
  fullName: Ampere.MathUtils.Matrix.Add
- uid: Ampere.MathUtils.Matrix.Subtract*
  commentId: Overload:Ampere.MathUtils.Matrix.Subtract
  name: Subtract
  nameWithType: Matrix.Subtract
  fullName: Ampere.MathUtils.Matrix.Subtract
- uid: Ampere.MathUtils.Matrix.Multiply*
  commentId: Overload:Ampere.MathUtils.Matrix.Multiply
  name: Multiply
  nameWithType: Matrix.Multiply
  fullName: Ampere.MathUtils.Matrix.Multiply
- uid: Ampere.MathUtils.Matrix.DotProduct*
  commentId: Overload:Ampere.MathUtils.Matrix.DotProduct
  name: DotProduct
  nameWithType: Matrix.DotProduct
  fullName: Ampere.MathUtils.Matrix.DotProduct
- uid: Ampere.MathUtils.Matrix.Divide*
  commentId: Overload:Ampere.MathUtils.Matrix.Divide
  name: Divide
  nameWithType: Matrix.Divide
  fullName: Ampere.MathUtils.Matrix.Divide
- uid: Ampere.MathUtils.Matrix.Mod*
  commentId: Overload:Ampere.MathUtils.Matrix.Mod
  name: Mod
  nameWithType: Matrix.Mod
  fullName: Ampere.MathUtils.Matrix.Mod
- uid: Ampere.MathUtils.Matrix.Negate*
  commentId: Overload:Ampere.MathUtils.Matrix.Negate
  name: Negate
  nameWithType: Matrix.Negate
  fullName: Ampere.MathUtils.Matrix.Negate
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Ampere.MathUtils.Matrix.Equals*
  commentId: Overload:Ampere.MathUtils.Matrix.Equals
  name: Equals
  nameWithType: Matrix.Equals
  fullName: Ampere.MathUtils.Matrix.Equals
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Ampere.MathUtils.Matrix.GetHashCode*
  commentId: Overload:Ampere.MathUtils.Matrix.GetHashCode
  name: GetHashCode
  nameWithType: Matrix.GetHashCode
  fullName: Ampere.MathUtils.Matrix.GetHashCode
- uid: Ampere.MathUtils.Matrix.IsRowVector*
  commentId: Overload:Ampere.MathUtils.Matrix.IsRowVector
  name: IsRowVector
  nameWithType: Matrix.IsRowVector
  fullName: Ampere.MathUtils.Matrix.IsRowVector
- uid: Ampere.MathUtils.Matrix.IsColumnVector*
  commentId: Overload:Ampere.MathUtils.Matrix.IsColumnVector
  name: IsColumnVector
  nameWithType: Matrix.IsColumnVector
  fullName: Ampere.MathUtils.Matrix.IsColumnVector
- uid: Ampere.MathUtils.Matrix.IsSquareVector*
  commentId: Overload:Ampere.MathUtils.Matrix.IsSquareVector
  name: IsSquareVector
  nameWithType: Matrix.IsSquareVector
  fullName: Ampere.MathUtils.Matrix.IsSquareVector
- uid: Ampere.MathUtils.Matrix.GetEnumerator*
  commentId: Overload:Ampere.MathUtils.Matrix.GetEnumerator
  name: GetEnumerator
  nameWithType: Matrix.GetEnumerator
  fullName: Ampere.MathUtils.Matrix.GetEnumerator
- uid: System.Collections.Generic.IEnumerable{System.Double}.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable{System.Double}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{System.Double}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: IEnumerable<Double>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<System.Double>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of Double).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Double).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<Double>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<System.Double>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of Double).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of System.Double).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{System.Double}
  commentId: T:System.Collections.Generic.IEnumerator{System.Double}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<Double>
  nameWithType: IEnumerator<Double>
  fullName: System.Collections.Generic.IEnumerator<System.Double>
  nameWithType.vb: IEnumerator(Of Double)
  fullName.vb: System.Collections.Generic.IEnumerator(Of System.Double)
  name.vb: IEnumerator(Of Double)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: IEnumerable(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable(Of T).GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Ampere.MathUtils.Matrix.System#Collections#IEnumerable#GetEnumerator*
  commentId: Overload:Ampere.MathUtils.Matrix.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator
  nameWithType: Matrix.IEnumerable.GetEnumerator
  fullName: Ampere.MathUtils.Matrix.System.Collections.IEnumerable.GetEnumerator
  nameWithType.vb: Matrix.System.Collections.IEnumerable.GetEnumerator
  name.vb: System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.IEnumerable.GetEnumerator
  commentId: M:System.Collections.IEnumerable.GetEnumerator
  parent: System.Collections.IEnumerable
  isExternal: true
  name: GetEnumerator()
  nameWithType: IEnumerable.GetEnumerator()
  fullName: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerable.GetEnumerator
    name: GetEnumerator
    nameWithType: IEnumerable.GetEnumerator
    fullName: System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Ampere.MathUtils.Matrix.ToString*
  commentId: Overload:Ampere.MathUtils.Matrix.ToString
  name: ToString
  nameWithType: Matrix.ToString
  fullName: Ampere.MathUtils.Matrix.ToString
- uid: Ampere.MathUtils.IMatrixer{System.Double}.ToString
  commentId: M:Ampere.MathUtils.IMatrixer{System.Double}.ToString
  parent: Ampere.MathUtils.IMatrixer{System.Double}
  definition: Ampere.MathUtils.IMatrixer`1.ToString
  name: ToString()
  nameWithType: IMatrixer<Double>.ToString()
  fullName: Ampere.MathUtils.IMatrixer<System.Double>.ToString()
  nameWithType.vb: IMatrixer(Of Double).ToString()
  fullName.vb: Ampere.MathUtils.IMatrixer(Of System.Double).ToString()
  spec.csharp:
  - uid: Ampere.MathUtils.IMatrixer`1.ToString
    name: ToString
    nameWithType: IMatrixer<Double>.ToString
    fullName: Ampere.MathUtils.IMatrixer<System.Double>.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.MathUtils.IMatrixer`1.ToString
    name: ToString
    nameWithType: IMatrixer(Of Double).ToString
    fullName: Ampere.MathUtils.IMatrixer(Of System.Double).ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Ampere.MathUtils.IMatrixer`1.ToString
  commentId: M:Ampere.MathUtils.IMatrixer`1.ToString
  name: ToString()
  nameWithType: IMatrixer<T>.ToString()
  fullName: Ampere.MathUtils.IMatrixer<T>.ToString()
  nameWithType.vb: IMatrixer(Of T).ToString()
  fullName.vb: Ampere.MathUtils.IMatrixer(Of T).ToString()
  spec.csharp:
  - uid: Ampere.MathUtils.IMatrixer`1.ToString
    name: ToString
    nameWithType: IMatrixer<T>.ToString
    fullName: Ampere.MathUtils.IMatrixer<T>.ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Ampere.MathUtils.IMatrixer`1.ToString
    name: ToString
    nameWithType: IMatrixer(Of T).ToString
    fullName: Ampere.MathUtils.IMatrixer(Of T).ToString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
