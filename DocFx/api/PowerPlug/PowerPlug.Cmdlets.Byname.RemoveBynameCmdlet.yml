### YamlMime:ManagedReference
items:
- uid: PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet
  commentId: T:PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet
  id: RemoveBynameCmdlet
  parent: PowerPlug.Cmdlets.Byname
  children:
  - PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet.Force
  - PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet.Name
  - PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet.ProcessRecord
  - PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet.Scope
  - PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet.ToString
  langs:
  - csharp
  - vb
  name: RemoveBynameCmdlet
  nameWithType: RemoveBynameCmdlet
  fullName: PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet
  type: Class
  source:
    remote:
      path: PowerPlug/Cmdlets/Byname/RemoveBynameCmdlet.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: RemoveBynameCmdlet
    path: ../PowerPlug/Cmdlets/Byname/RemoveBynameCmdlet.cs
    startLine: 25
  assemblies:
  - PowerPlug
  namespace: PowerPlug.Cmdlets.Byname
  summary: "\n<p>Removes a new Byname</p>\n<p>Remove-Byname is a wrapper cmdlet for the Remove-Alias cmdlet. All instances of the The fully qualified command name are\nremoved from the $PROFILE. An error is thrown if no $PROFILE exists. This cmdlet is to be used for trivial purposes to quickly persist an alias\nacross sessions. It should not be used outside of the PowerShell Console in order to prevent unintended behavior. Extra precaution should be used\nwhen using Remove-Byname as it removes all aliases with the same name from the $PROFILE.\n</p>\n<p>rbn</p>\n<example>\n<p>A sample Remove-Byname command</p>\n<pre><code>Remove-Byname -Name list</code></pre>\n</example>\n"
  example: []
  syntax:
    content: >-
      [Cmdlet("Remove", "Byname", HelpUri = "https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/remove-alias?view=powershell-7")]

      [Alias(new string[]{"rbn"})]

      public class RemoveBynameCmdlet : BynameBase
    content.vb: >-
      <Cmdlet("Remove", "Byname", HelpUri:="https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/remove-alias?view=powershell-7")>

      <Alias(New String() {"rbn"})>

      Public Class RemoveBynameCmdlet

          Inherits BynameBase
  inheritance:
  - System.Object
  - System.Management.Automation.Internal.InternalCommand
  - System.Management.Automation.Cmdlet
  - System.Management.Automation.PSCmdlet
  - PowerPlug.BaseCmdlets.BynameBase
  inheritedMembers:
  - System.Management.Automation.PSCmdlet.CurrentProviderLocation(System.String)
  - System.Management.Automation.PSCmdlet.GetResolvedProviderPathFromPSPath(System.String,System.Management.Automation.ProviderInfo@)
  - System.Management.Automation.PSCmdlet.GetUnresolvedProviderPathFromPSPath(System.String)
  - System.Management.Automation.PSCmdlet.GetVariableValue(System.String)
  - System.Management.Automation.PSCmdlet.GetVariableValue(System.String,System.Object)
  - System.Management.Automation.PSCmdlet.Events
  - System.Management.Automation.PSCmdlet.Host
  - System.Management.Automation.PSCmdlet.InvokeCommand
  - System.Management.Automation.PSCmdlet.InvokeProvider
  - System.Management.Automation.PSCmdlet.JobManager
  - System.Management.Automation.PSCmdlet.JobRepository
  - System.Management.Automation.PSCmdlet.MyInvocation
  - System.Management.Automation.PSCmdlet.PagingParameters
  - System.Management.Automation.PSCmdlet.ParameterSetName
  - System.Management.Automation.PSCmdlet.SessionState
  - System.Management.Automation.Cmdlet.BeginProcessing
  - System.Management.Automation.Cmdlet.EndProcessing
  - System.Management.Automation.Cmdlet.GetResourceString(System.String,System.String)
  - System.Management.Automation.Cmdlet.Invoke
  - System.Management.Automation.Cmdlet.Invoke``1
  - System.Management.Automation.Cmdlet.ShouldContinue(System.String,System.String,System.Boolean,System.Boolean@,System.Boolean@)
  - System.Management.Automation.Cmdlet.ShouldContinue(System.String,System.String,System.Boolean@,System.Boolean@)
  - System.Management.Automation.Cmdlet.ShouldContinue(System.String,System.String)
  - System.Management.Automation.Cmdlet.ShouldProcess(System.String,System.String,System.String,System.Management.Automation.ShouldProcessReason@)
  - System.Management.Automation.Cmdlet.ShouldProcess(System.String)
  - System.Management.Automation.Cmdlet.ShouldProcess(System.String,System.String)
  - System.Management.Automation.Cmdlet.ShouldProcess(System.String,System.String,System.String)
  - System.Management.Automation.Cmdlet.StopProcessing
  - System.Management.Automation.Cmdlet.ThrowTerminatingError(System.Management.Automation.ErrorRecord)
  - System.Management.Automation.Cmdlet.TransactionAvailable
  - System.Management.Automation.Cmdlet.WriteCommandDetail(System.String)
  - System.Management.Automation.Cmdlet.WriteDebug(System.String)
  - System.Management.Automation.Cmdlet.WriteError(System.Management.Automation.ErrorRecord)
  - System.Management.Automation.Cmdlet.WriteInformation(System.Object,System.String[])
  - System.Management.Automation.Cmdlet.WriteInformation(System.Management.Automation.InformationRecord)
  - System.Management.Automation.Cmdlet.WriteObject(System.Object,System.Boolean)
  - System.Management.Automation.Cmdlet.WriteObject(System.Object)
  - System.Management.Automation.Cmdlet.WriteProgress(System.Management.Automation.ProgressRecord)
  - System.Management.Automation.Cmdlet.WriteVerbose(System.String)
  - System.Management.Automation.Cmdlet.WriteWarning(System.String)
  - System.Management.Automation.Cmdlet.CommandRuntime
  - System.Management.Automation.Cmdlet.CommonParameters
  - System.Management.Automation.Cmdlet.OptionalCommonParameters
  - System.Management.Automation.Cmdlet.Stopping
  - System.Management.Automation.Internal.InternalCommand.CommandOrigin
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.Management.Automation.CmdletAttribute
    ctor: System.Management.Automation.CmdletAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Remove
    - type: System.String
      value: Byname
    namedArguments:
    - name: HelpUri
      type: System.String
      value: https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/remove-alias?view=powershell-7
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet.Name
  commentId: P:PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet.Name
  id: Name
  parent: PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: RemoveBynameCmdlet.Name
  fullName: PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet.Name
  type: Property
  source:
    remote:
      path: PowerPlug/Cmdlets/Byname/RemoveBynameCmdlet.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: Name
    path: ../PowerPlug/Cmdlets/Byname/RemoveBynameCmdlet.cs
    startLine: 33
  assemblies:
  - PowerPlug
  namespace: PowerPlug.Cmdlets.Byname
  summary: "\nThe Name parameter for the command.\n"
  example: []
  syntax:
    content: >-
      [Parameter(Position = 0, Mandatory = true, ValueFromPipelineByPropertyName = true)]

      public override string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Parameter(Position:=0, Mandatory:=True, ValueFromPipelineByPropertyName:=True)>

      Public Overrides Property Name As String
  overridden: PowerPlug.BaseCmdlets.BynameBase.Name
  overload: PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet.Name*
  attributes:
  - type: System.Management.Automation.ParameterAttribute
    ctor: System.Management.Automation.ParameterAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Position
      type: System.Int32
      value: 0
    - name: Mandatory
      type: System.Boolean
      value: true
    - name: ValueFromPipelineByPropertyName
      type: System.Boolean
      value: true
  modifiers.csharp:
  - public
  - override
  - get
  - set
  modifiers.vb:
  - Public
  - Overrides
- uid: PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet.Scope
  commentId: P:PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet.Scope
  id: Scope
  parent: PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet
  langs:
  - csharp
  - vb
  name: Scope
  nameWithType: RemoveBynameCmdlet.Scope
  fullName: PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet.Scope
  type: Property
  source:
    remote:
      path: PowerPlug/Cmdlets/Byname/RemoveBynameCmdlet.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: Scope
    path: ../PowerPlug/Cmdlets/Byname/RemoveBynameCmdlet.cs
    startLine: 39
  assemblies:
  - PowerPlug
  namespace: PowerPlug.Cmdlets.Byname
  summary: "\nThe scope parameter for the command determines which scope the alias is set in.\n"
  example: []
  syntax:
    content: >-
      [Parameter]

      [ValidateSet(new string[]{"Global", "Local", "Script"})]

      public string Scope { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Parameter>

      <ValidateSet(New String() {"Global", "Local", "Script"})>

      Public Property Scope As String
  overload: PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet.Scope*
  attributes:
  - type: System.Management.Automation.ParameterAttribute
    ctor: System.Management.Automation.ParameterAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet.Force
  commentId: P:PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet.Force
  id: Force
  parent: PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet
  langs:
  - csharp
  - vb
  name: Force
  nameWithType: RemoveBynameCmdlet.Force
  fullName: PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet.Force
  type: Property
  source:
    remote:
      path: PowerPlug/Cmdlets/Byname/RemoveBynameCmdlet.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: Force
    path: ../PowerPlug/Cmdlets/Byname/RemoveBynameCmdlet.cs
    startLine: 48
  assemblies:
  - PowerPlug
  namespace: PowerPlug.Cmdlets.Byname
  summary: "\nIf set to true and an existing alias of the same name exists\nand is ReadOnly, the alias will be overwritten.\n"
  example: []
  syntax:
    content: >-
      [Parameter]

      public SwitchParameter Force { get; set; }
    parameters: []
    return:
      type: System.Management.Automation.SwitchParameter
    content.vb: >-
      <Parameter>

      Public Property Force As SwitchParameter
  overload: PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet.Force*
  attributes:
  - type: System.Management.Automation.ParameterAttribute
    ctor: System.Management.Automation.ParameterAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet.ProcessRecord
  commentId: M:PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet.ProcessRecord
  id: ProcessRecord
  parent: PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet
  langs:
  - csharp
  - vb
  name: ProcessRecord()
  nameWithType: RemoveBynameCmdlet.ProcessRecord()
  fullName: PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet.ProcessRecord()
  type: Method
  source:
    remote:
      path: PowerPlug/Cmdlets/Byname/RemoveBynameCmdlet.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: ProcessRecord
    path: ../PowerPlug/Cmdlets/Byname/RemoveBynameCmdlet.cs
    startLine: 61
  assemblies:
  - PowerPlug
  namespace: PowerPlug.Cmdlets.Byname
  summary: "\nProcesses the Remove-Byname PSCmdlet.\n"
  example: []
  syntax:
    content: protected override void ProcessRecord()
    content.vb: Protected Overrides Sub ProcessRecord
  overridden: System.Management.Automation.Cmdlet.ProcessRecord
  overload: PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet.ProcessRecord*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet.ToString
  commentId: M:PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet.ToString
  id: ToString
  parent: PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: RemoveBynameCmdlet.ToString()
  fullName: PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet.ToString()
  type: Method
  source:
    remote:
      path: PowerPlug/Cmdlets/Byname/RemoveBynameCmdlet.cs
      branch: volt
      repo: https://github.com/manu-p-1/PowerShell-Cmdlet-Utils.git
    id: ToString
    path: ../PowerPlug/Cmdlets/Byname/RemoveBynameCmdlet.cs
    startLine: 83
  assemblies:
  - PowerPlug
  namespace: PowerPlug.Cmdlets.Byname
  summary: "\nThe fully qualified Remove-Byname command as it&apos;s executed in the command-line. Because Remove-Byname\nis a wrapper for Remove-Alias, the ToString version uses Remove-Alias as the cmdlet name. \n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string representing the entire command with all options included in the string
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: PowerPlug.Cmdlets.Byname
  commentId: N:PowerPlug.Cmdlets.Byname
  name: PowerPlug.Cmdlets.Byname
  nameWithType: PowerPlug.Cmdlets.Byname
  fullName: PowerPlug.Cmdlets.Byname
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Management.Automation.Internal.InternalCommand
  commentId: T:System.Management.Automation.Internal.InternalCommand
  parent: System.Management.Automation.Internal
  isExternal: true
  name: InternalCommand
  nameWithType: InternalCommand
  fullName: System.Management.Automation.Internal.InternalCommand
- uid: System.Management.Automation.Cmdlet
  commentId: T:System.Management.Automation.Cmdlet
  parent: System.Management.Automation
  isExternal: true
  name: Cmdlet
  nameWithType: Cmdlet
  fullName: System.Management.Automation.Cmdlet
- uid: System.Management.Automation.PSCmdlet
  commentId: T:System.Management.Automation.PSCmdlet
  parent: System.Management.Automation
  isExternal: true
  name: PSCmdlet
  nameWithType: PSCmdlet
  fullName: System.Management.Automation.PSCmdlet
- uid: PowerPlug.BaseCmdlets.BynameBase
  commentId: T:PowerPlug.BaseCmdlets.BynameBase
  parent: PowerPlug.BaseCmdlets
  name: BynameBase
  nameWithType: BynameBase
  fullName: PowerPlug.BaseCmdlets.BynameBase
- uid: System.Management.Automation.PSCmdlet.CurrentProviderLocation(System.String)
  commentId: M:System.Management.Automation.PSCmdlet.CurrentProviderLocation(System.String)
  parent: System.Management.Automation.PSCmdlet
  isExternal: true
  name: CurrentProviderLocation(String)
  nameWithType: PSCmdlet.CurrentProviderLocation(String)
  fullName: System.Management.Automation.PSCmdlet.CurrentProviderLocation(System.String)
  spec.csharp:
  - uid: System.Management.Automation.PSCmdlet.CurrentProviderLocation(System.String)
    name: CurrentProviderLocation
    nameWithType: PSCmdlet.CurrentProviderLocation
    fullName: System.Management.Automation.PSCmdlet.CurrentProviderLocation
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Management.Automation.PSCmdlet.CurrentProviderLocation(System.String)
    name: CurrentProviderLocation
    nameWithType: PSCmdlet.CurrentProviderLocation
    fullName: System.Management.Automation.PSCmdlet.CurrentProviderLocation
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Management.Automation.PSCmdlet.GetResolvedProviderPathFromPSPath(System.String,System.Management.Automation.ProviderInfo@)
  commentId: M:System.Management.Automation.PSCmdlet.GetResolvedProviderPathFromPSPath(System.String,System.Management.Automation.ProviderInfo@)
  parent: System.Management.Automation.PSCmdlet
  isExternal: true
  name: GetResolvedProviderPathFromPSPath(String, ProviderInfo)
  nameWithType: PSCmdlet.GetResolvedProviderPathFromPSPath(String, ProviderInfo)
  fullName: System.Management.Automation.PSCmdlet.GetResolvedProviderPathFromPSPath(System.String, System.Management.Automation.ProviderInfo)
  spec.csharp:
  - uid: System.Management.Automation.PSCmdlet.GetResolvedProviderPathFromPSPath(System.String,System.Management.Automation.ProviderInfo@)
    name: GetResolvedProviderPathFromPSPath
    nameWithType: PSCmdlet.GetResolvedProviderPathFromPSPath
    fullName: System.Management.Automation.PSCmdlet.GetResolvedProviderPathFromPSPath
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Management.Automation.ProviderInfo
    name: ProviderInfo
    nameWithType: ProviderInfo
    fullName: System.Management.Automation.ProviderInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Management.Automation.PSCmdlet.GetResolvedProviderPathFromPSPath(System.String,System.Management.Automation.ProviderInfo@)
    name: GetResolvedProviderPathFromPSPath
    nameWithType: PSCmdlet.GetResolvedProviderPathFromPSPath
    fullName: System.Management.Automation.PSCmdlet.GetResolvedProviderPathFromPSPath
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Management.Automation.ProviderInfo
    name: ProviderInfo
    nameWithType: ProviderInfo
    fullName: System.Management.Automation.ProviderInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Management.Automation.PSCmdlet.GetUnresolvedProviderPathFromPSPath(System.String)
  commentId: M:System.Management.Automation.PSCmdlet.GetUnresolvedProviderPathFromPSPath(System.String)
  parent: System.Management.Automation.PSCmdlet
  isExternal: true
  name: GetUnresolvedProviderPathFromPSPath(String)
  nameWithType: PSCmdlet.GetUnresolvedProviderPathFromPSPath(String)
  fullName: System.Management.Automation.PSCmdlet.GetUnresolvedProviderPathFromPSPath(System.String)
  spec.csharp:
  - uid: System.Management.Automation.PSCmdlet.GetUnresolvedProviderPathFromPSPath(System.String)
    name: GetUnresolvedProviderPathFromPSPath
    nameWithType: PSCmdlet.GetUnresolvedProviderPathFromPSPath
    fullName: System.Management.Automation.PSCmdlet.GetUnresolvedProviderPathFromPSPath
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Management.Automation.PSCmdlet.GetUnresolvedProviderPathFromPSPath(System.String)
    name: GetUnresolvedProviderPathFromPSPath
    nameWithType: PSCmdlet.GetUnresolvedProviderPathFromPSPath
    fullName: System.Management.Automation.PSCmdlet.GetUnresolvedProviderPathFromPSPath
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Management.Automation.PSCmdlet.GetVariableValue(System.String)
  commentId: M:System.Management.Automation.PSCmdlet.GetVariableValue(System.String)
  parent: System.Management.Automation.PSCmdlet
  isExternal: true
  name: GetVariableValue(String)
  nameWithType: PSCmdlet.GetVariableValue(String)
  fullName: System.Management.Automation.PSCmdlet.GetVariableValue(System.String)
  spec.csharp:
  - uid: System.Management.Automation.PSCmdlet.GetVariableValue(System.String)
    name: GetVariableValue
    nameWithType: PSCmdlet.GetVariableValue
    fullName: System.Management.Automation.PSCmdlet.GetVariableValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Management.Automation.PSCmdlet.GetVariableValue(System.String)
    name: GetVariableValue
    nameWithType: PSCmdlet.GetVariableValue
    fullName: System.Management.Automation.PSCmdlet.GetVariableValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Management.Automation.PSCmdlet.GetVariableValue(System.String,System.Object)
  commentId: M:System.Management.Automation.PSCmdlet.GetVariableValue(System.String,System.Object)
  parent: System.Management.Automation.PSCmdlet
  isExternal: true
  name: GetVariableValue(String, Object)
  nameWithType: PSCmdlet.GetVariableValue(String, Object)
  fullName: System.Management.Automation.PSCmdlet.GetVariableValue(System.String, System.Object)
  spec.csharp:
  - uid: System.Management.Automation.PSCmdlet.GetVariableValue(System.String,System.Object)
    name: GetVariableValue
    nameWithType: PSCmdlet.GetVariableValue
    fullName: System.Management.Automation.PSCmdlet.GetVariableValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Management.Automation.PSCmdlet.GetVariableValue(System.String,System.Object)
    name: GetVariableValue
    nameWithType: PSCmdlet.GetVariableValue
    fullName: System.Management.Automation.PSCmdlet.GetVariableValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Management.Automation.PSCmdlet.Events
  commentId: P:System.Management.Automation.PSCmdlet.Events
  parent: System.Management.Automation.PSCmdlet
  isExternal: true
  name: Events
  nameWithType: PSCmdlet.Events
  fullName: System.Management.Automation.PSCmdlet.Events
- uid: System.Management.Automation.PSCmdlet.Host
  commentId: P:System.Management.Automation.PSCmdlet.Host
  parent: System.Management.Automation.PSCmdlet
  isExternal: true
  name: Host
  nameWithType: PSCmdlet.Host
  fullName: System.Management.Automation.PSCmdlet.Host
- uid: System.Management.Automation.PSCmdlet.InvokeCommand
  commentId: P:System.Management.Automation.PSCmdlet.InvokeCommand
  parent: System.Management.Automation.PSCmdlet
  isExternal: true
  name: InvokeCommand
  nameWithType: PSCmdlet.InvokeCommand
  fullName: System.Management.Automation.PSCmdlet.InvokeCommand
- uid: System.Management.Automation.PSCmdlet.InvokeProvider
  commentId: P:System.Management.Automation.PSCmdlet.InvokeProvider
  parent: System.Management.Automation.PSCmdlet
  isExternal: true
  name: InvokeProvider
  nameWithType: PSCmdlet.InvokeProvider
  fullName: System.Management.Automation.PSCmdlet.InvokeProvider
- uid: System.Management.Automation.PSCmdlet.JobManager
  commentId: P:System.Management.Automation.PSCmdlet.JobManager
  parent: System.Management.Automation.PSCmdlet
  isExternal: true
  name: JobManager
  nameWithType: PSCmdlet.JobManager
  fullName: System.Management.Automation.PSCmdlet.JobManager
- uid: System.Management.Automation.PSCmdlet.JobRepository
  commentId: P:System.Management.Automation.PSCmdlet.JobRepository
  parent: System.Management.Automation.PSCmdlet
  isExternal: true
  name: JobRepository
  nameWithType: PSCmdlet.JobRepository
  fullName: System.Management.Automation.PSCmdlet.JobRepository
- uid: System.Management.Automation.PSCmdlet.MyInvocation
  commentId: P:System.Management.Automation.PSCmdlet.MyInvocation
  parent: System.Management.Automation.PSCmdlet
  isExternal: true
  name: MyInvocation
  nameWithType: PSCmdlet.MyInvocation
  fullName: System.Management.Automation.PSCmdlet.MyInvocation
- uid: System.Management.Automation.PSCmdlet.PagingParameters
  commentId: P:System.Management.Automation.PSCmdlet.PagingParameters
  parent: System.Management.Automation.PSCmdlet
  isExternal: true
  name: PagingParameters
  nameWithType: PSCmdlet.PagingParameters
  fullName: System.Management.Automation.PSCmdlet.PagingParameters
- uid: System.Management.Automation.PSCmdlet.ParameterSetName
  commentId: P:System.Management.Automation.PSCmdlet.ParameterSetName
  parent: System.Management.Automation.PSCmdlet
  isExternal: true
  name: ParameterSetName
  nameWithType: PSCmdlet.ParameterSetName
  fullName: System.Management.Automation.PSCmdlet.ParameterSetName
- uid: System.Management.Automation.PSCmdlet.SessionState
  commentId: P:System.Management.Automation.PSCmdlet.SessionState
  parent: System.Management.Automation.PSCmdlet
  isExternal: true
  name: SessionState
  nameWithType: PSCmdlet.SessionState
  fullName: System.Management.Automation.PSCmdlet.SessionState
- uid: System.Management.Automation.Cmdlet.BeginProcessing
  commentId: M:System.Management.Automation.Cmdlet.BeginProcessing
  parent: System.Management.Automation.Cmdlet
  isExternal: true
  name: BeginProcessing()
  nameWithType: Cmdlet.BeginProcessing()
  fullName: System.Management.Automation.Cmdlet.BeginProcessing()
  spec.csharp:
  - uid: System.Management.Automation.Cmdlet.BeginProcessing
    name: BeginProcessing
    nameWithType: Cmdlet.BeginProcessing
    fullName: System.Management.Automation.Cmdlet.BeginProcessing
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Management.Automation.Cmdlet.BeginProcessing
    name: BeginProcessing
    nameWithType: Cmdlet.BeginProcessing
    fullName: System.Management.Automation.Cmdlet.BeginProcessing
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Management.Automation.Cmdlet.EndProcessing
  commentId: M:System.Management.Automation.Cmdlet.EndProcessing
  parent: System.Management.Automation.Cmdlet
  isExternal: true
  name: EndProcessing()
  nameWithType: Cmdlet.EndProcessing()
  fullName: System.Management.Automation.Cmdlet.EndProcessing()
  spec.csharp:
  - uid: System.Management.Automation.Cmdlet.EndProcessing
    name: EndProcessing
    nameWithType: Cmdlet.EndProcessing
    fullName: System.Management.Automation.Cmdlet.EndProcessing
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Management.Automation.Cmdlet.EndProcessing
    name: EndProcessing
    nameWithType: Cmdlet.EndProcessing
    fullName: System.Management.Automation.Cmdlet.EndProcessing
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Management.Automation.Cmdlet.GetResourceString(System.String,System.String)
  commentId: M:System.Management.Automation.Cmdlet.GetResourceString(System.String,System.String)
  parent: System.Management.Automation.Cmdlet
  isExternal: true
  name: GetResourceString(String, String)
  nameWithType: Cmdlet.GetResourceString(String, String)
  fullName: System.Management.Automation.Cmdlet.GetResourceString(System.String, System.String)
  spec.csharp:
  - uid: System.Management.Automation.Cmdlet.GetResourceString(System.String,System.String)
    name: GetResourceString
    nameWithType: Cmdlet.GetResourceString
    fullName: System.Management.Automation.Cmdlet.GetResourceString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Management.Automation.Cmdlet.GetResourceString(System.String,System.String)
    name: GetResourceString
    nameWithType: Cmdlet.GetResourceString
    fullName: System.Management.Automation.Cmdlet.GetResourceString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Management.Automation.Cmdlet.Invoke
  commentId: M:System.Management.Automation.Cmdlet.Invoke
  parent: System.Management.Automation.Cmdlet
  isExternal: true
  name: Invoke()
  nameWithType: Cmdlet.Invoke()
  fullName: System.Management.Automation.Cmdlet.Invoke()
  spec.csharp:
  - uid: System.Management.Automation.Cmdlet.Invoke
    name: Invoke
    nameWithType: Cmdlet.Invoke
    fullName: System.Management.Automation.Cmdlet.Invoke
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Management.Automation.Cmdlet.Invoke
    name: Invoke
    nameWithType: Cmdlet.Invoke
    fullName: System.Management.Automation.Cmdlet.Invoke
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Management.Automation.Cmdlet.Invoke``1
  commentId: M:System.Management.Automation.Cmdlet.Invoke``1
  parent: System.Management.Automation.Cmdlet
  isExternal: true
  name: Invoke<T>()
  nameWithType: Cmdlet.Invoke<T>()
  fullName: System.Management.Automation.Cmdlet.Invoke<T>()
  nameWithType.vb: Cmdlet.Invoke(Of T)()
  fullName.vb: System.Management.Automation.Cmdlet.Invoke(Of T)()
  name.vb: Invoke(Of T)()
  spec.csharp:
  - uid: System.Management.Automation.Cmdlet.Invoke``1
    name: Invoke<T>
    nameWithType: Cmdlet.Invoke<T>
    fullName: System.Management.Automation.Cmdlet.Invoke<T>
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Management.Automation.Cmdlet.Invoke``1
    name: Invoke(Of T)
    nameWithType: Cmdlet.Invoke(Of T)
    fullName: System.Management.Automation.Cmdlet.Invoke(Of T)
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Management.Automation.Cmdlet.ShouldContinue(System.String,System.String,System.Boolean,System.Boolean@,System.Boolean@)
  commentId: M:System.Management.Automation.Cmdlet.ShouldContinue(System.String,System.String,System.Boolean,System.Boolean@,System.Boolean@)
  parent: System.Management.Automation.Cmdlet
  isExternal: true
  name: ShouldContinue(String, String, Boolean, Boolean, Boolean)
  nameWithType: Cmdlet.ShouldContinue(String, String, Boolean, Boolean, Boolean)
  fullName: System.Management.Automation.Cmdlet.ShouldContinue(System.String, System.String, System.Boolean, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: System.Management.Automation.Cmdlet.ShouldContinue(System.String,System.String,System.Boolean,System.Boolean@,System.Boolean@)
    name: ShouldContinue
    nameWithType: Cmdlet.ShouldContinue
    fullName: System.Management.Automation.Cmdlet.ShouldContinue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Management.Automation.Cmdlet.ShouldContinue(System.String,System.String,System.Boolean,System.Boolean@,System.Boolean@)
    name: ShouldContinue
    nameWithType: Cmdlet.ShouldContinue
    fullName: System.Management.Automation.Cmdlet.ShouldContinue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Management.Automation.Cmdlet.ShouldContinue(System.String,System.String,System.Boolean@,System.Boolean@)
  commentId: M:System.Management.Automation.Cmdlet.ShouldContinue(System.String,System.String,System.Boolean@,System.Boolean@)
  parent: System.Management.Automation.Cmdlet
  isExternal: true
  name: ShouldContinue(String, String, Boolean, Boolean)
  nameWithType: Cmdlet.ShouldContinue(String, String, Boolean, Boolean)
  fullName: System.Management.Automation.Cmdlet.ShouldContinue(System.String, System.String, System.Boolean, System.Boolean)
  spec.csharp:
  - uid: System.Management.Automation.Cmdlet.ShouldContinue(System.String,System.String,System.Boolean@,System.Boolean@)
    name: ShouldContinue
    nameWithType: Cmdlet.ShouldContinue
    fullName: System.Management.Automation.Cmdlet.ShouldContinue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Management.Automation.Cmdlet.ShouldContinue(System.String,System.String,System.Boolean@,System.Boolean@)
    name: ShouldContinue
    nameWithType: Cmdlet.ShouldContinue
    fullName: System.Management.Automation.Cmdlet.ShouldContinue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Management.Automation.Cmdlet.ShouldContinue(System.String,System.String)
  commentId: M:System.Management.Automation.Cmdlet.ShouldContinue(System.String,System.String)
  parent: System.Management.Automation.Cmdlet
  isExternal: true
  name: ShouldContinue(String, String)
  nameWithType: Cmdlet.ShouldContinue(String, String)
  fullName: System.Management.Automation.Cmdlet.ShouldContinue(System.String, System.String)
  spec.csharp:
  - uid: System.Management.Automation.Cmdlet.ShouldContinue(System.String,System.String)
    name: ShouldContinue
    nameWithType: Cmdlet.ShouldContinue
    fullName: System.Management.Automation.Cmdlet.ShouldContinue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Management.Automation.Cmdlet.ShouldContinue(System.String,System.String)
    name: ShouldContinue
    nameWithType: Cmdlet.ShouldContinue
    fullName: System.Management.Automation.Cmdlet.ShouldContinue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Management.Automation.Cmdlet.ShouldProcess(System.String,System.String,System.String,System.Management.Automation.ShouldProcessReason@)
  commentId: M:System.Management.Automation.Cmdlet.ShouldProcess(System.String,System.String,System.String,System.Management.Automation.ShouldProcessReason@)
  parent: System.Management.Automation.Cmdlet
  isExternal: true
  name: ShouldProcess(String, String, String, ShouldProcessReason)
  nameWithType: Cmdlet.ShouldProcess(String, String, String, ShouldProcessReason)
  fullName: System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String, System.String, System.Management.Automation.ShouldProcessReason)
  spec.csharp:
  - uid: System.Management.Automation.Cmdlet.ShouldProcess(System.String,System.String,System.String,System.Management.Automation.ShouldProcessReason@)
    name: ShouldProcess
    nameWithType: Cmdlet.ShouldProcess
    fullName: System.Management.Automation.Cmdlet.ShouldProcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Management.Automation.ShouldProcessReason
    name: ShouldProcessReason
    nameWithType: ShouldProcessReason
    fullName: System.Management.Automation.ShouldProcessReason
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Management.Automation.Cmdlet.ShouldProcess(System.String,System.String,System.String,System.Management.Automation.ShouldProcessReason@)
    name: ShouldProcess
    nameWithType: Cmdlet.ShouldProcess
    fullName: System.Management.Automation.Cmdlet.ShouldProcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Management.Automation.ShouldProcessReason
    name: ShouldProcessReason
    nameWithType: ShouldProcessReason
    fullName: System.Management.Automation.ShouldProcessReason
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Management.Automation.Cmdlet.ShouldProcess(System.String)
  commentId: M:System.Management.Automation.Cmdlet.ShouldProcess(System.String)
  parent: System.Management.Automation.Cmdlet
  isExternal: true
  name: ShouldProcess(String)
  nameWithType: Cmdlet.ShouldProcess(String)
  fullName: System.Management.Automation.Cmdlet.ShouldProcess(System.String)
  spec.csharp:
  - uid: System.Management.Automation.Cmdlet.ShouldProcess(System.String)
    name: ShouldProcess
    nameWithType: Cmdlet.ShouldProcess
    fullName: System.Management.Automation.Cmdlet.ShouldProcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Management.Automation.Cmdlet.ShouldProcess(System.String)
    name: ShouldProcess
    nameWithType: Cmdlet.ShouldProcess
    fullName: System.Management.Automation.Cmdlet.ShouldProcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Management.Automation.Cmdlet.ShouldProcess(System.String,System.String)
  commentId: M:System.Management.Automation.Cmdlet.ShouldProcess(System.String,System.String)
  parent: System.Management.Automation.Cmdlet
  isExternal: true
  name: ShouldProcess(String, String)
  nameWithType: Cmdlet.ShouldProcess(String, String)
  fullName: System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String)
  spec.csharp:
  - uid: System.Management.Automation.Cmdlet.ShouldProcess(System.String,System.String)
    name: ShouldProcess
    nameWithType: Cmdlet.ShouldProcess
    fullName: System.Management.Automation.Cmdlet.ShouldProcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Management.Automation.Cmdlet.ShouldProcess(System.String,System.String)
    name: ShouldProcess
    nameWithType: Cmdlet.ShouldProcess
    fullName: System.Management.Automation.Cmdlet.ShouldProcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Management.Automation.Cmdlet.ShouldProcess(System.String,System.String,System.String)
  commentId: M:System.Management.Automation.Cmdlet.ShouldProcess(System.String,System.String,System.String)
  parent: System.Management.Automation.Cmdlet
  isExternal: true
  name: ShouldProcess(String, String, String)
  nameWithType: Cmdlet.ShouldProcess(String, String, String)
  fullName: System.Management.Automation.Cmdlet.ShouldProcess(System.String, System.String, System.String)
  spec.csharp:
  - uid: System.Management.Automation.Cmdlet.ShouldProcess(System.String,System.String,System.String)
    name: ShouldProcess
    nameWithType: Cmdlet.ShouldProcess
    fullName: System.Management.Automation.Cmdlet.ShouldProcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Management.Automation.Cmdlet.ShouldProcess(System.String,System.String,System.String)
    name: ShouldProcess
    nameWithType: Cmdlet.ShouldProcess
    fullName: System.Management.Automation.Cmdlet.ShouldProcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Management.Automation.Cmdlet.StopProcessing
  commentId: M:System.Management.Automation.Cmdlet.StopProcessing
  parent: System.Management.Automation.Cmdlet
  isExternal: true
  name: StopProcessing()
  nameWithType: Cmdlet.StopProcessing()
  fullName: System.Management.Automation.Cmdlet.StopProcessing()
  spec.csharp:
  - uid: System.Management.Automation.Cmdlet.StopProcessing
    name: StopProcessing
    nameWithType: Cmdlet.StopProcessing
    fullName: System.Management.Automation.Cmdlet.StopProcessing
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Management.Automation.Cmdlet.StopProcessing
    name: StopProcessing
    nameWithType: Cmdlet.StopProcessing
    fullName: System.Management.Automation.Cmdlet.StopProcessing
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Management.Automation.Cmdlet.ThrowTerminatingError(System.Management.Automation.ErrorRecord)
  commentId: M:System.Management.Automation.Cmdlet.ThrowTerminatingError(System.Management.Automation.ErrorRecord)
  parent: System.Management.Automation.Cmdlet
  isExternal: true
  name: ThrowTerminatingError(ErrorRecord)
  nameWithType: Cmdlet.ThrowTerminatingError(ErrorRecord)
  fullName: System.Management.Automation.Cmdlet.ThrowTerminatingError(System.Management.Automation.ErrorRecord)
  spec.csharp:
  - uid: System.Management.Automation.Cmdlet.ThrowTerminatingError(System.Management.Automation.ErrorRecord)
    name: ThrowTerminatingError
    nameWithType: Cmdlet.ThrowTerminatingError
    fullName: System.Management.Automation.Cmdlet.ThrowTerminatingError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Management.Automation.ErrorRecord
    name: ErrorRecord
    nameWithType: ErrorRecord
    fullName: System.Management.Automation.ErrorRecord
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Management.Automation.Cmdlet.ThrowTerminatingError(System.Management.Automation.ErrorRecord)
    name: ThrowTerminatingError
    nameWithType: Cmdlet.ThrowTerminatingError
    fullName: System.Management.Automation.Cmdlet.ThrowTerminatingError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Management.Automation.ErrorRecord
    name: ErrorRecord
    nameWithType: ErrorRecord
    fullName: System.Management.Automation.ErrorRecord
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Management.Automation.Cmdlet.TransactionAvailable
  commentId: M:System.Management.Automation.Cmdlet.TransactionAvailable
  parent: System.Management.Automation.Cmdlet
  isExternal: true
  name: TransactionAvailable()
  nameWithType: Cmdlet.TransactionAvailable()
  fullName: System.Management.Automation.Cmdlet.TransactionAvailable()
  spec.csharp:
  - uid: System.Management.Automation.Cmdlet.TransactionAvailable
    name: TransactionAvailable
    nameWithType: Cmdlet.TransactionAvailable
    fullName: System.Management.Automation.Cmdlet.TransactionAvailable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Management.Automation.Cmdlet.TransactionAvailable
    name: TransactionAvailable
    nameWithType: Cmdlet.TransactionAvailable
    fullName: System.Management.Automation.Cmdlet.TransactionAvailable
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Management.Automation.Cmdlet.WriteCommandDetail(System.String)
  commentId: M:System.Management.Automation.Cmdlet.WriteCommandDetail(System.String)
  parent: System.Management.Automation.Cmdlet
  isExternal: true
  name: WriteCommandDetail(String)
  nameWithType: Cmdlet.WriteCommandDetail(String)
  fullName: System.Management.Automation.Cmdlet.WriteCommandDetail(System.String)
  spec.csharp:
  - uid: System.Management.Automation.Cmdlet.WriteCommandDetail(System.String)
    name: WriteCommandDetail
    nameWithType: Cmdlet.WriteCommandDetail
    fullName: System.Management.Automation.Cmdlet.WriteCommandDetail
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Management.Automation.Cmdlet.WriteCommandDetail(System.String)
    name: WriteCommandDetail
    nameWithType: Cmdlet.WriteCommandDetail
    fullName: System.Management.Automation.Cmdlet.WriteCommandDetail
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Management.Automation.Cmdlet.WriteDebug(System.String)
  commentId: M:System.Management.Automation.Cmdlet.WriteDebug(System.String)
  parent: System.Management.Automation.Cmdlet
  isExternal: true
  name: WriteDebug(String)
  nameWithType: Cmdlet.WriteDebug(String)
  fullName: System.Management.Automation.Cmdlet.WriteDebug(System.String)
  spec.csharp:
  - uid: System.Management.Automation.Cmdlet.WriteDebug(System.String)
    name: WriteDebug
    nameWithType: Cmdlet.WriteDebug
    fullName: System.Management.Automation.Cmdlet.WriteDebug
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Management.Automation.Cmdlet.WriteDebug(System.String)
    name: WriteDebug
    nameWithType: Cmdlet.WriteDebug
    fullName: System.Management.Automation.Cmdlet.WriteDebug
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Management.Automation.Cmdlet.WriteError(System.Management.Automation.ErrorRecord)
  commentId: M:System.Management.Automation.Cmdlet.WriteError(System.Management.Automation.ErrorRecord)
  parent: System.Management.Automation.Cmdlet
  isExternal: true
  name: WriteError(ErrorRecord)
  nameWithType: Cmdlet.WriteError(ErrorRecord)
  fullName: System.Management.Automation.Cmdlet.WriteError(System.Management.Automation.ErrorRecord)
  spec.csharp:
  - uid: System.Management.Automation.Cmdlet.WriteError(System.Management.Automation.ErrorRecord)
    name: WriteError
    nameWithType: Cmdlet.WriteError
    fullName: System.Management.Automation.Cmdlet.WriteError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Management.Automation.ErrorRecord
    name: ErrorRecord
    nameWithType: ErrorRecord
    fullName: System.Management.Automation.ErrorRecord
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Management.Automation.Cmdlet.WriteError(System.Management.Automation.ErrorRecord)
    name: WriteError
    nameWithType: Cmdlet.WriteError
    fullName: System.Management.Automation.Cmdlet.WriteError
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Management.Automation.ErrorRecord
    name: ErrorRecord
    nameWithType: ErrorRecord
    fullName: System.Management.Automation.ErrorRecord
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Management.Automation.Cmdlet.WriteInformation(System.Object,System.String[])
  commentId: M:System.Management.Automation.Cmdlet.WriteInformation(System.Object,System.String[])
  parent: System.Management.Automation.Cmdlet
  isExternal: true
  name: WriteInformation(Object, String[])
  nameWithType: Cmdlet.WriteInformation(Object, String[])
  fullName: System.Management.Automation.Cmdlet.WriteInformation(System.Object, System.String[])
  nameWithType.vb: Cmdlet.WriteInformation(Object, String())
  fullName.vb: System.Management.Automation.Cmdlet.WriteInformation(System.Object, System.String())
  name.vb: WriteInformation(Object, String())
  spec.csharp:
  - uid: System.Management.Automation.Cmdlet.WriteInformation(System.Object,System.String[])
    name: WriteInformation
    nameWithType: Cmdlet.WriteInformation
    fullName: System.Management.Automation.Cmdlet.WriteInformation
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Management.Automation.Cmdlet.WriteInformation(System.Object,System.String[])
    name: WriteInformation
    nameWithType: Cmdlet.WriteInformation
    fullName: System.Management.Automation.Cmdlet.WriteInformation
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Management.Automation.Cmdlet.WriteInformation(System.Management.Automation.InformationRecord)
  commentId: M:System.Management.Automation.Cmdlet.WriteInformation(System.Management.Automation.InformationRecord)
  parent: System.Management.Automation.Cmdlet
  isExternal: true
  name: WriteInformation(InformationRecord)
  nameWithType: Cmdlet.WriteInformation(InformationRecord)
  fullName: System.Management.Automation.Cmdlet.WriteInformation(System.Management.Automation.InformationRecord)
  spec.csharp:
  - uid: System.Management.Automation.Cmdlet.WriteInformation(System.Management.Automation.InformationRecord)
    name: WriteInformation
    nameWithType: Cmdlet.WriteInformation
    fullName: System.Management.Automation.Cmdlet.WriteInformation
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Management.Automation.InformationRecord
    name: InformationRecord
    nameWithType: InformationRecord
    fullName: System.Management.Automation.InformationRecord
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Management.Automation.Cmdlet.WriteInformation(System.Management.Automation.InformationRecord)
    name: WriteInformation
    nameWithType: Cmdlet.WriteInformation
    fullName: System.Management.Automation.Cmdlet.WriteInformation
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Management.Automation.InformationRecord
    name: InformationRecord
    nameWithType: InformationRecord
    fullName: System.Management.Automation.InformationRecord
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Management.Automation.Cmdlet.WriteObject(System.Object,System.Boolean)
  commentId: M:System.Management.Automation.Cmdlet.WriteObject(System.Object,System.Boolean)
  parent: System.Management.Automation.Cmdlet
  isExternal: true
  name: WriteObject(Object, Boolean)
  nameWithType: Cmdlet.WriteObject(Object, Boolean)
  fullName: System.Management.Automation.Cmdlet.WriteObject(System.Object, System.Boolean)
  spec.csharp:
  - uid: System.Management.Automation.Cmdlet.WriteObject(System.Object,System.Boolean)
    name: WriteObject
    nameWithType: Cmdlet.WriteObject
    fullName: System.Management.Automation.Cmdlet.WriteObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Management.Automation.Cmdlet.WriteObject(System.Object,System.Boolean)
    name: WriteObject
    nameWithType: Cmdlet.WriteObject
    fullName: System.Management.Automation.Cmdlet.WriteObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Management.Automation.Cmdlet.WriteObject(System.Object)
  commentId: M:System.Management.Automation.Cmdlet.WriteObject(System.Object)
  parent: System.Management.Automation.Cmdlet
  isExternal: true
  name: WriteObject(Object)
  nameWithType: Cmdlet.WriteObject(Object)
  fullName: System.Management.Automation.Cmdlet.WriteObject(System.Object)
  spec.csharp:
  - uid: System.Management.Automation.Cmdlet.WriteObject(System.Object)
    name: WriteObject
    nameWithType: Cmdlet.WriteObject
    fullName: System.Management.Automation.Cmdlet.WriteObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Management.Automation.Cmdlet.WriteObject(System.Object)
    name: WriteObject
    nameWithType: Cmdlet.WriteObject
    fullName: System.Management.Automation.Cmdlet.WriteObject
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Management.Automation.Cmdlet.WriteProgress(System.Management.Automation.ProgressRecord)
  commentId: M:System.Management.Automation.Cmdlet.WriteProgress(System.Management.Automation.ProgressRecord)
  parent: System.Management.Automation.Cmdlet
  isExternal: true
  name: WriteProgress(ProgressRecord)
  nameWithType: Cmdlet.WriteProgress(ProgressRecord)
  fullName: System.Management.Automation.Cmdlet.WriteProgress(System.Management.Automation.ProgressRecord)
  spec.csharp:
  - uid: System.Management.Automation.Cmdlet.WriteProgress(System.Management.Automation.ProgressRecord)
    name: WriteProgress
    nameWithType: Cmdlet.WriteProgress
    fullName: System.Management.Automation.Cmdlet.WriteProgress
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Management.Automation.ProgressRecord
    name: ProgressRecord
    nameWithType: ProgressRecord
    fullName: System.Management.Automation.ProgressRecord
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Management.Automation.Cmdlet.WriteProgress(System.Management.Automation.ProgressRecord)
    name: WriteProgress
    nameWithType: Cmdlet.WriteProgress
    fullName: System.Management.Automation.Cmdlet.WriteProgress
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Management.Automation.ProgressRecord
    name: ProgressRecord
    nameWithType: ProgressRecord
    fullName: System.Management.Automation.ProgressRecord
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Management.Automation.Cmdlet.WriteVerbose(System.String)
  commentId: M:System.Management.Automation.Cmdlet.WriteVerbose(System.String)
  parent: System.Management.Automation.Cmdlet
  isExternal: true
  name: WriteVerbose(String)
  nameWithType: Cmdlet.WriteVerbose(String)
  fullName: System.Management.Automation.Cmdlet.WriteVerbose(System.String)
  spec.csharp:
  - uid: System.Management.Automation.Cmdlet.WriteVerbose(System.String)
    name: WriteVerbose
    nameWithType: Cmdlet.WriteVerbose
    fullName: System.Management.Automation.Cmdlet.WriteVerbose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Management.Automation.Cmdlet.WriteVerbose(System.String)
    name: WriteVerbose
    nameWithType: Cmdlet.WriteVerbose
    fullName: System.Management.Automation.Cmdlet.WriteVerbose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Management.Automation.Cmdlet.WriteWarning(System.String)
  commentId: M:System.Management.Automation.Cmdlet.WriteWarning(System.String)
  parent: System.Management.Automation.Cmdlet
  isExternal: true
  name: WriteWarning(String)
  nameWithType: Cmdlet.WriteWarning(String)
  fullName: System.Management.Automation.Cmdlet.WriteWarning(System.String)
  spec.csharp:
  - uid: System.Management.Automation.Cmdlet.WriteWarning(System.String)
    name: WriteWarning
    nameWithType: Cmdlet.WriteWarning
    fullName: System.Management.Automation.Cmdlet.WriteWarning
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Management.Automation.Cmdlet.WriteWarning(System.String)
    name: WriteWarning
    nameWithType: Cmdlet.WriteWarning
    fullName: System.Management.Automation.Cmdlet.WriteWarning
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Management.Automation.Cmdlet.CommandRuntime
  commentId: P:System.Management.Automation.Cmdlet.CommandRuntime
  parent: System.Management.Automation.Cmdlet
  isExternal: true
  name: CommandRuntime
  nameWithType: Cmdlet.CommandRuntime
  fullName: System.Management.Automation.Cmdlet.CommandRuntime
- uid: System.Management.Automation.Cmdlet.CommonParameters
  commentId: P:System.Management.Automation.Cmdlet.CommonParameters
  parent: System.Management.Automation.Cmdlet
  isExternal: true
  name: CommonParameters
  nameWithType: Cmdlet.CommonParameters
  fullName: System.Management.Automation.Cmdlet.CommonParameters
- uid: System.Management.Automation.Cmdlet.OptionalCommonParameters
  commentId: P:System.Management.Automation.Cmdlet.OptionalCommonParameters
  parent: System.Management.Automation.Cmdlet
  isExternal: true
  name: OptionalCommonParameters
  nameWithType: Cmdlet.OptionalCommonParameters
  fullName: System.Management.Automation.Cmdlet.OptionalCommonParameters
- uid: System.Management.Automation.Cmdlet.Stopping
  commentId: P:System.Management.Automation.Cmdlet.Stopping
  parent: System.Management.Automation.Cmdlet
  isExternal: true
  name: Stopping
  nameWithType: Cmdlet.Stopping
  fullName: System.Management.Automation.Cmdlet.Stopping
- uid: System.Management.Automation.Internal.InternalCommand.CommandOrigin
  commentId: P:System.Management.Automation.Internal.InternalCommand.CommandOrigin
  parent: System.Management.Automation.Internal.InternalCommand
  isExternal: true
  name: CommandOrigin
  nameWithType: InternalCommand.CommandOrigin
  fullName: System.Management.Automation.Internal.InternalCommand.CommandOrigin
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Management.Automation.Internal
  commentId: N:System.Management.Automation.Internal
  isExternal: true
  name: System.Management.Automation.Internal
  nameWithType: System.Management.Automation.Internal
  fullName: System.Management.Automation.Internal
- uid: System.Management.Automation
  commentId: N:System.Management.Automation
  isExternal: true
  name: System.Management.Automation
  nameWithType: System.Management.Automation
  fullName: System.Management.Automation
- uid: PowerPlug.BaseCmdlets
  commentId: N:PowerPlug.BaseCmdlets
  name: PowerPlug.BaseCmdlets
  nameWithType: PowerPlug.BaseCmdlets
  fullName: PowerPlug.BaseCmdlets
- uid: PowerPlug.BaseCmdlets.BynameBase.Name
  commentId: P:PowerPlug.BaseCmdlets.BynameBase.Name
  parent: PowerPlug.BaseCmdlets.BynameBase
  name: Name
  nameWithType: BynameBase.Name
  fullName: PowerPlug.BaseCmdlets.BynameBase.Name
- uid: PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet.Name*
  commentId: Overload:PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet.Name
  name: Name
  nameWithType: RemoveBynameCmdlet.Name
  fullName: PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet.Scope*
  commentId: Overload:PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet.Scope
  name: Scope
  nameWithType: RemoveBynameCmdlet.Scope
  fullName: PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet.Scope
- uid: PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet.Force*
  commentId: Overload:PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet.Force
  name: Force
  nameWithType: RemoveBynameCmdlet.Force
  fullName: PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet.Force
- uid: System.Management.Automation.SwitchParameter
  commentId: T:System.Management.Automation.SwitchParameter
  parent: System.Management.Automation
  isExternal: true
  name: SwitchParameter
  nameWithType: SwitchParameter
  fullName: System.Management.Automation.SwitchParameter
- uid: System.Management.Automation.Cmdlet.ProcessRecord
  commentId: M:System.Management.Automation.Cmdlet.ProcessRecord
  parent: System.Management.Automation.Cmdlet
  isExternal: true
  name: ProcessRecord()
  nameWithType: Cmdlet.ProcessRecord()
  fullName: System.Management.Automation.Cmdlet.ProcessRecord()
  spec.csharp:
  - uid: System.Management.Automation.Cmdlet.ProcessRecord
    name: ProcessRecord
    nameWithType: Cmdlet.ProcessRecord
    fullName: System.Management.Automation.Cmdlet.ProcessRecord
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Management.Automation.Cmdlet.ProcessRecord
    name: ProcessRecord
    nameWithType: Cmdlet.ProcessRecord
    fullName: System.Management.Automation.Cmdlet.ProcessRecord
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet.ProcessRecord*
  commentId: Overload:PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet.ProcessRecord
  name: ProcessRecord
  nameWithType: RemoveBynameCmdlet.ProcessRecord
  fullName: PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet.ProcessRecord
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet.ToString*
  commentId: Overload:PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet.ToString
  name: ToString
  nameWithType: RemoveBynameCmdlet.ToString
  fullName: PowerPlug.Cmdlets.Byname.RemoveBynameCmdlet.ToString
