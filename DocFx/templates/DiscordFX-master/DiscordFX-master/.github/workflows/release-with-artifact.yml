name: Create release when pushing tag

on:
  push:
    tags:
      - v*

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Put tag in environment variable
        run: |
          echo "HEAD_TAG=$(git tag --points-at HEAD)" >> $GITHUB_ENV
      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          zip -r discordfx-${{ env.HEAD_TAG }}.zip README.md LICENSE discordfx
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.HEAD_TAG }}
          release_name: Release ${{ env.HEAD_TAG }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./discordfx-${{ env.HEAD_TAG }}.zip
          asset_name: discordfx-${{ env.HEAD_TAG }}.zip
          asset_content_type: application/zip
